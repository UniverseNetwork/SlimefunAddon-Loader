From a21e20dbd88edc1284c01bd3dba25718a0d6b49e Mon Sep 17 00:00:00 2001
From: ARVIN3108 <70049331+ARVIN3108@users.noreply.github.com>
Date: Sat, 13 Jan 2024 14:43:01 +0700
Subject: [PATCH] PrivateStorage

---
 PrivateStorage.iml                            |  13 ++
 pom.xml                                       | 108 ++-------------
 .../privatestorage/ChestProtectionLevel.java  |   8 +-
 .../addons/privatestorage/PrivateStorage.java |  20 +++
 .../addons}/privatestorage/SlimefunChest.java |  91 +++++-------
 .../privatestorage/storage/PrivateChests.java | 121 ++++++++++++++++
 .../privatestorage/storage/PublicChests.java  | 122 +++++++++++++++++
 .../privatestorage/PrivateStorage.java        |  45 ------
 .../privatestorage/storage/PrivateChests.java | 128 -----------------
 .../privatestorage/storage/PublicChests.java  | 129 ------------------
 src/main/resources/config.yml                 |   2 -
 src/main/resources/plugin.yml                 |  15 --
 12 files changed, 322 insertions(+), 480 deletions(-)
 create mode 100644 PrivateStorage.iml
 rename src/main/java/{io/github/thebusybiscuit => id/universenetwork/sfa_loader/addons}/privatestorage/ChestProtectionLevel.java (87%)
 create mode 100644 src/main/java/id/universenetwork/sfa_loader/addons/privatestorage/PrivateStorage.java
 rename src/main/java/{io/github/thebusybiscuit => id/universenetwork/sfa_loader/addons}/privatestorage/SlimefunChest.java (64%)
 create mode 100644 src/main/java/id/universenetwork/sfa_loader/addons/privatestorage/storage/PrivateChests.java
 create mode 100644 src/main/java/id/universenetwork/sfa_loader/addons/privatestorage/storage/PublicChests.java
 delete mode 100644 src/main/java/io/github/thebusybiscuit/privatestorage/PrivateStorage.java
 delete mode 100644 src/main/java/io/github/thebusybiscuit/privatestorage/storage/PrivateChests.java
 delete mode 100644 src/main/java/io/github/thebusybiscuit/privatestorage/storage/PublicChests.java
 delete mode 100644 src/main/resources/config.yml
 delete mode 100644 src/main/resources/plugin.yml

diff --git a/PrivateStorage.iml b/PrivateStorage.iml
new file mode 100644
index 0000000..a589521
--- /dev/null
+++ b/PrivateStorage.iml
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module version="4">
+  <component name="FacetManager">
+    <facet type="minecraft" name="Minecraft">
+      <configuration>
+        <autoDetectTypes>
+          <platformType>SPIGOT</platformType>
+        </autoDetectTypes>
+        <projectReimportVersion>1</projectReimportVersion>
+      </configuration>
+    </facet>
+  </component>
+</module>
\ No newline at end of file
diff --git a/pom.xml b/pom.xml
index 6253e08..7cc1531 100644
--- a/pom.xml
+++ b/pom.xml
@@ -1,96 +1,28 @@
 <project xmlns="http://maven.apache.org/POM/4.0.0"
-    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
-
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
     <modelVersion>4.0.0</modelVersion>
+
+    <parent>
+        <groupId>id.universenetwork.sfa_loader</groupId>
+        <artifactId>Addons</artifactId>
+        <version>UNOFFICIAL</version>
+    </parent>
+
     <groupId>io.github.thebusybiscuit</groupId>
     <artifactId>PrivateStorage</artifactId>
     <version>UNOFFICIAL</version>
 
-    <properties>
-        <maven.compiler.source>1.8</maven.compiler.source>
-        <maven.compiler.target>1.8</maven.compiler.target>
-        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
-    </properties>
-
     <repositories>
-        <repository>
-            <id>paper-repo</id>
-            <url>https://repo.destroystokyo.com/repository/maven-public/</url>
-        </repository>
         <repository>
             <id>spigot-repo</id>
             <url>https://hub.spigotmc.org/nexus/content/repositories/snapshots/</url>
         </repository>
-        <repository>
-            <id>jitpack.io</id>
-            <url>https://jitpack.io</url>
-        </repository>
-        <repository>
-            <id>bstats-repo</id>
-            <url>https://repo.codemc.org/repository/maven-public</url>
-        </repository>
     </repositories>
 
     <build>
         <finalName>${project.name} v${project.version}</finalName>
-        <defaultGoal>clean package</defaultGoal>
         <sourceDirectory>${basedir}/src/main/java</sourceDirectory>
-
-        <resources>
-            <resource>
-                <directory>${basedir}/src/main/resources</directory>
-                <filtering>true</filtering>
-                <includes>
-                    <include>*</include>
-                </includes>
-            </resource>
-            <resource>
-                <directory>${basedir}</directory>
-
-                <includes>
-                    <include>LICENSE</include>
-                </includes>
-            </resource>
-        </resources>
-
-        <plugins>
-            <plugin>
-                <groupId>org.apache.maven.plugins</groupId>
-                <artifactId>maven-shade-plugin</artifactId>
-                <version>3.2.4</version>
-
-                <configuration>
-
-                    <!-- Shade dependencies into the output jar -->
-                    <relocations>
-                        <relocation>
-                            <pattern>org.bstats</pattern>
-                            <shadedPattern>io.github.thebusybiscuit.privatestorage.bstats</shadedPattern>
-                        </relocation>
-                    </relocations>
-
-                    <!-- Exclude unneeded metadata files from shaded dependencies -->
-                    <filters>
-                        <filter>
-                            <artifact>*:*</artifact>
-                            <excludes>
-                                <exclude>META-INF/*</exclude>
-                            </excludes>
-                        </filter>
-                    </filters>
-                </configuration>
-
-                <executions>
-                    <execution>
-                        <phase>package</phase>
-                        <goals>
-                            <goal>shade</goal>
-                        </goals>
-                    </execution>
-                </executions>
-            </plugin>
-        </plugins>
     </build>
 
     <dependencies>
@@ -100,25 +32,5 @@
             <version>1.16.5-R0.1-SNAPSHOT</version>
             <scope>provided</scope>
         </dependency>
-
-        <dependency>
-            <groupId>com.github.TheBusyBiscuit</groupId>
-            <artifactId>Slimefun4</artifactId>
-            <version>RC-27</version>
-            <scope>provided</scope>
-            <exclusions>
-                <exclusion>
-                    <groupId>io.github.baked-libs</groupId>
-                    <artifactId>dough-api</artifactId>
-                </exclusion>
-            </exclusions>
-        </dependency>
-
-        <dependency>
-            <groupId>org.bstats</groupId>
-            <artifactId>bstats-bukkit</artifactId>
-            <version>2.2.1</version>
-            <scope>compile</scope>
-        </dependency>
     </dependencies>
-</project>
+</project>
\ No newline at end of file
diff --git a/src/main/java/io/github/thebusybiscuit/privatestorage/ChestProtectionLevel.java b/src/main/java/id/universenetwork/sfa_loader/addons/privatestorage/ChestProtectionLevel.java
similarity index 87%
rename from src/main/java/io/github/thebusybiscuit/privatestorage/ChestProtectionLevel.java
rename to src/main/java/id/universenetwork/sfa_loader/addons/privatestorage/ChestProtectionLevel.java
index aa062b4..da203ac 100644
--- a/src/main/java/io/github/thebusybiscuit/privatestorage/ChestProtectionLevel.java
+++ b/src/main/java/id/universenetwork/sfa_loader/addons/privatestorage/ChestProtectionLevel.java
@@ -1,10 +1,9 @@
-package io.github.thebusybiscuit.privatestorage;
+package id.universenetwork.sfa_loader.addons.privatestorage;
 
 import org.bukkit.Location;
 import org.bukkit.entity.Player;
 
 public enum ChestProtectionLevel {
-
     /**
      * A public chest can be accessed by any {@link Player}
      * who has the permission to access chests in the {@link Location}.
@@ -15,9 +14,8 @@ public enum ChestProtectionLevel {
     /**
      * A private chest can only be accessed by the very same {@link Player}
      * who has also placed the chest down.
-     *
+     * <p>
      * Note: These chests cannot be used in cargo networks.
      */
     PRIVATE;
-
-}
+}
\ No newline at end of file
diff --git a/src/main/java/id/universenetwork/sfa_loader/addons/privatestorage/PrivateStorage.java b/src/main/java/id/universenetwork/sfa_loader/addons/privatestorage/PrivateStorage.java
new file mode 100644
index 0000000..3515e6e
--- /dev/null
+++ b/src/main/java/id/universenetwork/sfa_loader/addons/privatestorage/PrivateStorage.java
@@ -0,0 +1,20 @@
+package id.universenetwork.sfa_loader.addons.privatestorage;
+
+import id.universenetwork.sfa_loader.addons.privatestorage.storage.PrivateChests;
+import id.universenetwork.sfa_loader.addons.privatestorage.storage.PublicChests;
+import id.universenetwork.sfa_loader.libraries.infinitylib.core.AbstractAddon;
+import id.universenetwork.sfa_loader.template.AddonTemplate;
+import io.github.thebusybiscuit.slimefun4.api.items.ItemGroup;
+import io.github.thebusybiscuit.slimefun4.libraries.dough.items.CustomItemStack;
+import io.github.thebusybiscuit.slimefun4.libraries.dough.skins.PlayerHead;
+import io.github.thebusybiscuit.slimefun4.libraries.dough.skins.PlayerSkin;
+
+public class PrivateStorage extends AddonTemplate {
+    @Override
+    public void onLoad() {
+        ItemGroup itemGroup = new ItemGroup(AbstractAddon.createKey("private_storage"), new CustomItemStack(PlayerHead.getItemStack(PlayerSkin.fromBase64("eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvZThlNTU0NGFmN2Y1NDg5Y2MyNzQ5MWNhNjhmYTkyMzg0YjhlYTVjZjIwYjVjODE5OGFkYjdiZmQxMmJjMmJjMiJ9fX0=")), "&7Private Storage - Chests and Safes", "", "&a> Click to open"));
+
+        new PublicChests(itemGroup);
+        new PrivateChests(itemGroup);
+    }
+}
\ No newline at end of file
diff --git a/src/main/java/io/github/thebusybiscuit/privatestorage/SlimefunChest.java b/src/main/java/id/universenetwork/sfa_loader/addons/privatestorage/SlimefunChest.java
similarity index 64%
rename from src/main/java/io/github/thebusybiscuit/privatestorage/SlimefunChest.java
rename to src/main/java/id/universenetwork/sfa_loader/addons/privatestorage/SlimefunChest.java
index 6e67953..5c83451 100644
--- a/src/main/java/io/github/thebusybiscuit/privatestorage/SlimefunChest.java
+++ b/src/main/java/id/universenetwork/sfa_loader/addons/privatestorage/SlimefunChest.java
@@ -1,16 +1,5 @@
-package io.github.thebusybiscuit.privatestorage;
+package id.universenetwork.sfa_loader.addons.privatestorage;
 
-import java.util.List;
-import java.util.Objects;
-
-import org.bukkit.Sound;
-import org.bukkit.block.Block;
-import org.bukkit.entity.Player;
-import org.bukkit.event.block.BlockBreakEvent;
-import org.bukkit.event.block.BlockPlaceEvent;
-import org.bukkit.inventory.ItemStack;
-
-import me.mrCookieSlime.Slimefun.api.item_transport.ItemTransportFlow;
 import io.github.thebusybiscuit.slimefun4.api.items.ItemGroup;
 import io.github.thebusybiscuit.slimefun4.api.items.SlimefunItem;
 import io.github.thebusybiscuit.slimefun4.api.items.SlimefunItemStack;
@@ -22,16 +11,24 @@ import io.github.thebusybiscuit.slimefun4.libraries.dough.protection.Interaction
 import me.mrCookieSlime.Slimefun.api.BlockStorage;
 import me.mrCookieSlime.Slimefun.api.inventory.BlockMenu;
 import me.mrCookieSlime.Slimefun.api.inventory.BlockMenuPreset;
+import me.mrCookieSlime.Slimefun.api.item_transport.ItemTransportFlow;
+import org.bukkit.Sound;
+import org.bukkit.block.Block;
+import org.bukkit.entity.Player;
+import org.bukkit.event.block.BlockBreakEvent;
+import org.bukkit.event.block.BlockPlaceEvent;
+import org.bukkit.inventory.ItemStack;
 
-public class SlimefunChest extends SlimefunItem {
+import java.util.List;
+import java.util.Objects;
 
+public class SlimefunChest extends SlimefunItem {
     public SlimefunChest(ChestProtectionLevel level, int size, boolean canExplode, ItemGroup itemGroup, SlimefunItemStack item, RecipeType recipeType, ItemStack[] recipe) {
         super(itemGroup, item, recipeType, recipe);
 
         int[] slots = getSlotsArray(size);
 
         new BlockMenuPreset(getId(), item.getItemMeta().getDisplayName()) {
-
             @Override
             public void init() {
                 setSize(size);
@@ -41,25 +38,17 @@ public class SlimefunChest extends SlimefunItem {
 
             @Override
             public boolean canOpen(Block b, Player p) {
-                if (p.hasPermission("PrivateStorage.bypass")) {
-                    return true;
-                }
+                if (p.hasPermission("PrivateStorage.bypass")) return true;
 
-                switch (level) {
-                    case PRIVATE:
-                        return BlockStorage.getLocationInfo(b.getLocation(), "owner").equals(p.getUniqueId().toString());
-                    default:
-                        return Slimefun.getProtectionManager().hasPermission(p, b, Interaction.INTERACT_BLOCK);
-                }
+                if (Objects.requireNonNull(level) == ChestProtectionLevel.PRIVATE)
+                    return BlockStorage.getLocationInfo(b.getLocation(), "owner").equals(p.getUniqueId().toString());
+                return Slimefun.getProtectionManager().hasPermission(p, b, Interaction.INTERACT_BLOCK);
             }
 
             @Override
             public int[] getSlotsAccessedByItemTransport(ItemTransportFlow flow) {
-                if (level.equals(ChestProtectionLevel.PUBLIC)) {
-                    return slots;
-                } else {
-                    return new int[0];
-                }
+                if (level.equals(ChestProtectionLevel.PUBLIC)) return slots;
+                else return new int[0];
             }
         };
 
@@ -68,27 +57,23 @@ public class SlimefunChest extends SlimefunItem {
 
     private BlockPlaceHandler onBlockPlace() {
         return new BlockPlaceHandler(false) {
-
             @Override
             public void onPlayerPlace(BlockPlaceEvent e) {
                 BlockStorage.addBlockInfo(e.getBlock().getLocation(), "owner", e.getPlayer().getUniqueId().toString());
             }
-
         };
     }
 
     private BlockBreakHandler onBlockBreak(int size, boolean canExplode) {
         return new BlockBreakHandler(false, canExplode) {
-
             @Override
             public void onPlayerBreak(BlockBreakEvent e, ItemStack item, List<ItemStack> drops) {
                 boolean allow = true;
                 Player p = e.getPlayer();
                 Block b = e.getBlock();
 
-                if (!p.hasPermission("PrivateStorage.bypass")) {
+                if (!p.hasPermission("PrivateStorage.bypass"))
                     allow = Objects.equals(BlockStorage.getLocationInfo(b.getLocation(), "owner"), p.getUniqueId().toString());
-                }
 
                 if (allow) {
                     BlockMenu inv = BlockStorage.getInventory(b);
@@ -96,13 +81,10 @@ public class SlimefunChest extends SlimefunItem {
                     for (int slot = 0; slot < size; slot++) {
                         ItemStack stack = inv.getItemInSlot(slot);
 
-                        if (stack != null && !stack.getType().isAir()) {
+                        if (stack != null && !stack.getType().isAir())
                             b.getWorld().dropItemNaturally(b.getLocation(), stack);
-                        }
                     }
-                } else {
-                    e.setCancelled(true);
-                }
+                } else e.setCancelled(true);
             }
 
             @Override
@@ -112,30 +94,23 @@ public class SlimefunChest extends SlimefunItem {
                 for (int slot = 0; slot < size; slot++) {
                     ItemStack stack = inv.getItemInSlot(slot);
 
-                    if (stack != null && !stack.getType().isAir()) {
-                        drops.add(stack);
-                    }
+                    if (stack != null && !stack.getType().isAir()) drops.add(stack);
                 }
             }
         };
     }
 
     private int[] getSlotsArray(int size) {
-        if (size == 9) {
-            return new int[] { 0, 1, 2, 3, 4, 5, 6, 7, 8 };
-        } else if (size == 18) {
-            return new int[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17 };
-        } else if (size == 27) {
-            return new int[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 };
-        } else if (size == 36) {
-            return new int[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35 };
-        } else if (size == 45) {
-            return new int[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44 };
-        } else if (size == 54) {
-            return new int[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53 };
-        } else {
-            return new int[0];
-        }
+        if (size == 9) return new int[]{0, 1, 2, 3, 4, 5, 6, 7, 8};
+        else if (size == 18) return new int[]{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17};
+        else if (size == 27)
+            return new int[]{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26};
+        else if (size == 36)
+            return new int[]{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35};
+        else if (size == 45)
+            return new int[]{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44};
+        else if (size == 54)
+            return new int[]{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53};
+        else return new int[0];
     }
-
-}
+}
\ No newline at end of file
diff --git a/src/main/java/id/universenetwork/sfa_loader/addons/privatestorage/storage/PrivateChests.java b/src/main/java/id/universenetwork/sfa_loader/addons/privatestorage/storage/PrivateChests.java
new file mode 100644
index 0000000..dca9929
--- /dev/null
+++ b/src/main/java/id/universenetwork/sfa_loader/addons/privatestorage/storage/PrivateChests.java
@@ -0,0 +1,121 @@
+package id.universenetwork.sfa_loader.addons.privatestorage.storage;
+
+import id.universenetwork.sfa_loader.addons.privatestorage.ChestProtectionLevel;
+import id.universenetwork.sfa_loader.addons.privatestorage.SlimefunChest;
+import id.universenetwork.sfa_loader.libraries.infinitylib.core.AbstractAddon;
+import id.universenetwork.sfa_loader.libraries.infinitylib.core.SlimefunAddonInstance;
+import io.github.thebusybiscuit.slimefun4.api.items.ItemGroup;
+import io.github.thebusybiscuit.slimefun4.api.items.SlimefunItemStack;
+import io.github.thebusybiscuit.slimefun4.api.recipes.RecipeType;
+import io.github.thebusybiscuit.slimefun4.api.researches.Research;
+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunItems;
+import org.bukkit.Material;
+import org.bukkit.inventory.ItemStack;
+
+public class PrivateChests {
+    private final SlimefunItemStack safeOak;
+    private final SlimefunItemStack safeBirch;
+    private final SlimefunItemStack safeSpruce;
+    private final SlimefunItemStack safeJungle;
+    private final SlimefunItemStack safeAcacia;
+    private final SlimefunItemStack safeDarkOak;
+
+    private final SlimefunItemStack safeIron;
+    private final SlimefunItemStack safeGold;
+    private final SlimefunItemStack safeDiamond;
+    private final SlimefunItemStack safeEmerald;
+
+    private final SlimefunItemStack safeObsidian;
+    private final SlimefunItemStack safeSteel;
+
+    public PrivateChests(ItemGroup itemGroup) {
+        safeOak = new SlimefunItemStack("PRIVATE_SAFE_OAK", "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvNThjMTk4OGUzM2RjZGZlZmZkNjE5YjkyYWI5ZjQ3Y2Y1YzNjNmQ3ZGRhZDQyNjM3ZDNlYWFhYjI3NTcifX19", "&6Oak Safe", getLore(2, false));
+        safeBirch = new SlimefunItemStack("PRIVATE_SAFE_BIRCH", "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvMjdmN2NiMmQ0ZWMwZTBjNjFlNzlhMDZjZjA0YjBkMTYxMDVmNzdkYTk2OTEzYTY4OWE0ZGM5NTI3N2I5MzczYiJ9fX0=", "&6Birch Safe", getLore(2, false));
+        safeSpruce = new SlimefunItemStack("PRIVATE_SAFE_SPRUCE", "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvMmVmNWIwYTQ1MzA1MTE1N2JkNjRiY2Q4YzcyMGQwNmZlNzhlYmM0ODU1M2M0YzBlNWI5OTMxMjY1YjFhZTc1YyJ9fX0=", "&6Spruce Safe", getLore(2, false));
+        safeJungle = new SlimefunItemStack("PRIVATE_SAFE_JUNGLE", "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvYjEzMjIxMmE2ZTYwMzMwNzg5NmU3YTQzNTY1OTcyNjU3MDQwMTM2ZjZhODRhYjFhODgyOWVmMDA2MTIzOWNjNSJ9fX0=", "&6Jungle Safe", getLore(2, false));
+        safeAcacia = new SlimefunItemStack("PRIVATE_SAFE_ACACIA", "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvODY2OGNkZDhiNDQ3OGM5OWVlNjM0NTA2YThjZjIyNzkyMTRkYjY2ZjUwNWRkOWFmMjU5YWVlN2ZlYTFlZGYwZSJ9fX0=", "&6Acacia Safe", getLore(2, false));
+        safeDarkOak = new SlimefunItemStack("PRIVATE_SAFE_DARK_OAK", "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvNmMzOGM5YjJmZDExYzliMDIwODEzYTg3MTBhNjdmYmVhYzU2YjYxZTkyMzVmNWQ3ZDg5ZWQ5YjdhMTU5ZDQ0NSJ9fX0=", "&6Dark Oak Safe", getLore(2, false));
+
+        safeIron = new SlimefunItemStack("PRIVATE_SAFE_IRON", "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvZThlNTU0NGFmN2Y1NDg5Y2MyNzQ5MWNhNjhmYTkyMzg0YjhlYTVjZjIwYjVjODE5OGFkYjdiZmQxMmJjMmJjMiJ9fX0=", "&6Iron Safe", getLore(3, false));
+        safeGold = new SlimefunItemStack("PRIVATE_SAFE_GOLD", "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvNDUyY2VlZDA2NDgzNWVhMjMyZTY1NmE3M2Y4MmVkNzYxODI3ODU5YzkxMzQ0OTMxNGI4ZmQyMWIzZDExZDYifX19", "&6Golden Safe", getLore(4, false));
+        safeDiamond = new SlimefunItemStack("PRIVATE_SAFE_DIAMOND", "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvM2FkYmNmYjI4ODIxNWE4ZDE1M2RkZmRkYjM2YmQyZWQ3YTM3YWRkMzU2NjJmODYzM2Y3MTFkMmRmY2ViNDE3YyJ9fX0=", "&6Diamond Safe", getLore(5, false));
+        safeEmerald = new SlimefunItemStack("PRIVATE_SAFE_EMERALD", "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvNmFkMzVlYmRiMTI1ZmJhNDIxMjk4ZDQyYzIwMmM3N2M3NWI0MmNjOTljOTQ5MzlmNjM3NjQwYWMxODFmIn19fQ==", "&6Emerald Safe", getLore(6, false));
+
+        safeObsidian = new SlimefunItemStack("PRIVATE_SAFE_OBSIDIAN", "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvODU1YmU4NzM2NTJjYmZkZjRkODhmYTgxMjc2ZDI0OGQyYjdlZWY3YTZkNGYzZWRjYzkyZmU1NzU4NWJmNGQifX19", "&6Obsidian Safe", getLore(4, true));
+        safeSteel = new SlimefunItemStack("PRIVATE_SAFE_STEEL", "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvNjljYjNkMTlkYjUyOWEyMTVjZjYyNjk3NTkxY2MxM2ZiOGM3ODZhOGYyN2I3NTI4YzMyYWMyOTg2Yjk2NzBjNCJ9fX0=", "&6Steel Safe", getLore(5, true));
+
+        registerItems(itemGroup);
+        registerResearches();
+    }
+
+    private String[] getLore(int size, boolean explosions) {
+        if (explosions) return new String[]{
+                "&7Size: &e" + size + "x9",
+                "&bWithstands Explosions",
+                "",
+                "&rThis Chest can only be opened by you"
+        };
+        else return new String[]{
+                "&7Size: &e" + size + "x9",
+                "",
+                "&rThis Chest can only be opened by you"
+        };
+    }
+
+    public void registerItems(ItemGroup itemGroup) {
+        new SlimefunChest(ChestProtectionLevel.PRIVATE, 18, true, itemGroup, safeOak, RecipeType.ENHANCED_CRAFTING_TABLE,
+                new ItemStack[]{new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.OAK_LOG), new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.OAK_LOG), SlimefunItems.MAGIC_LUMP_3, new ItemStack(Material.OAK_LOG), new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.OAK_LOG), new ItemStack(Material.GOLD_NUGGET)})
+                .register(SlimefunAddonInstance.getSFAInstance());
+
+        new SlimefunChest(ChestProtectionLevel.PRIVATE, 18, true, itemGroup, safeBirch, RecipeType.ENHANCED_CRAFTING_TABLE,
+                new ItemStack[]{new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.BIRCH_LOG), new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.BIRCH_LOG), SlimefunItems.MAGIC_LUMP_3, new ItemStack(Material.BIRCH_LOG), new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.BIRCH_LOG), new ItemStack(Material.GOLD_NUGGET)})
+                .register(SlimefunAddonInstance.getSFAInstance());
+
+        new SlimefunChest(ChestProtectionLevel.PRIVATE, 18, true, itemGroup, safeSpruce, RecipeType.ENHANCED_CRAFTING_TABLE,
+                new ItemStack[]{new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.SPRUCE_LOG), new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.SPRUCE_LOG), SlimefunItems.MAGIC_LUMP_3, new ItemStack(Material.SPRUCE_LOG), new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.SPRUCE_LOG), new ItemStack(Material.GOLD_NUGGET)})
+                .register(SlimefunAddonInstance.getSFAInstance());
+
+        new SlimefunChest(ChestProtectionLevel.PRIVATE, 18, true, itemGroup, safeJungle, RecipeType.ENHANCED_CRAFTING_TABLE,
+                new ItemStack[]{new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.JUNGLE_LOG), new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.JUNGLE_LOG), SlimefunItems.MAGIC_LUMP_3, new ItemStack(Material.JUNGLE_LOG), new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.JUNGLE_LOG), new ItemStack(Material.GOLD_NUGGET)})
+                .register(SlimefunAddonInstance.getSFAInstance());
+
+        new SlimefunChest(ChestProtectionLevel.PRIVATE, 18, true, itemGroup, safeAcacia, RecipeType.ENHANCED_CRAFTING_TABLE,
+                new ItemStack[]{new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.ACACIA_LOG), new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.ACACIA_LOG), SlimefunItems.MAGIC_LUMP_3, new ItemStack(Material.ACACIA_LOG), new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.ACACIA_LOG), new ItemStack(Material.GOLD_NUGGET)})
+                .register(SlimefunAddonInstance.getSFAInstance());
+
+        new SlimefunChest(ChestProtectionLevel.PRIVATE, 18, true, itemGroup, safeDarkOak, RecipeType.ENHANCED_CRAFTING_TABLE,
+                new ItemStack[]{new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.DARK_OAK_LOG), new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.DARK_OAK_LOG), SlimefunItems.MAGIC_LUMP_3, new ItemStack(Material.DARK_OAK_LOG), new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.DARK_OAK_LOG), new ItemStack(Material.GOLD_NUGGET)})
+                .register(SlimefunAddonInstance.getSFAInstance());
+
+        new SlimefunChest(ChestProtectionLevel.PRIVATE, 27, true, itemGroup, safeIron, RecipeType.ENHANCED_CRAFTING_TABLE,
+                new ItemStack[]{new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.IRON_INGOT), new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.IRON_INGOT), new ItemStack(Material.CHEST), new ItemStack(Material.IRON_INGOT), new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.IRON_INGOT), new ItemStack(Material.GOLD_NUGGET)})
+                .register(SlimefunAddonInstance.getSFAInstance());
+
+        new SlimefunChest(ChestProtectionLevel.PRIVATE, 36, true, itemGroup, safeGold, RecipeType.ENHANCED_CRAFTING_TABLE,
+                new ItemStack[]{new ItemStack(Material.GOLD_NUGGET), SlimefunItems.GOLD_10K, new ItemStack(Material.GOLD_NUGGET), SlimefunItems.GOLD_10K, safeIron, SlimefunItems.GOLD_10K, new ItemStack(Material.GOLD_NUGGET), SlimefunItems.GOLD_10K, new ItemStack(Material.GOLD_NUGGET)})
+                .register(SlimefunAddonInstance.getSFAInstance());
+
+        new SlimefunChest(ChestProtectionLevel.PRIVATE, 45, true, itemGroup, safeDiamond, RecipeType.ENHANCED_CRAFTING_TABLE,
+                new ItemStack[]{new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.GLASS), new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.DIAMOND), safeGold, new ItemStack(Material.DIAMOND), new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.GLASS), new ItemStack(Material.GOLD_NUGGET)})
+                .register(SlimefunAddonInstance.getSFAInstance());
+
+        new SlimefunChest(ChestProtectionLevel.PRIVATE, 54, true, itemGroup, safeEmerald, RecipeType.ENHANCED_CRAFTING_TABLE,
+                new ItemStack[]{new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.GLASS), new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.EMERALD), safeDiamond, new ItemStack(Material.EMERALD), new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.GLASS), new ItemStack(Material.GOLD_NUGGET)})
+                .register(SlimefunAddonInstance.getSFAInstance());
+
+        new SlimefunChest(ChestProtectionLevel.PRIVATE, 36, false, itemGroup, safeObsidian, RecipeType.ENHANCED_CRAFTING_TABLE,
+                new ItemStack[]{new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.OBSIDIAN), new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.OBSIDIAN), safeIron, new ItemStack(Material.OBSIDIAN), new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.OBSIDIAN), new ItemStack(Material.GOLD_NUGGET)})
+                .register(SlimefunAddonInstance.getSFAInstance());
+
+        new SlimefunChest(ChestProtectionLevel.PRIVATE, 45, false, itemGroup, safeSteel, RecipeType.ENHANCED_CRAFTING_TABLE,
+                new ItemStack[]{new ItemStack(Material.GOLD_NUGGET), SlimefunItems.STEEL_INGOT, new ItemStack(Material.GOLD_NUGGET), SlimefunItems.STEEL_INGOT, safeObsidian, SlimefunItems.STEEL_INGOT, new ItemStack(Material.GOLD_NUGGET), SlimefunItems.STEEL_INGOT, new ItemStack(Material.GOLD_NUGGET)})
+                .register(SlimefunAddonInstance.getSFAInstance());
+    }
+
+    public void registerResearches() {
+        new Research(AbstractAddon.createKey("wooden_safes"), 609, "Magical Storage", 8).addItems(safeOak, safeBirch, safeSpruce, safeJungle, safeAcacia, safeDarkOak).register();
+        new Research(AbstractAddon.createKey("metal_safes"), 610, "Upgraded Storage", 16).addItems(safeIron, safeGold, safeDiamond).register();
+        new Research(AbstractAddon.createKey("gem_safes"), 611, "Top Tier Storage", 20).addItems(safeEmerald).register();
+        new Research(AbstractAddon.createKey("hardened_safes"), 612, "Hardened Storage", 24).addItems(safeObsidian, safeSteel).register();
+    }
+}
\ No newline at end of file
diff --git a/src/main/java/id/universenetwork/sfa_loader/addons/privatestorage/storage/PublicChests.java b/src/main/java/id/universenetwork/sfa_loader/addons/privatestorage/storage/PublicChests.java
new file mode 100644
index 0000000..cd097c0
--- /dev/null
+++ b/src/main/java/id/universenetwork/sfa_loader/addons/privatestorage/storage/PublicChests.java
@@ -0,0 +1,122 @@
+package id.universenetwork.sfa_loader.addons.privatestorage.storage;
+
+import id.universenetwork.sfa_loader.addons.privatestorage.ChestProtectionLevel;
+import id.universenetwork.sfa_loader.addons.privatestorage.SlimefunChest;
+import id.universenetwork.sfa_loader.libraries.infinitylib.core.AbstractAddon;
+import id.universenetwork.sfa_loader.libraries.infinitylib.core.SlimefunAddonInstance;
+import io.github.thebusybiscuit.slimefun4.api.items.ItemGroup;
+import io.github.thebusybiscuit.slimefun4.api.items.SlimefunItemStack;
+import io.github.thebusybiscuit.slimefun4.api.recipes.RecipeType;
+import io.github.thebusybiscuit.slimefun4.api.researches.Research;
+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunItems;
+import org.bukkit.Material;
+import org.bukkit.inventory.ItemStack;
+
+public class PublicChests {
+    private final SlimefunItemStack chestOak;
+    private final SlimefunItemStack chestBirch;
+    private final SlimefunItemStack chestSpruce;
+    private final SlimefunItemStack chestJungle;
+    private final SlimefunItemStack chestAcacia;
+    private final SlimefunItemStack chestDarkOak;
+
+    private final SlimefunItemStack chestIron;
+    private final SlimefunItemStack chestGold;
+    private final SlimefunItemStack chestDiamond;
+    private final SlimefunItemStack chestEmerald;
+
+    private final SlimefunItemStack chestObsidian;
+    private final SlimefunItemStack chestSteel;
+
+    public PublicChests(ItemGroup itemGroup) {
+        chestOak = new SlimefunItemStack("OAK_CHEST", "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvNThjMTk4OGUzM2RjZGZlZmZkNjE5YjkyYWI5ZjQ3Y2Y1YzNjNmQ3ZGRhZDQyNjM3ZDNlYWFhYjI3NTcifX19", "&6Oak chest", getLore(2, false));
+        chestBirch = new SlimefunItemStack("BIRCH_CHEST", "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvMjdmN2NiMmQ0ZWMwZTBjNjFlNzlhMDZjZjA0YjBkMTYxMDVmNzdkYTk2OTEzYTY4OWE0ZGM5NTI3N2I5MzczYiJ9fX0=", "&6Birch chest", getLore(2, false));
+        chestSpruce = new SlimefunItemStack("SPRUCE_CHEST", "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvMmVmNWIwYTQ1MzA1MTE1N2JkNjRiY2Q4YzcyMGQwNmZlNzhlYmM0ODU1M2M0YzBlNWI5OTMxMjY1YjFhZTc1YyJ9fX0=", "&6Spruce chest", getLore(2, false));
+        chestJungle = new SlimefunItemStack("JUNGLE_CHEST", "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvYjEzMjIxMmE2ZTYwMzMwNzg5NmU3YTQzNTY1OTcyNjU3MDQwMTM2ZjZhODRhYjFhODgyOWVmMDA2MTIzOWNjNSJ9fX0=", "&6Jungle chest", getLore(2, false));
+        chestAcacia = new SlimefunItemStack("ACACIA_CHEST", "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvODY2OGNkZDhiNDQ3OGM5OWVlNjM0NTA2YThjZjIyNzkyMTRkYjY2ZjUwNWRkOWFmMjU5YWVlN2ZlYTFlZGYwZSJ9fX0=", "&6Acacia chest", getLore(2, false));
+        chestDarkOak = new SlimefunItemStack("DARK_OAK_CHEST", "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvNmMzOGM5YjJmZDExYzliMDIwODEzYTg3MTBhNjdmYmVhYzU2YjYxZTkyMzVmNWQ3ZDg5ZWQ5YjdhMTU5ZDQ0NSJ9fX0=", "&6Dark Oak chest", getLore(2, false));
+
+        chestIron = new SlimefunItemStack("IRON_CHEST", "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvZThlNTU0NGFmN2Y1NDg5Y2MyNzQ5MWNhNjhmYTkyMzg0YjhlYTVjZjIwYjVjODE5OGFkYjdiZmQxMmJjMmJjMiJ9fX0=", "&6Iron chest", getLore(3, false));
+        chestGold = new SlimefunItemStack("GOLDEN_CHEST", "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvNDUyY2VlZDA2NDgzNWVhMjMyZTY1NmE3M2Y4MmVkNzYxODI3ODU5YzkxMzQ0OTMxNGI4ZmQyMWIzZDExZDYifX19", "&6Golden chest", getLore(4, false));
+        chestDiamond = new SlimefunItemStack("DIAMOND_CHEST", "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvM2FkYmNmYjI4ODIxNWE4ZDE1M2RkZmRkYjM2YmQyZWQ3YTM3YWRkMzU2NjJmODYzM2Y3MTFkMmRmY2ViNDE3YyJ9fX0=", "&6Diamond chest", getLore(5, false));
+        chestEmerald = new SlimefunItemStack("EMERALD_CHEST", "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvNmFkMzVlYmRiMTI1ZmJhNDIxMjk4ZDQyYzIwMmM3N2M3NWI0MmNjOTljOTQ5MzlmNjM3NjQwYWMxODFmIn19fQ==", "&6Emerald chest", getLore(6, false));
+
+        chestObsidian = new SlimefunItemStack("OBSIDIAN_CHEST", "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvODU1YmU4NzM2NTJjYmZkZjRkODhmYTgxMjc2ZDI0OGQyYjdlZWY3YTZkNGYzZWRjYzkyZmU1NzU4NWJmNGQifX19", "&6Obsidian chest", getLore(4, true));
+        chestSteel = new SlimefunItemStack("STEEL_CHEST", "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvNjljYjNkMTlkYjUyOWEyMTVjZjYyNjk3NTkxY2MxM2ZiOGM3ODZhOGYyN2I3NTI4YzMyYWMyOTg2Yjk2NzBjNCJ9fX0=", "&6Steel chest", getLore(5, true));
+
+        registerItems(itemGroup);
+        registerResearches();
+    }
+
+    private String[] getLore(int size, boolean explosions) {
+        if (explosions) return new String[]{
+                "&7Size: &e" + size + "x9",
+                "&bWithstands Explosions",
+                "",
+                "&rThis Chest can be opened by anyone",
+                "&rwho can open Chests in your Area"
+        };
+        else return new String[]{
+                "&7Size: &e" + size + "x9",
+                "",
+                "&rThis Chest can be opened by anyone",
+                "&rwho can open Chests in your Area"
+        };
+    }
+
+    public void registerItems(ItemGroup itemGroup) {
+        new SlimefunChest(ChestProtectionLevel.PUBLIC, 18, true, itemGroup, chestOak, RecipeType.ENHANCED_CRAFTING_TABLE,
+                new ItemStack[]{new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.OAK_LOG), new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.OAK_LOG), new ItemStack(Material.CHEST), new ItemStack(Material.OAK_LOG), new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.OAK_LOG), new ItemStack(Material.IRON_NUGGET)})
+                .register(SlimefunAddonInstance.getSFAInstance());
+
+        new SlimefunChest(ChestProtectionLevel.PUBLIC, 18, true, itemGroup, chestBirch, RecipeType.ENHANCED_CRAFTING_TABLE,
+                new ItemStack[]{new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.BIRCH_LOG), new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.BIRCH_LOG), new ItemStack(Material.CHEST), new ItemStack(Material.BIRCH_LOG), new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.BIRCH_LOG), new ItemStack(Material.IRON_NUGGET)})
+                .register(SlimefunAddonInstance.getSFAInstance());
+
+        new SlimefunChest(ChestProtectionLevel.PUBLIC, 18, true, itemGroup, chestSpruce, RecipeType.ENHANCED_CRAFTING_TABLE,
+                new ItemStack[]{new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.SPRUCE_LOG), new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.SPRUCE_LOG), new ItemStack(Material.CHEST), new ItemStack(Material.SPRUCE_LOG), new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.SPRUCE_LOG), new ItemStack(Material.IRON_NUGGET)})
+                .register(SlimefunAddonInstance.getSFAInstance());
+
+        new SlimefunChest(ChestProtectionLevel.PUBLIC, 18, true, itemGroup, chestJungle, RecipeType.ENHANCED_CRAFTING_TABLE,
+                new ItemStack[]{new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.JUNGLE_LOG), new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.JUNGLE_LOG), new ItemStack(Material.CHEST), new ItemStack(Material.JUNGLE_LOG), new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.JUNGLE_LOG), new ItemStack(Material.IRON_NUGGET)})
+                .register(SlimefunAddonInstance.getSFAInstance());
+
+        new SlimefunChest(ChestProtectionLevel.PUBLIC, 18, true, itemGroup, chestAcacia, RecipeType.ENHANCED_CRAFTING_TABLE,
+                new ItemStack[]{new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.ACACIA_LOG), new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.ACACIA_LOG), new ItemStack(Material.CHEST), new ItemStack(Material.ACACIA_LOG), new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.ACACIA_LOG), new ItemStack(Material.IRON_NUGGET)})
+                .register(SlimefunAddonInstance.getSFAInstance());
+
+        new SlimefunChest(ChestProtectionLevel.PUBLIC, 18, true, itemGroup, chestDarkOak, RecipeType.ENHANCED_CRAFTING_TABLE,
+                new ItemStack[]{new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.DARK_OAK_LOG), new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.DARK_OAK_LOG), new ItemStack(Material.CHEST), new ItemStack(Material.DARK_OAK_LOG), new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.DARK_OAK_LOG), new ItemStack(Material.IRON_NUGGET)})
+                .register(SlimefunAddonInstance.getSFAInstance());
+
+        new SlimefunChest(ChestProtectionLevel.PUBLIC, 27, true, itemGroup, chestIron, RecipeType.ENHANCED_CRAFTING_TABLE,
+                new ItemStack[]{new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.IRON_INGOT), new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.IRON_INGOT), new ItemStack(Material.CHEST), new ItemStack(Material.IRON_INGOT), new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.IRON_INGOT), new ItemStack(Material.IRON_NUGGET)})
+                .register(SlimefunAddonInstance.getSFAInstance());
+
+        new SlimefunChest(ChestProtectionLevel.PUBLIC, 36, true, itemGroup, chestGold, RecipeType.ENHANCED_CRAFTING_TABLE,
+                new ItemStack[]{new ItemStack(Material.IRON_NUGGET), SlimefunItems.GOLD_8K, new ItemStack(Material.IRON_NUGGET), SlimefunItems.GOLD_8K, chestIron, SlimefunItems.GOLD_8K, new ItemStack(Material.IRON_NUGGET), SlimefunItems.GOLD_8K, new ItemStack(Material.IRON_NUGGET)})
+                .register(SlimefunAddonInstance.getSFAInstance());
+
+        new SlimefunChest(ChestProtectionLevel.PUBLIC, 45, true, itemGroup, chestDiamond, RecipeType.ENHANCED_CRAFTING_TABLE,
+                new ItemStack[]{new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.GLASS), new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.DIAMOND), chestGold, new ItemStack(Material.DIAMOND), new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.GLASS), new ItemStack(Material.IRON_NUGGET)})
+                .register(SlimefunAddonInstance.getSFAInstance());
+
+        new SlimefunChest(ChestProtectionLevel.PUBLIC, 54, true, itemGroup, chestEmerald, RecipeType.ENHANCED_CRAFTING_TABLE,
+                new ItemStack[]{new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.GLASS), new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.EMERALD), chestDiamond, new ItemStack(Material.EMERALD), new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.GLASS), new ItemStack(Material.IRON_NUGGET)})
+                .register(SlimefunAddonInstance.getSFAInstance());
+
+        new SlimefunChest(ChestProtectionLevel.PUBLIC, 36, false, itemGroup, chestObsidian, RecipeType.ENHANCED_CRAFTING_TABLE,
+                new ItemStack[]{new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.OBSIDIAN), new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.OBSIDIAN), chestIron, new ItemStack(Material.OBSIDIAN), new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.OBSIDIAN), new ItemStack(Material.IRON_NUGGET)})
+                .register(SlimefunAddonInstance.getSFAInstance());
+
+        new SlimefunChest(ChestProtectionLevel.PUBLIC, 45, false, itemGroup, chestSteel, RecipeType.ENHANCED_CRAFTING_TABLE,
+                new ItemStack[]{new ItemStack(Material.IRON_NUGGET), SlimefunItems.STEEL_INGOT, new ItemStack(Material.IRON_NUGGET), SlimefunItems.STEEL_INGOT, chestObsidian, SlimefunItems.STEEL_INGOT, new ItemStack(Material.IRON_NUGGET), SlimefunItems.STEEL_INGOT, new ItemStack(Material.IRON_NUGGET)})
+                .register(SlimefunAddonInstance.getSFAInstance());
+    }
+
+    public void registerResearches() {
+        new Research(AbstractAddon.createKey("wooden_chests"), 606, "Top Tier Storage", 20).addItems(chestOak, chestBirch, chestSpruce, chestJungle, chestAcacia, chestDarkOak).register();
+        new Research(AbstractAddon.createKey("metal_chests"), 608, "Improved Storage", 16).addItems(chestIron, chestGold, chestDiamond, chestEmerald).register();
+        new Research(AbstractAddon.createKey("hardened_chests"), 607, "Hardened Storage", 24).addItems(chestObsidian, chestSteel).register();
+    }
+}
\ No newline at end of file
diff --git a/src/main/java/io/github/thebusybiscuit/privatestorage/PrivateStorage.java b/src/main/java/io/github/thebusybiscuit/privatestorage/PrivateStorage.java
deleted file mode 100644
index 0e2ee51..0000000
--- a/src/main/java/io/github/thebusybiscuit/privatestorage/PrivateStorage.java
+++ /dev/null
@@ -1,45 +0,0 @@
-package io.github.thebusybiscuit.privatestorage;
-
-import org.bstats.bukkit.Metrics;
-import org.bukkit.NamespacedKey;
-import org.bukkit.plugin.java.JavaPlugin;
-
-import io.github.thebusybiscuit.privatestorage.storage.PrivateChests;
-import io.github.thebusybiscuit.privatestorage.storage.PublicChests;
-import io.github.thebusybiscuit.slimefun4.api.items.ItemGroup;
-import io.github.thebusybiscuit.slimefun4.api.SlimefunAddon;
-import io.github.thebusybiscuit.slimefun4.libraries.dough.config.Config;
-import io.github.thebusybiscuit.slimefun4.libraries.dough.items.CustomItemStack;
-import io.github.thebusybiscuit.slimefun4.libraries.dough.skins.PlayerHead;
-import io.github.thebusybiscuit.slimefun4.libraries.dough.skins.PlayerSkin;
-import io.github.thebusybiscuit.slimefun4.libraries.dough.updater.GitHubBuildsUpdater;
-
-public class PrivateStorage extends JavaPlugin implements SlimefunAddon {
-
-    @Override
-    public void onEnable() {
-        Config cfg = new Config(this);
-
-        // Setting up bStats
-        new Metrics(this, 4912);
-
-        if (cfg.getBoolean("options.auto-update") && getDescription().getVersion().startsWith("DEV - ")) {
-            new GitHubBuildsUpdater(this, getFile(), "TheBusyBiscuit/PrivateStorage/master").start();
-        }
-
-        ItemGroup itemGroup = new ItemGroup(new NamespacedKey(this, "private_storage"), new CustomItemStack(PlayerHead.getItemStack(PlayerSkin.fromBase64("eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvZThlNTU0NGFmN2Y1NDg5Y2MyNzQ5MWNhNjhmYTkyMzg0YjhlYTVjZjIwYjVjODE5OGFkYjdiZmQxMmJjMmJjMiJ9fX0=")), "&7Private Storage - Chests and Safes", "", "&a> Click to open"));
-
-        new PublicChests(this, itemGroup);
-        new PrivateChests(this, itemGroup);
-    }
-
-    @Override
-    public JavaPlugin getJavaPlugin() {
-        return this;
-    }
-
-    @Override
-    public String getBugTrackerURL() {
-        return "https://github.com/TheBusyBiscuit/PrivateStorage/issues";
-    }
-}
diff --git a/src/main/java/io/github/thebusybiscuit/privatestorage/storage/PrivateChests.java b/src/main/java/io/github/thebusybiscuit/privatestorage/storage/PrivateChests.java
deleted file mode 100644
index 919f3bb..0000000
--- a/src/main/java/io/github/thebusybiscuit/privatestorage/storage/PrivateChests.java
+++ /dev/null
@@ -1,128 +0,0 @@
-package io.github.thebusybiscuit.privatestorage.storage;
-
-import org.bukkit.Material;
-import org.bukkit.NamespacedKey;
-import org.bukkit.inventory.ItemStack;
-
-import io.github.thebusybiscuit.privatestorage.ChestProtectionLevel;
-import io.github.thebusybiscuit.privatestorage.PrivateStorage;
-import io.github.thebusybiscuit.privatestorage.SlimefunChest;
-import io.github.thebusybiscuit.slimefun4.api.items.ItemGroup;
-import io.github.thebusybiscuit.slimefun4.api.items.SlimefunItemStack;
-import io.github.thebusybiscuit.slimefun4.api.recipes.RecipeType;
-import io.github.thebusybiscuit.slimefun4.api.researches.Research;
-import io.github.thebusybiscuit.slimefun4.implementation.SlimefunItems;
-
-public class PrivateChests {
-    
-    private SlimefunItemStack safeOak;
-    private SlimefunItemStack safeBirch;
-    private SlimefunItemStack safeSpruce;
-    private SlimefunItemStack safeJungle;
-    private SlimefunItemStack safeAcacia;
-    private SlimefunItemStack safeDarkOak;
-    
-    private SlimefunItemStack safeIron;
-    private SlimefunItemStack safeGold;
-    private SlimefunItemStack safeDiamond;
-    private SlimefunItemStack safeEmerald;
-    
-    private SlimefunItemStack safeObsidian;
-    private SlimefunItemStack safeSteel;
-
-    public PrivateChests(PrivateStorage plugin, ItemGroup itemGroup) {
-        safeOak = new SlimefunItemStack("PRIVATE_SAFE_OAK", "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvNThjMTk4OGUzM2RjZGZlZmZkNjE5YjkyYWI5ZjQ3Y2Y1YzNjNmQ3ZGRhZDQyNjM3ZDNlYWFhYjI3NTcifX19", "&6Oak Safe", getLore(2, false));
-        safeBirch = new SlimefunItemStack("PRIVATE_SAFE_BIRCH", "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvMjdmN2NiMmQ0ZWMwZTBjNjFlNzlhMDZjZjA0YjBkMTYxMDVmNzdkYTk2OTEzYTY4OWE0ZGM5NTI3N2I5MzczYiJ9fX0=", "&6Birch Safe", getLore(2, false));
-        safeSpruce = new SlimefunItemStack("PRIVATE_SAFE_SPRUCE", "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvMmVmNWIwYTQ1MzA1MTE1N2JkNjRiY2Q4YzcyMGQwNmZlNzhlYmM0ODU1M2M0YzBlNWI5OTMxMjY1YjFhZTc1YyJ9fX0=", "&6Spruce Safe", getLore(2, false));
-        safeJungle = new SlimefunItemStack("PRIVATE_SAFE_JUNGLE", "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvYjEzMjIxMmE2ZTYwMzMwNzg5NmU3YTQzNTY1OTcyNjU3MDQwMTM2ZjZhODRhYjFhODgyOWVmMDA2MTIzOWNjNSJ9fX0=", "&6Jungle Safe", getLore(2, false));
-        safeAcacia = new SlimefunItemStack("PRIVATE_SAFE_ACACIA", "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvODY2OGNkZDhiNDQ3OGM5OWVlNjM0NTA2YThjZjIyNzkyMTRkYjY2ZjUwNWRkOWFmMjU5YWVlN2ZlYTFlZGYwZSJ9fX0=", "&6Acacia Safe", getLore(2, false));
-        safeDarkOak = new SlimefunItemStack("PRIVATE_SAFE_DARK_OAK", "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvNmMzOGM5YjJmZDExYzliMDIwODEzYTg3MTBhNjdmYmVhYzU2YjYxZTkyMzVmNWQ3ZDg5ZWQ5YjdhMTU5ZDQ0NSJ9fX0=", "&6Dark Oak Safe", getLore(2, false));
-        
-        safeIron = new SlimefunItemStack("PRIVATE_SAFE_IRON", "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvZThlNTU0NGFmN2Y1NDg5Y2MyNzQ5MWNhNjhmYTkyMzg0YjhlYTVjZjIwYjVjODE5OGFkYjdiZmQxMmJjMmJjMiJ9fX0=", "&6Iron Safe", getLore(3, false));
-        safeGold = new SlimefunItemStack("PRIVATE_SAFE_GOLD", "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvNDUyY2VlZDA2NDgzNWVhMjMyZTY1NmE3M2Y4MmVkNzYxODI3ODU5YzkxMzQ0OTMxNGI4ZmQyMWIzZDExZDYifX19", "&6Golden Safe", getLore(4, false));
-        safeDiamond = new SlimefunItemStack("PRIVATE_SAFE_DIAMOND", "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvM2FkYmNmYjI4ODIxNWE4ZDE1M2RkZmRkYjM2YmQyZWQ3YTM3YWRkMzU2NjJmODYzM2Y3MTFkMmRmY2ViNDE3YyJ9fX0=", "&6Diamond Safe", getLore(5, false));
-        safeEmerald = new SlimefunItemStack("PRIVATE_SAFE_EMERALD", "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvNmFkMzVlYmRiMTI1ZmJhNDIxMjk4ZDQyYzIwMmM3N2M3NWI0MmNjOTljOTQ5MzlmNjM3NjQwYWMxODFmIn19fQ==", "&6Emerald Safe", getLore(6, false));
-        
-        safeObsidian = new SlimefunItemStack("PRIVATE_SAFE_OBSIDIAN", "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvODU1YmU4NzM2NTJjYmZkZjRkODhmYTgxMjc2ZDI0OGQyYjdlZWY3YTZkNGYzZWRjYzkyZmU1NzU4NWJmNGQifX19", "&6Obsidian Safe", getLore(4, true));
-        safeSteel = new SlimefunItemStack("PRIVATE_SAFE_STEEL", "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvNjljYjNkMTlkYjUyOWEyMTVjZjYyNjk3NTkxY2MxM2ZiOGM3ODZhOGYyN2I3NTI4YzMyYWMyOTg2Yjk2NzBjNCJ9fX0=", "&6Steel Safe", getLore(5, true));
-        
-        registerItems(plugin, itemGroup);
-        registerResearches(plugin);
-    }
-    
-    private String[] getLore(int size, boolean explosions) {
-        if (explosions) {
-            return new String[] {
-                "&7Size: &e" + size + "x9",
-                "&bWithstands Explosions",
-                "", 
-                "&rThis Chest can only be opened by you"
-            };
-        }
-        else {
-            return new String[] {
-                "&7Size: &e" + size + "x9",
-                "", 
-                "&rThis Chest can only be opened by you"
-            };
-        }
-    }
-
-    public void registerItems(PrivateStorage plugin, ItemGroup itemGroup) {
-        new SlimefunChest(ChestProtectionLevel.PRIVATE, 18, true, itemGroup, safeOak, RecipeType.ENHANCED_CRAFTING_TABLE,
-        new ItemStack[] {new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.OAK_LOG), new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.OAK_LOG), SlimefunItems.MAGIC_LUMP_3, new ItemStack(Material.OAK_LOG), new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.OAK_LOG), new ItemStack(Material.GOLD_NUGGET)})
-        .register(plugin);
-        
-        new SlimefunChest(ChestProtectionLevel.PRIVATE, 18, true, itemGroup, safeBirch, RecipeType.ENHANCED_CRAFTING_TABLE,
-        new ItemStack[] {new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.BIRCH_LOG), new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.BIRCH_LOG), SlimefunItems.MAGIC_LUMP_3, new ItemStack(Material.BIRCH_LOG), new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.BIRCH_LOG), new ItemStack(Material.GOLD_NUGGET)})
-        .register(plugin);
-        
-        new SlimefunChest(ChestProtectionLevel.PRIVATE, 18, true, itemGroup, safeSpruce, RecipeType.ENHANCED_CRAFTING_TABLE,
-        new ItemStack[] {new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.SPRUCE_LOG), new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.SPRUCE_LOG), SlimefunItems.MAGIC_LUMP_3, new ItemStack(Material.SPRUCE_LOG), new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.SPRUCE_LOG), new ItemStack(Material.GOLD_NUGGET)})
-        .register(plugin);
-        
-        new SlimefunChest(ChestProtectionLevel.PRIVATE, 18, true, itemGroup, safeJungle, RecipeType.ENHANCED_CRAFTING_TABLE,
-        new ItemStack[] {new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.JUNGLE_LOG), new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.JUNGLE_LOG), SlimefunItems.MAGIC_LUMP_3, new ItemStack(Material.JUNGLE_LOG), new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.JUNGLE_LOG), new ItemStack(Material.GOLD_NUGGET)})
-        .register(plugin);
-        
-        new SlimefunChest(ChestProtectionLevel.PRIVATE, 18, true, itemGroup, safeAcacia, RecipeType.ENHANCED_CRAFTING_TABLE,
-        new ItemStack[] {new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.ACACIA_LOG), new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.ACACIA_LOG), SlimefunItems.MAGIC_LUMP_3, new ItemStack(Material.ACACIA_LOG), new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.ACACIA_LOG), new ItemStack(Material.GOLD_NUGGET)})
-        .register(plugin);
-        
-        new SlimefunChest(ChestProtectionLevel.PRIVATE, 18, true, itemGroup, safeDarkOak, RecipeType.ENHANCED_CRAFTING_TABLE,
-        new ItemStack[] {new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.DARK_OAK_LOG), new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.DARK_OAK_LOG), SlimefunItems.MAGIC_LUMP_3, new ItemStack(Material.DARK_OAK_LOG), new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.DARK_OAK_LOG), new ItemStack(Material.GOLD_NUGGET)})
-        .register(plugin);
-        
-        new SlimefunChest(ChestProtectionLevel.PRIVATE, 27, true, itemGroup, safeIron, RecipeType.ENHANCED_CRAFTING_TABLE,
-        new ItemStack[] {new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.IRON_INGOT), new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.IRON_INGOT), new ItemStack(Material.CHEST), new ItemStack(Material.IRON_INGOT), new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.IRON_INGOT), new ItemStack(Material.GOLD_NUGGET)})
-        .register(plugin);
-        
-        new SlimefunChest(ChestProtectionLevel.PRIVATE, 36, true, itemGroup, safeGold, RecipeType.ENHANCED_CRAFTING_TABLE,
-        new ItemStack[] {new ItemStack(Material.GOLD_NUGGET), SlimefunItems.GOLD_10K, new ItemStack(Material.GOLD_NUGGET), SlimefunItems.GOLD_10K, safeIron, SlimefunItems.GOLD_10K, new ItemStack(Material.GOLD_NUGGET), SlimefunItems.GOLD_10K, new ItemStack(Material.GOLD_NUGGET)})
-        .register(plugin);
-        
-        new SlimefunChest(ChestProtectionLevel.PRIVATE, 45, true, itemGroup, safeDiamond, RecipeType.ENHANCED_CRAFTING_TABLE,
-        new ItemStack[] {new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.GLASS), new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.DIAMOND), safeGold, new ItemStack(Material.DIAMOND), new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.GLASS), new ItemStack(Material.GOLD_NUGGET)})
-        .register(plugin);
-        
-        new SlimefunChest(ChestProtectionLevel.PRIVATE, 54, true, itemGroup, safeEmerald, RecipeType.ENHANCED_CRAFTING_TABLE,
-        new ItemStack[] {new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.GLASS), new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.EMERALD), safeDiamond, new ItemStack(Material.EMERALD), new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.GLASS), new ItemStack(Material.GOLD_NUGGET)})
-        .register(plugin);
-        
-        new SlimefunChest(ChestProtectionLevel.PRIVATE, 36, false, itemGroup, safeObsidian, RecipeType.ENHANCED_CRAFTING_TABLE,
-        new ItemStack[] {new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.OBSIDIAN), new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.OBSIDIAN), safeIron, new ItemStack(Material.OBSIDIAN), new ItemStack(Material.GOLD_NUGGET), new ItemStack(Material.OBSIDIAN), new ItemStack(Material.GOLD_NUGGET)})
-        .register(plugin);
-        
-        new SlimefunChest(ChestProtectionLevel.PRIVATE, 45, false, itemGroup, safeSteel, RecipeType.ENHANCED_CRAFTING_TABLE,
-        new ItemStack[] {new ItemStack(Material.GOLD_NUGGET), SlimefunItems.STEEL_INGOT, new ItemStack(Material.GOLD_NUGGET), SlimefunItems.STEEL_INGOT, safeObsidian, SlimefunItems.STEEL_INGOT, new ItemStack(Material.GOLD_NUGGET), SlimefunItems.STEEL_INGOT, new ItemStack(Material.GOLD_NUGGET)})
-        .register(plugin);
-    }
-    
-    public void registerResearches(PrivateStorage plugin) {
-        new Research(new NamespacedKey(plugin, "wooden_safes"), 609, "Magical Storage", 8).addItems(safeOak, safeBirch, safeSpruce, safeJungle, safeAcacia, safeDarkOak).register();
-        new Research(new NamespacedKey(plugin, "metal_safes"), 610, "Upgraded Storage", 16).addItems(safeIron, safeGold, safeDiamond).register();
-        new Research(new NamespacedKey(plugin, "gem_safes"), 611, "Top Tier Storage", 20).addItems(safeEmerald).register();
-        new Research(new NamespacedKey(plugin, "hardened_safes"), 612, "Hardened Storage", 24).addItems(safeObsidian, safeSteel).register();
-    }
-
-}
diff --git a/src/main/java/io/github/thebusybiscuit/privatestorage/storage/PublicChests.java b/src/main/java/io/github/thebusybiscuit/privatestorage/storage/PublicChests.java
deleted file mode 100644
index 88b8b45..0000000
--- a/src/main/java/io/github/thebusybiscuit/privatestorage/storage/PublicChests.java
+++ /dev/null
@@ -1,129 +0,0 @@
-package io.github.thebusybiscuit.privatestorage.storage;
-
-import org.bukkit.Material;
-import org.bukkit.NamespacedKey;
-import org.bukkit.inventory.ItemStack;
-
-import io.github.thebusybiscuit.privatestorage.ChestProtectionLevel;
-import io.github.thebusybiscuit.privatestorage.PrivateStorage;
-import io.github.thebusybiscuit.privatestorage.SlimefunChest;
-import io.github.thebusybiscuit.slimefun4.api.items.ItemGroup;
-import io.github.thebusybiscuit.slimefun4.api.items.SlimefunItemStack;
-import io.github.thebusybiscuit.slimefun4.api.recipes.RecipeType;
-import io.github.thebusybiscuit.slimefun4.api.researches.Research;
-import io.github.thebusybiscuit.slimefun4.implementation.SlimefunItems;
-
-public class PublicChests {
-    
-    private SlimefunItemStack chestOak;
-    private SlimefunItemStack chestBirch;
-    private SlimefunItemStack chestSpruce;
-    private SlimefunItemStack chestJungle;
-    private SlimefunItemStack chestAcacia;
-    private SlimefunItemStack chestDarkOak;
-    
-    private SlimefunItemStack chestIron;
-    private SlimefunItemStack chestGold;
-    private SlimefunItemStack chestDiamond;
-    private SlimefunItemStack chestEmerald;
-    
-    private SlimefunItemStack chestObsidian;
-    private SlimefunItemStack chestSteel;
-
-    public PublicChests(PrivateStorage plugin, ItemGroup itemGroup) {
-        chestOak = new SlimefunItemStack("OAK_CHEST", "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvNThjMTk4OGUzM2RjZGZlZmZkNjE5YjkyYWI5ZjQ3Y2Y1YzNjNmQ3ZGRhZDQyNjM3ZDNlYWFhYjI3NTcifX19", "&6Oak chest", getLore(2, false));
-        chestBirch = new SlimefunItemStack("BIRCH_CHEST", "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvMjdmN2NiMmQ0ZWMwZTBjNjFlNzlhMDZjZjA0YjBkMTYxMDVmNzdkYTk2OTEzYTY4OWE0ZGM5NTI3N2I5MzczYiJ9fX0=", "&6Birch chest", getLore(2, false));
-        chestSpruce = new SlimefunItemStack("SPRUCE_CHEST", "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvMmVmNWIwYTQ1MzA1MTE1N2JkNjRiY2Q4YzcyMGQwNmZlNzhlYmM0ODU1M2M0YzBlNWI5OTMxMjY1YjFhZTc1YyJ9fX0=", "&6Spruce chest", getLore(2, false));
-        chestJungle = new SlimefunItemStack("JUNGLE_CHEST", "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvYjEzMjIxMmE2ZTYwMzMwNzg5NmU3YTQzNTY1OTcyNjU3MDQwMTM2ZjZhODRhYjFhODgyOWVmMDA2MTIzOWNjNSJ9fX0=", "&6Jungle chest", getLore(2, false));
-        chestAcacia = new SlimefunItemStack("ACACIA_CHEST", "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvODY2OGNkZDhiNDQ3OGM5OWVlNjM0NTA2YThjZjIyNzkyMTRkYjY2ZjUwNWRkOWFmMjU5YWVlN2ZlYTFlZGYwZSJ9fX0=", "&6Acacia chest", getLore(2, false));
-        chestDarkOak = new SlimefunItemStack("DARK_OAK_CHEST", "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvNmMzOGM5YjJmZDExYzliMDIwODEzYTg3MTBhNjdmYmVhYzU2YjYxZTkyMzVmNWQ3ZDg5ZWQ5YjdhMTU5ZDQ0NSJ9fX0=", "&6Dark Oak chest", getLore(2, false));
-        
-        chestIron = new SlimefunItemStack("IRON_CHEST", "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvZThlNTU0NGFmN2Y1NDg5Y2MyNzQ5MWNhNjhmYTkyMzg0YjhlYTVjZjIwYjVjODE5OGFkYjdiZmQxMmJjMmJjMiJ9fX0=", "&6Iron chest", getLore(3, false));
-        chestGold = new SlimefunItemStack("GOLDEN_CHEST", "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvNDUyY2VlZDA2NDgzNWVhMjMyZTY1NmE3M2Y4MmVkNzYxODI3ODU5YzkxMzQ0OTMxNGI4ZmQyMWIzZDExZDYifX19", "&6Golden chest", getLore(4, false));
-        chestDiamond = new SlimefunItemStack("DIAMOND_CHEST", "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvM2FkYmNmYjI4ODIxNWE4ZDE1M2RkZmRkYjM2YmQyZWQ3YTM3YWRkMzU2NjJmODYzM2Y3MTFkMmRmY2ViNDE3YyJ9fX0=", "&6Diamond chest", getLore(5, false));
-        chestEmerald = new SlimefunItemStack("EMERALD_CHEST", "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvNmFkMzVlYmRiMTI1ZmJhNDIxMjk4ZDQyYzIwMmM3N2M3NWI0MmNjOTljOTQ5MzlmNjM3NjQwYWMxODFmIn19fQ==", "&6Emerald chest", getLore(6, false));
-        
-        chestObsidian = new SlimefunItemStack("OBSIDIAN_CHEST", "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvODU1YmU4NzM2NTJjYmZkZjRkODhmYTgxMjc2ZDI0OGQyYjdlZWY3YTZkNGYzZWRjYzkyZmU1NzU4NWJmNGQifX19", "&6Obsidian chest", getLore(4, true));
-        chestSteel = new SlimefunItemStack("STEEL_CHEST", "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvNjljYjNkMTlkYjUyOWEyMTVjZjYyNjk3NTkxY2MxM2ZiOGM3ODZhOGYyN2I3NTI4YzMyYWMyOTg2Yjk2NzBjNCJ9fX0=", "&6Steel chest", getLore(5, true));
-        
-        registerItems(plugin, itemGroup);
-        registerResearches(plugin);
-    }
-    
-    private String[] getLore(int size, boolean explosions) {
-        if (explosions) {
-            return new String[] {
-                "&7Size: &e" + size + "x9",
-                "&bWithstands Explosions",
-                "", 
-                "&rThis Chest can be opened by anyone", 
-                "&rwho can open Chests in your Area"
-            };
-        }
-        else {
-            return new String[] {
-                "&7Size: &e" + size + "x9",
-                "", 
-                "&rThis Chest can be opened by anyone", 
-                "&rwho can open Chests in your Area"
-            };
-        }
-    }
-
-    public void registerItems(PrivateStorage plugin, ItemGroup itemGroup) {
-        new SlimefunChest(ChestProtectionLevel.PUBLIC, 18, true, itemGroup, chestOak, RecipeType.ENHANCED_CRAFTING_TABLE,
-        new ItemStack[] {new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.OAK_LOG), new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.OAK_LOG), new ItemStack(Material.CHEST), new ItemStack(Material.OAK_LOG), new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.OAK_LOG), new ItemStack(Material.IRON_NUGGET)})
-        .register(plugin);
-        
-        new SlimefunChest(ChestProtectionLevel.PUBLIC, 18, true, itemGroup, chestBirch, RecipeType.ENHANCED_CRAFTING_TABLE,
-        new ItemStack[] {new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.BIRCH_LOG), new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.BIRCH_LOG), new ItemStack(Material.CHEST), new ItemStack(Material.BIRCH_LOG), new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.BIRCH_LOG), new ItemStack(Material.IRON_NUGGET)})
-        .register(plugin);
-    
-        new SlimefunChest(ChestProtectionLevel.PUBLIC, 18, true, itemGroup, chestSpruce, RecipeType.ENHANCED_CRAFTING_TABLE,
-        new ItemStack[] {new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.SPRUCE_LOG), new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.SPRUCE_LOG), new ItemStack(Material.CHEST), new ItemStack(Material.SPRUCE_LOG), new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.SPRUCE_LOG), new ItemStack(Material.IRON_NUGGET)})
-        .register(plugin);
-    
-        new SlimefunChest(ChestProtectionLevel.PUBLIC, 18, true, itemGroup, chestJungle, RecipeType.ENHANCED_CRAFTING_TABLE,
-        new ItemStack[] {new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.JUNGLE_LOG), new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.JUNGLE_LOG), new ItemStack(Material.CHEST), new ItemStack(Material.JUNGLE_LOG), new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.JUNGLE_LOG), new ItemStack(Material.IRON_NUGGET)})
-        .register(plugin);
-        
-        new SlimefunChest(ChestProtectionLevel.PUBLIC, 18, true, itemGroup, chestAcacia, RecipeType.ENHANCED_CRAFTING_TABLE,
-        new ItemStack[] {new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.ACACIA_LOG), new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.ACACIA_LOG), new ItemStack(Material.CHEST), new ItemStack(Material.ACACIA_LOG), new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.ACACIA_LOG), new ItemStack(Material.IRON_NUGGET)})
-        .register(plugin);
-        
-        new SlimefunChest(ChestProtectionLevel.PUBLIC, 18, true, itemGroup, chestDarkOak, RecipeType.ENHANCED_CRAFTING_TABLE,
-        new ItemStack[] {new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.DARK_OAK_LOG), new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.DARK_OAK_LOG), new ItemStack(Material.CHEST), new ItemStack(Material.DARK_OAK_LOG), new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.DARK_OAK_LOG), new ItemStack(Material.IRON_NUGGET)})
-        .register(plugin);
-        
-        new SlimefunChest(ChestProtectionLevel.PUBLIC, 27, true, itemGroup, chestIron, RecipeType.ENHANCED_CRAFTING_TABLE,
-        new ItemStack[] {new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.IRON_INGOT), new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.IRON_INGOT), new ItemStack(Material.CHEST), new ItemStack(Material.IRON_INGOT), new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.IRON_INGOT), new ItemStack(Material.IRON_NUGGET)})
-        .register(plugin);
-                
-        new SlimefunChest(ChestProtectionLevel.PUBLIC, 36, true, itemGroup, chestGold, RecipeType.ENHANCED_CRAFTING_TABLE,
-        new ItemStack[] {new ItemStack(Material.IRON_NUGGET), SlimefunItems.GOLD_8K, new ItemStack(Material.IRON_NUGGET), SlimefunItems.GOLD_8K, chestIron, SlimefunItems.GOLD_8K, new ItemStack(Material.IRON_NUGGET), SlimefunItems.GOLD_8K, new ItemStack(Material.IRON_NUGGET)})
-        .register(plugin);
-                
-        new SlimefunChest(ChestProtectionLevel.PUBLIC, 45, true, itemGroup, chestDiamond, RecipeType.ENHANCED_CRAFTING_TABLE,
-        new ItemStack[] {new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.GLASS), new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.DIAMOND), chestGold, new ItemStack(Material.DIAMOND), new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.GLASS), new ItemStack(Material.IRON_NUGGET)})
-        .register(plugin);
-                
-        new SlimefunChest(ChestProtectionLevel.PUBLIC, 54, true, itemGroup, chestEmerald, RecipeType.ENHANCED_CRAFTING_TABLE,
-        new ItemStack[] {new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.GLASS), new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.EMERALD), chestDiamond, new ItemStack(Material.EMERALD), new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.GLASS), new ItemStack(Material.IRON_NUGGET)})
-        .register(plugin);
-                
-        new SlimefunChest(ChestProtectionLevel.PUBLIC, 36, false, itemGroup, chestObsidian, RecipeType.ENHANCED_CRAFTING_TABLE,
-        new ItemStack[] {new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.OBSIDIAN), new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.OBSIDIAN), chestIron, new ItemStack(Material.OBSIDIAN), new ItemStack(Material.IRON_NUGGET), new ItemStack(Material.OBSIDIAN), new ItemStack(Material.IRON_NUGGET)})
-        .register(plugin);
-                
-        new SlimefunChest(ChestProtectionLevel.PUBLIC, 45, false, itemGroup, chestSteel, RecipeType.ENHANCED_CRAFTING_TABLE,
-        new ItemStack[] {new ItemStack(Material.IRON_NUGGET), SlimefunItems.STEEL_INGOT, new ItemStack(Material.IRON_NUGGET), SlimefunItems.STEEL_INGOT, chestObsidian, SlimefunItems.STEEL_INGOT, new ItemStack(Material.IRON_NUGGET), SlimefunItems.STEEL_INGOT, new ItemStack(Material.IRON_NUGGET)})
-        .register(plugin);
-    }
-
-    public void registerResearches(PrivateStorage plugin) {
-        new Research(new NamespacedKey(plugin, "wooden_chests"), 606, "Top Tier Storage", 20).addItems(chestOak, chestBirch, chestSpruce, chestJungle, chestAcacia, chestDarkOak).register();
-        new Research(new NamespacedKey(plugin, "metal_chests"), 608, "Improved Storage", 16).addItems(chestIron, chestGold, chestDiamond, chestEmerald).register();
-        new Research(new NamespacedKey(plugin, "hardened_chests"), 607, "Hardened Storage", 24).addItems(chestObsidian, chestSteel).register();
-    }
-
-}
diff --git a/src/main/resources/config.yml b/src/main/resources/config.yml
deleted file mode 100644
index e9bcdf9..0000000
--- a/src/main/resources/config.yml
+++ /dev/null
@@ -1,2 +0,0 @@
-options:
-  auto-update: true
\ No newline at end of file
diff --git a/src/main/resources/plugin.yml b/src/main/resources/plugin.yml
deleted file mode 100644
index eeaccb8..0000000
--- a/src/main/resources/plugin.yml
+++ /dev/null
@@ -1,15 +0,0 @@
-name: PrivateStorage
-version: ${project.version}
-author: TheBusyBiscuit
-website: https://github.com/TheBusyBiscuit/PrivateStorage
-
-api-version: 1.14
-main: io.github.thebusybiscuit.privatestorage.PrivateStorage
-
-depend:
-- Slimefun
-
-permissions:
-  PrivateStorage.bypass:
-    description: Allows to open all Safes
-    default: false
\ No newline at end of file
-- 
2.43.0.windows.1

