From ed328fabb098209327175cf4090f07e2d0c84195 Mon Sep 17 00:00:00 2001
From: ARVIN3108 <70049331+ARVIN3108@users.noreply.github.com>
Date: Sun, 16 Jul 2023 00:06:34 +0700
Subject: [PATCH] InfinityLib-Standalone

---
 pom.xml                                       | 128 +------------
 .../github/mooy1/infinitylib/InfinityLib.java |  26 ---
 .../standalone/SlimefunAddonInstance.java     | 144 --------------
 .../infinitylib/common/CoolDowns.java         |   2 +-
 .../libraries}/infinitylib/common/Events.java |  10 +-
 .../infinitylib/common/PersistentType.java    |   2 +-
 .../infinitylib/common/Scheduler.java         |   6 +-
 .../infinitylib/common/StackUtils.java        |  47 +++--
 .../infinitylib/common/StringUtils.java       |   3 +-
 .../infinitylib/core/AbstractAddon.java       |  31 +--
 .../infinitylib/core/AddonConfig.java         |  16 +-
 .../infinitylib/core/Environment.java         |   2 +-
 .../infinitylib/core/PathBuilder.java         |   2 +-
 .../core/SlimefunAddonInstance.java           |  73 +++++++
 .../infinitylib/groups/MultiGroup.java        |   4 +-
 .../infinitylib/groups/SubGroup.java          |   4 +-
 .../machines/AbstractMachineBlock.java        |   2 +-
 .../infinitylib/machines/CraftingBlock.java   |   8 +-
 .../machines/CraftingBlockRecipe.java         |   6 +-
 .../infinitylib/machines/MachineBlock.java    |   7 +-
 .../machines/MachineBlockRecipe.java          |   4 +-
 .../infinitylib/machines/MachineInput.java    |   2 +-
 .../infinitylib/machines/MachineLayout.java   |   2 +-
 .../infinitylib/machines/MachineLore.java     |   2 +-
 .../machines/MachineRecipeType.java           |   4 +-
 .../infinitylib/machines/MenuBlock.java       |   2 +-
 .../infinitylib/machines/MenuBlockPreset.java |   2 +-
 .../machines/TickingMenuBlock.java            |   2 +-
 .../infinitylib/commands/AddonCommand.java    | 100 ----------
 .../infinitylib/commands/AliasesCommand.java  |  30 ---
 .../infinitylib/commands/HelpCommand.java     |  38 ----
 .../infinitylib/commands/InfoCommand.java     |  43 -----
 .../infinitylib/commands/ParentCommand.java   | 100 ----------
 .../infinitylib/commands/SubCommand.java      |  74 --------
 .../mooy1/infinitylib/TestInfinityLib.java    |  25 ---
 .../commands/MockParentCommand.java           |  19 --
 .../infinitylib/commands/MockSubCommand.java  |  34 ----
 .../commands/TestAddonCommand.java            | 179 ------------------
 .../mooy1/infinitylib/common/MockEvent.java   |  23 ---
 .../infinitylib/common/TestCoolDowns.java     |  41 ----
 .../mooy1/infinitylib/common/TestEvents.java  |  61 ------
 .../common/TestPersistentType.java            | 104 ----------
 .../infinitylib/common/TestScheduler.java     | 116 ------------
 .../infinitylib/common/TestStackUtils.java    | 115 -----------
 .../mooy1/infinitylib/core/MockAddon.java     |  67 -------
 .../mooy1/infinitylib/core/MockAddonTest.java |  10 -
 .../infinitylib/core/TestAbstractAddon.java   |  85 ---------
 .../infinitylib/core/TestAddonConfig.java     |  61 ------
 .../mooy1/infinitylib/core/TestAddonLive.java |  81 --------
 .../infinitylib/core/TestAddonTesting.java    |  84 --------
 .../mooy1/infinitylib/groups/TestGroups.java  |  76 --------
 .../machines/TestCraftingBlock.java           |  81 --------
 .../machines/TestMachineBlock.java            | 109 -----------
 .../machines/TestMachineRecipeType.java       |  52 -----
 .../mooy1/otheraddon/MockOtherAddon.java      |  27 ---
 src/test/resources/config.yml                 |   1 -
 src/test/resources/plugin.yml                 |  10 -
 src/test/resources/test.yml                   |  16 --
 58 files changed, 164 insertions(+), 2241 deletions(-)
 delete mode 100644 src/main/java-templates/io/github/mooy1/infinitylib/InfinityLib.java
 delete mode 100644 src/main/java/id/arvin3108/standalone/SlimefunAddonInstance.java
 rename src/main/java/{io/github/mooy1 => id/universenetwork/sfa_loader/libraries}/infinitylib/common/CoolDowns.java (91%)
 rename src/main/java/{io/github/mooy1 => id/universenetwork/sfa_loader/libraries}/infinitylib/common/Events.java (78%)
 rename src/main/java/{io/github/mooy1 => id/universenetwork/sfa_loader/libraries}/infinitylib/common/PersistentType.java (99%)
 rename src/main/java/{io/github/mooy1 => id/universenetwork/sfa_loader/libraries}/infinitylib/common/Scheduler.java (87%)
 rename src/main/java/{io/github/mooy1 => id/universenetwork/sfa_loader/libraries}/infinitylib/common/StackUtils.java (80%)
 rename src/main/java/{io/github/mooy1 => id/universenetwork/sfa_loader/libraries}/infinitylib/common/StringUtils.java (89%)
 rename src/main/java/{io/github/mooy1 => id/universenetwork/sfa_loader/libraries}/infinitylib/core/AbstractAddon.java (82%)
 rename src/main/java/{io/github/mooy1 => id/universenetwork/sfa_loader/libraries}/infinitylib/core/AddonConfig.java (93%)
 rename src/main/java/{io/github/mooy1 => id/universenetwork/sfa_loader/libraries}/infinitylib/core/Environment.java (83%)
 rename src/main/java/{io/github/mooy1 => id/universenetwork/sfa_loader/libraries}/infinitylib/core/PathBuilder.java (95%)
 create mode 100644 src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/core/SlimefunAddonInstance.java
 rename src/main/java/{io/github/mooy1 => id/universenetwork/sfa_loader/libraries}/infinitylib/groups/MultiGroup.java (96%)
 rename src/main/java/{io/github/mooy1 => id/universenetwork/sfa_loader/libraries}/infinitylib/groups/SubGroup.java (81%)
 rename src/main/java/{io/github/mooy1 => id/universenetwork/sfa_loader/libraries}/infinitylib/machines/AbstractMachineBlock.java (96%)
 rename src/main/java/{io/github/mooy1 => id/universenetwork/sfa_loader/libraries}/infinitylib/machines/CraftingBlock.java (97%)
 rename src/main/java/{io/github/mooy1 => id/universenetwork/sfa_loader/libraries}/infinitylib/machines/CraftingBlockRecipe.java (90%)
 rename src/main/java/{io/github/mooy1 => id/universenetwork/sfa_loader/libraries}/infinitylib/machines/MachineBlock.java (95%)
 rename src/main/java/{io/github/mooy1 => id/universenetwork/sfa_loader/libraries}/infinitylib/machines/MachineBlockRecipe.java (92%)
 rename src/main/java/{io/github/mooy1 => id/universenetwork/sfa_loader/libraries}/infinitylib/machines/MachineInput.java (84%)
 rename src/main/java/{io/github/mooy1 => id/universenetwork/sfa_loader/libraries}/infinitylib/machines/MachineLayout.java (96%)
 rename src/main/java/{io/github/mooy1 => id/universenetwork/sfa_loader/libraries}/infinitylib/machines/MachineLore.java (94%)
 rename src/main/java/{io/github/mooy1 => id/universenetwork/sfa_loader/libraries}/infinitylib/machines/MachineRecipeType.java (86%)
 rename src/main/java/{io/github/mooy1 => id/universenetwork/sfa_loader/libraries}/infinitylib/machines/MenuBlock.java (98%)
 rename src/main/java/{io/github/mooy1 => id/universenetwork/sfa_loader/libraries}/infinitylib/machines/MenuBlockPreset.java (95%)
 rename src/main/java/{io/github/mooy1 => id/universenetwork/sfa_loader/libraries}/infinitylib/machines/TickingMenuBlock.java (95%)
 delete mode 100644 src/main/java/io/github/mooy1/infinitylib/commands/AddonCommand.java
 delete mode 100644 src/main/java/io/github/mooy1/infinitylib/commands/AliasesCommand.java
 delete mode 100644 src/main/java/io/github/mooy1/infinitylib/commands/HelpCommand.java
 delete mode 100644 src/main/java/io/github/mooy1/infinitylib/commands/InfoCommand.java
 delete mode 100644 src/main/java/io/github/mooy1/infinitylib/commands/ParentCommand.java
 delete mode 100644 src/main/java/io/github/mooy1/infinitylib/commands/SubCommand.java
 delete mode 100644 src/test/java/io/github/mooy1/infinitylib/TestInfinityLib.java
 delete mode 100644 src/test/java/io/github/mooy1/infinitylib/commands/MockParentCommand.java
 delete mode 100644 src/test/java/io/github/mooy1/infinitylib/commands/MockSubCommand.java
 delete mode 100644 src/test/java/io/github/mooy1/infinitylib/commands/TestAddonCommand.java
 delete mode 100644 src/test/java/io/github/mooy1/infinitylib/common/MockEvent.java
 delete mode 100644 src/test/java/io/github/mooy1/infinitylib/common/TestCoolDowns.java
 delete mode 100644 src/test/java/io/github/mooy1/infinitylib/common/TestEvents.java
 delete mode 100644 src/test/java/io/github/mooy1/infinitylib/common/TestPersistentType.java
 delete mode 100644 src/test/java/io/github/mooy1/infinitylib/common/TestScheduler.java
 delete mode 100644 src/test/java/io/github/mooy1/infinitylib/common/TestStackUtils.java
 delete mode 100644 src/test/java/io/github/mooy1/infinitylib/core/MockAddon.java
 delete mode 100644 src/test/java/io/github/mooy1/infinitylib/core/MockAddonTest.java
 delete mode 100644 src/test/java/io/github/mooy1/infinitylib/core/TestAbstractAddon.java
 delete mode 100644 src/test/java/io/github/mooy1/infinitylib/core/TestAddonConfig.java
 delete mode 100644 src/test/java/io/github/mooy1/infinitylib/core/TestAddonLive.java
 delete mode 100644 src/test/java/io/github/mooy1/infinitylib/core/TestAddonTesting.java
 delete mode 100644 src/test/java/io/github/mooy1/infinitylib/groups/TestGroups.java
 delete mode 100644 src/test/java/io/github/mooy1/infinitylib/machines/TestCraftingBlock.java
 delete mode 100644 src/test/java/io/github/mooy1/infinitylib/machines/TestMachineBlock.java
 delete mode 100644 src/test/java/io/github/mooy1/infinitylib/machines/TestMachineRecipeType.java
 delete mode 100644 src/test/java/io/github/mooy1/otheraddon/MockOtherAddon.java
 delete mode 100644 src/test/resources/config.yml
 delete mode 100644 src/test/resources/plugin.yml
 delete mode 100644 src/test/resources/test.yml

diff --git a/pom.xml b/pom.xml
index 6f2d23e..3f75902 100644
--- a/pom.xml
+++ b/pom.xml
@@ -2,24 +2,19 @@
 <project xmlns="http://maven.apache.org/POM/4.0.0"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
-
     <modelVersion>4.0.0</modelVersion>
+
+    <parent>
+        <groupId>id.universenetwork.sfa_loader</groupId>
+        <artifactId>SlimefunAddon-Loader</artifactId>
+        <version>1.2.0</version>
+    </parent>
+
     <groupId>io.github.mooy1</groupId>
     <artifactId>InfinityLib</artifactId>
     <version>1.3.10</version>
 
-    <properties>
-        <maven.compiler.source>1.8</maven.compiler.source>
-        <maven.compiler.target>1.8</maven.compiler.target>
-        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
-    </properties>
-
     <repositories>
-        <repository>
-            <id>jitpack.io</id>
-            <url>https://jitpack.io/</url>
-        </repository>
-
         <repository>
             <id>spigot-repo</id>
             <url>https://hub.spigotmc.org/nexus/content/repositories/snapshots/</url>
@@ -41,124 +36,15 @@
             <scope>provided</scope>
         </dependency>
 
-        <dependency>
-            <groupId>org.projectlombok</groupId>
-            <artifactId>lombok</artifactId>
-            <version>1.18.28</version>
-            <scope>provided</scope>
-        </dependency>
-
         <dependency>
             <groupId>com.google.code.findbugs</groupId>
             <artifactId>jsr305</artifactId>
             <version>3.0.2</version>
             <scope>provided</scope>
         </dependency>
-
-        <dependency>
-            <groupId>org.bstats</groupId>
-            <artifactId>bstats-bukkit</artifactId>
-            <version>2.2.1</version>
-            <scope>compile</scope>
-        </dependency>
-
-        <dependency>
-            <groupId>org.junit.jupiter</groupId>
-            <artifactId>junit-jupiter</artifactId>
-            <version>5.7.2</version>
-            <scope>test</scope>
-        </dependency>
-
-        <dependency>
-            <groupId>com.github.seeseemelk</groupId>
-            <artifactId>MockBukkit-v1.16</artifactId>
-            <version>1.5.0</version>
-            <scope>test</scope>
-        </dependency>
     </dependencies>
 
     <build>
-        <sourceDirectory>${project.basedir}/src/main/java</sourceDirectory>
-        <defaultGoal>clean package</defaultGoal>
         <finalName>${project.name} v${project.version}</finalName>
-
-        <plugins>
-            <plugin>
-                <groupId>org.apache.maven.plugins</groupId>
-                <artifactId>maven-help-plugin</artifactId>
-                <version>3.2.0</version>
-            </plugin>
-
-            <plugin>
-                <groupId>org.apache.maven.plugins</groupId>
-                <artifactId>maven-source-plugin</artifactId>
-                <version>3.2.1</version>
-                <executions>
-                    <execution>
-                        <id>attach-sources</id>
-                        <goals>
-                            <goal>jar</goal>
-                        </goals>
-                    </execution>
-                </executions>
-            </plugin>
-
-            <plugin>
-                <groupId>org.apache.maven.plugins</groupId>
-                <artifactId>maven-surefire-plugin</artifactId>
-                <version>3.0.0-M5</version>
-
-                <configuration>
-                    <junitArtifactName>org.junit.jupiter:junit-jupiter</junitArtifactName>
-                    <trimStackTrace>false</trimStackTrace>
-                </configuration>
-            </plugin>
-
-            <plugin>
-                <groupId>org.codehaus.mojo</groupId>
-                <artifactId>templating-maven-plugin</artifactId>
-                <version>1.0.0</version>
-
-                <executions>
-                    <execution>
-                        <id>filter-src</id>
-                        <goals>
-                            <goal>filter-sources</goal>
-                        </goals>
-                    </execution>
-                </executions>
-            </plugin>
-
-            <plugin>
-                <groupId>org.apache.maven.plugins</groupId>
-                <artifactId>maven-shade-plugin</artifactId>
-                <version>3.2.4</version>
-
-                <configuration>
-                    <relocations>
-                        <relocation>
-                            <pattern>org.bstats</pattern>
-                            <shadedPattern>io.github.mooy1.infinitylib.metrics</shadedPattern>
-                        </relocation>
-                    </relocations>
-                    <filters>
-                        <filter>
-                            <artifact>*:*</artifact>
-                            <excludes>
-                                <exclude>META-INF/*</exclude>
-                            </excludes>
-                        </filter>
-                    </filters>
-                </configuration>
-                <executions>
-                    <execution>
-                        <phase>package</phase>
-                        <goals>
-                            <goal>shade</goal>
-                        </goals>
-                    </execution>
-                </executions>
-            </plugin>
-        </plugins>
     </build>
 </project>
\ No newline at end of file
diff --git a/src/main/java-templates/io/github/mooy1/infinitylib/InfinityLib.java b/src/main/java-templates/io/github/mooy1/infinitylib/InfinityLib.java
deleted file mode 100644
index 10e8dfd..0000000
--- a/src/main/java-templates/io/github/mooy1/infinitylib/InfinityLib.java
+++ /dev/null
@@ -1,26 +0,0 @@
-package io.github.mooy1.infinitylib;
-
-import lombok.experimental.UtilityClass;
-
-/**
- * Contains a filtered string of InfinityLib's version and packages for verifying relocation
- */
-@UtilityClass
-public final class InfinityLib {
-
-    /**
-     * The version of this InfinityLib package, for example 1.2.3 or Unofficial
-     */
-    public static final String VERSION = "${project.version}";
-
-    /**
-     * The package of this class, for example: me.name.addon.infinitylib
-     */
-    public static final String PACKAGE = InfinityLib.class.getPackage().getName();
-
-    /**
-     * The package of the addon that shaded this, for example: me.name.addon
-     */
-    public static final String ADDON_PACKAGE = PACKAGE.substring(0, PACKAGE.lastIndexOf('.'));
-
-}
diff --git a/src/main/java/id/arvin3108/standalone/SlimefunAddonInstance.java b/src/main/java/id/arvin3108/standalone/SlimefunAddonInstance.java
deleted file mode 100644
index 736b9ad..0000000
--- a/src/main/java/id/arvin3108/standalone/SlimefunAddonInstance.java
+++ /dev/null
@@ -1,144 +0,0 @@
-package id.arvin3108.standalone;
-
-import java.io.File;
-import java.lang.reflect.InvocationTargetException;
-import java.lang.reflect.Method;
-import java.util.Objects;
-
-import javax.annotation.Nonnull;
-import javax.annotation.Nullable;
-
-import lombok.Getter;
-
-import org.bukkit.plugin.java.JavaPlugin;
-
-import io.github.mooy1.infinitylib.common.Scheduler;
-import io.github.mooy1.infinitylib.core.AbstractAddon;
-import io.github.mooy1.infinitylib.core.Environment;
-import io.github.thebusybiscuit.slimefun4.api.SlimefunAddon;
-import io.github.thebusybiscuit.slimefun4.implementation.Slimefun;
-import io.github.thebusybiscuit.slimefun4.libraries.dough.updater.GitHubBuildsUpdater;
-
-public class SlimefunAddonInstance implements SlimefunAddon {
-
-    private static SlimefunAddonInstance instance;
-
-    /**
-     * Returns the total number of Slimefun ticks that have occurred
-     */
-    @Getter
-    private static int slimefunTickCount = 0;
-    private final String githubUserName;
-    private final String githubRepo;
-    private final String bugTrackerURL;
-
-    private boolean autoUpdatesEnabled;
-
-    public SlimefunAddonInstance(String githubUserName, String githubRepo) {
-        if (instance != null) {
-            throw new IllegalStateException("SlimefunAddonInstance is already initialized!");
-        }
-
-        this.githubUserName = githubUserName;
-        this.githubRepo = githubRepo;
-
-        if (AbstractAddon.environment() == Environment.LIVE) {
-            if (!githubUserName.matches("[\\w-]+")) {
-                throw new IllegalArgumentException("Invalid githubUserName");
-            }
-            if (!githubRepo.matches("[\\w-]+")) {
-                throw new IllegalArgumentException("Invalid githubRepo");
-            }
-        }
-
-        this.bugTrackerURL = "https://github.com/" + githubUserName + "/" + githubRepo + "/issues";
-
-        // Create total tick count
-        Scheduler.repeat(Slimefun.getTickerTask().getTickRate(), () -> slimefunTickCount++);
-
-        instance = this;
-    }
-
-    @Nonnull
-    @Override
-    public JavaPlugin getJavaPlugin() {
-        return AbstractAddon.instance();
-    }
-
-    @Nullable
-    @Override
-    public String getBugTrackerURL() {
-        return bugTrackerURL;
-    }
-
-    public void setSlimefunTickCount(int tick) {
-        slimefunTickCount = tick;
-    }
-
-    public void createAndStartUpdater(String autoUpdateBranch, String autoUpdateKey) {
-        boolean official = AbstractAddon.instance().getDescription().getVersion().matches("DEV - \\d+ \\(git \\w+\\)");
-        boolean brokenConfig = AbstractAddon.instance().isBrokenConfig();
-
-        // Validate autoUpdateBranch
-        if (!autoUpdateBranch.matches("[\\w-]+")) {
-            throw new IllegalArgumentException("Invalid autoUpdateBranch");
-        }
-
-        // Validate autoUpdateKey
-        if (autoUpdateKey == null) {
-            AbstractAddon.instance().setBrokenConfig(true);
-            AbstractAddon.instance().handle(new IllegalStateException("Null auto update key"));
-        }
-        else if (autoUpdateKey.isEmpty()) {
-            AbstractAddon.instance().setBrokenConfig(true);
-            AbstractAddon.instance().handle(new IllegalStateException("Empty auto update key!"));
-        }
-        else if (!brokenConfig && !AbstractAddon.instance().getConfig().getDefaults().contains(autoUpdateKey, true)) {
-            AbstractAddon.instance().setBrokenConfig(true);
-            AbstractAddon.instance().handle(new IllegalStateException("Auto update key missing from the default config!"));
-        }
-
-        File file = null;
-
-        try {
-            Method getFileMethod = JavaPlugin.class.getDeclaredMethod("getFile");
-            getFileMethod.setAccessible(true);
-            file = (File) getFileMethod.invoke(AbstractAddon.instance());
-        }
-        catch (NoSuchMethodException e) {
-            AbstractAddon.instance().handle(new IllegalStateException("Can't find getFile method in plugin main class"));
-        }
-        catch (IllegalAccessException | InvocationTargetException e) {
-            AbstractAddon.instance().handle(new IllegalStateException("Unable to access getFile method of plugin main class"));
-        }
-        finally {
-            GitHubBuildsUpdater updater = official ? new GitHubBuildsUpdater(AbstractAddon.instance(), file,
-                    githubUserName + "/" + githubRepo + "/" + autoUpdateBranch) : null;
-
-            // Auto update if enabled
-            if (updater != null) {
-                if (brokenConfig) {
-                    updater.start();
-                }
-                else if (AbstractAddon.config().getBoolean(autoUpdateKey)) {
-                    autoUpdatesEnabled = true;
-                    updater.start();
-                }
-            }
-        }
-    }
-
-    /**
-     * Returns whether auto updates are enabled, for use in metrics
-     */
-    public final boolean autoUpdatesEnabled() {
-        return autoUpdatesEnabled;
-    }
-
-    @Nonnull
-    @SuppressWarnings("unchecked")
-    public static <T extends SlimefunAddonInstance> T getSFAInstance() {
-        return (T) Objects.requireNonNull(instance, "SlimefunAddonInstance is not initialized!");
-    }
-
-}
\ No newline at end of file
diff --git a/src/main/java/io/github/mooy1/infinitylib/common/CoolDowns.java b/src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/common/CoolDowns.java
similarity index 91%
rename from src/main/java/io/github/mooy1/infinitylib/common/CoolDowns.java
rename to src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/common/CoolDowns.java
index c5feabb..6c48e6b 100644
--- a/src/main/java/io/github/mooy1/infinitylib/common/CoolDowns.java
+++ b/src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/common/CoolDowns.java
@@ -1,4 +1,4 @@
-package io.github.mooy1.infinitylib.common;
+package id.universenetwork.sfa_loader.libraries.infinitylib.common;
 
 import java.util.HashMap;
 import java.util.Map;
diff --git a/src/main/java/io/github/mooy1/infinitylib/common/Events.java b/src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/common/Events.java
similarity index 78%
rename from src/main/java/io/github/mooy1/infinitylib/common/Events.java
rename to src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/common/Events.java
index 55eb627..a08169b 100644
--- a/src/main/java/io/github/mooy1/infinitylib/common/Events.java
+++ b/src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/common/Events.java
@@ -1,4 +1,4 @@
-package io.github.mooy1.infinitylib.common;
+package id.universenetwork.sfa_loader.libraries.infinitylib.common;
 
 import java.util.function.Consumer;
 
@@ -12,7 +12,7 @@ import org.bukkit.event.Event;
 import org.bukkit.event.EventPriority;
 import org.bukkit.event.Listener;
 
-import io.github.mooy1.infinitylib.core.AbstractAddon;
+import id.universenetwork.sfa_loader.libraries.infinitylib.core.AbstractAddon;
 
 /**
  * A class for registering listeners and event handlers
@@ -36,8 +36,10 @@ public final class Events implements Listener {
     /**
      * Registers the given listener class
      */
-    public static void registerListener(Listener listener) {
-        Bukkit.getPluginManager().registerEvents(listener, AbstractAddon.instance());
+    public static void registerListener(Listener... listeners) {
+        for (Listener listener : listeners) {
+            Bukkit.getPluginManager().registerEvents(listener, AbstractAddon.instance());
+        }
     }
 
     /**
diff --git a/src/main/java/io/github/mooy1/infinitylib/common/PersistentType.java b/src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/common/PersistentType.java
similarity index 99%
rename from src/main/java/io/github/mooy1/infinitylib/common/PersistentType.java
rename to src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/common/PersistentType.java
index 2bc05a0..7b120aa 100644
--- a/src/main/java/io/github/mooy1/infinitylib/common/PersistentType.java
+++ b/src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/common/PersistentType.java
@@ -1,4 +1,4 @@
-package io.github.mooy1.infinitylib.common;
+package id.universenetwork.sfa_loader.libraries.infinitylib.common;
 
 import java.io.ByteArrayInputStream;
 import java.io.ByteArrayOutputStream;
diff --git a/src/main/java/io/github/mooy1/infinitylib/common/Scheduler.java b/src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/common/Scheduler.java
similarity index 87%
rename from src/main/java/io/github/mooy1/infinitylib/common/Scheduler.java
rename to src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/common/Scheduler.java
index 7baa95f..f8b905d 100644
--- a/src/main/java/io/github/mooy1/infinitylib/common/Scheduler.java
+++ b/src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/common/Scheduler.java
@@ -1,4 +1,4 @@
-package io.github.mooy1.infinitylib.common;
+package id.universenetwork.sfa_loader.libraries.infinitylib.common;
 
 import javax.annotation.ParametersAreNonnullByDefault;
 
@@ -6,7 +6,7 @@ import lombok.experimental.UtilityClass;
 
 import org.bukkit.Bukkit;
 
-import io.github.mooy1.infinitylib.core.AbstractAddon;
+import id.universenetwork.sfa_loader.libraries.infinitylib.core.AbstractAddon;
 
 /**
  * A class for scheduling tasks
@@ -25,7 +25,7 @@ public final class Scheduler {
         Bukkit.getScheduler().runTaskAsynchronously(AbstractAddon.instance(), runnable);
     }
 
-    public static void run(int delayTicks, Runnable runnable) {
+    public static void run(long delayTicks, Runnable runnable) {
         Bukkit.getScheduler().runTaskLater(AbstractAddon.instance(), runnable, delayTicks);
     }
 
diff --git a/src/main/java/io/github/mooy1/infinitylib/common/StackUtils.java b/src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/common/StackUtils.java
similarity index 80%
rename from src/main/java/io/github/mooy1/infinitylib/common/StackUtils.java
rename to src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/common/StackUtils.java
index c049c10..298d595 100644
--- a/src/main/java/io/github/mooy1/infinitylib/common/StackUtils.java
+++ b/src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/common/StackUtils.java
@@ -1,4 +1,4 @@
-package io.github.mooy1.infinitylib.common;
+package id.universenetwork.sfa_loader.libraries.infinitylib.common;
 
 import javax.annotation.Nonnull;
 import javax.annotation.Nullable;
@@ -26,9 +26,11 @@ public final class StackUtils {
     public static String getId(ItemStack item) {
         if (item instanceof SlimefunItemStack) {
             return ((SlimefunItemStack) item).getItemId();
-        } else if (item.hasItemMeta()) {
+        }
+        else if (item.hasItemMeta()) {
             return getId(item.getItemMeta());
-        } else {
+        }
+        else {
             return null;
         }
     }
@@ -42,10 +44,12 @@ public final class StackUtils {
     public static String getIdOrType(ItemStack item) {
         if (item instanceof SlimefunItemStack) {
             return ((SlimefunItemStack) item).getItemId();
-        } else if (item.hasItemMeta()) {
+        }
+        else if (item.hasItemMeta()) {
             String id = getId(item.getItemMeta());
             return id == null ? item.getType().name() : id;
-        } else {
+        }
+        else {
             return item.getType().name();
         }
     }
@@ -64,16 +68,18 @@ public final class StackUtils {
 
     /**
      * Returns true when both items:
-     *  - Are null or air
-     *  - Have the same slimefun id
-     *  - Have the same type and display name or lack thereof
+     * - Are null or air
+     * - Have the same slimefun id
+     * - Have the same type and display name or lack thereof
      */
     public static boolean isSimilar(@Nullable ItemStack first, @Nullable ItemStack second) {
         if (first == null || first.getType().isAir()) {
             return second == null || second.getType().isAir();
-        } else if (second == null || second.getType().isAir()) {
+        }
+        else if (second == null || second.getType().isAir()) {
             return false;
-        } else if (first.hasItemMeta()) {
+        }
+        else if (first.hasItemMeta()) {
             if (second.hasItemMeta()) {
                 ItemMeta firstMeta = first.getItemMeta();
                 ItemMeta secondMeta = second.getItemMeta();
@@ -84,24 +90,31 @@ public final class StackUtils {
                             if (firstMeta.hasDisplayName()) {
                                 return secondMeta.hasDisplayName()
                                         && firstMeta.getDisplayName().equals(secondMeta.getDisplayName());
-                            } else {
+                            }
+                            else {
                                 return !secondMeta.hasDisplayName();
                             }
-                        } else {
+                        }
+                        else {
                             return false;
                         }
-                    } else {
+                    }
+                    else {
                         return false;
                     }
-                } else {
+                }
+                else {
                     return firstId.equals(getId(secondMeta));
                 }
-            } else {
+            }
+            else {
                 return false;
             }
-        } else if (second.hasItemMeta()) {
+        }
+        else if (second.hasItemMeta()) {
             return false;
-        } else {
+        }
+        else {
             return first.getType() == second.getType();
         }
     }
diff --git a/src/main/java/io/github/mooy1/infinitylib/common/StringUtils.java b/src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/common/StringUtils.java
similarity index 89%
rename from src/main/java/io/github/mooy1/infinitylib/common/StringUtils.java
rename to src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/common/StringUtils.java
index 3605f64..f57f935 100644
--- a/src/main/java/io/github/mooy1/infinitylib/common/StringUtils.java
+++ b/src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/common/StringUtils.java
@@ -1,4 +1,4 @@
-package io.github.mooy1.infinitylib.common;
+package id.universenetwork.sfa_loader.libraries.infinitylib.common;
 
 import lombok.experimental.UtilityClass;
 
@@ -21,4 +21,5 @@ public class StringUtils {
         // No non-whitespace chars, is blank
         return true;
     }
+
 }
diff --git a/src/main/java/io/github/mooy1/infinitylib/core/AbstractAddon.java b/src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/core/AbstractAddon.java
similarity index 82%
rename from src/main/java/io/github/mooy1/infinitylib/core/AbstractAddon.java
rename to src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/core/AbstractAddon.java
index 967e693..20a2121 100644
--- a/src/main/java/io/github/mooy1/infinitylib/core/AbstractAddon.java
+++ b/src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/core/AbstractAddon.java
@@ -1,4 +1,4 @@
-package io.github.mooy1.infinitylib.core;
+package id.universenetwork.sfa_loader.libraries.infinitylib.core;
 
 import java.io.File;
 import java.util.Objects;
@@ -9,14 +9,10 @@ import javax.annotation.Nonnull;
 import javax.annotation.ParametersAreNonnullByDefault;
 
 import org.bukkit.NamespacedKey;
-import org.bukkit.command.PluginCommand;
 import org.bukkit.plugin.PluginDescriptionFile;
 import org.bukkit.plugin.java.JavaPlugin;
 import org.bukkit.plugin.java.JavaPluginLoader;
 
-import io.github.mooy1.infinitylib.InfinityLib;
-import io.github.mooy1.infinitylib.commands.AddonCommand;
-
 /**
  * Extend this in your main plugin class to access a bunch of utilities
  * <br><br> Standalone version of InfinityLib
@@ -31,7 +27,6 @@ public abstract class AbstractAddon extends JavaPlugin {
 
     private final Environment environment;
 
-    private AddonCommand command;
     private AddonConfig config;
     private boolean brokenConfig;
     private boolean disabling;
@@ -64,15 +59,6 @@ public abstract class AbstractAddon extends JavaPlugin {
     }
 
     private void validate() {
-        if (environment == Environment.LIVE) {
-            if (InfinityLib.PACKAGE.contains("mooy1.infinitylib")) {
-                throw new IllegalStateException("You must relocate InfinityLib to your own package!");
-            }
-            String addonPackage = getClass().getPackage().getName();
-            if (!addonPackage.contains(InfinityLib.ADDON_PACKAGE)) {
-                throw new IllegalStateException("Shade and relocate your own InfinityLib!");
-            }
-        }
         if (instance != null) {
             throw new IllegalStateException("Addon " + instance.getName() + " is already using this InfinityLib, Shade an relocate your own!");
         }
@@ -121,12 +107,6 @@ public abstract class AbstractAddon extends JavaPlugin {
             e.printStackTrace();
         }
 
-        // Get plugin command
-        PluginCommand pluginCommand = getCommand(getName());
-        if (pluginCommand != null) {
-            command = new AddonCommand(pluginCommand);
-        }
-
         // Call addon enable
         try {
             enable();
@@ -156,7 +136,6 @@ public abstract class AbstractAddon extends JavaPlugin {
         finally {
             disabling = false;
             instance = null;
-            command = null;
             config = null;
         }
     }
@@ -190,14 +169,6 @@ public abstract class AbstractAddon extends JavaPlugin {
      */
     protected abstract void disable();
 
-    /**
-     * Gets the command of the same name as this addon
-     */
-    @Nonnull
-    protected final AddonCommand getAddonCommand() {
-        return Objects.requireNonNull(instance().command, "Command '" + getName() + "' missing from plugin.yml!");
-    }
-
     @Nonnull
     @Override
     public final AddonConfig getConfig() {
diff --git a/src/main/java/io/github/mooy1/infinitylib/core/AddonConfig.java b/src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/core/AddonConfig.java
similarity index 93%
rename from src/main/java/io/github/mooy1/infinitylib/core/AddonConfig.java
rename to src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/core/AddonConfig.java
index c2e14c9..3f199c8 100644
--- a/src/main/java/io/github/mooy1/infinitylib/core/AddonConfig.java
+++ b/src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/core/AddonConfig.java
@@ -1,4 +1,4 @@
-package io.github.mooy1.infinitylib.core;
+package id.universenetwork.sfa_loader.libraries.infinitylib.core;
 
 import java.io.BufferedReader;
 import java.io.File;
@@ -13,10 +13,10 @@ import javax.annotation.Nonnull;
 import javax.annotation.Nullable;
 import javax.annotation.ParametersAreNonnullByDefault;
 
-import io.github.mooy1.infinitylib.common.StringUtils;
-
 import org.bukkit.configuration.file.YamlConfiguration;
 
+import id.universenetwork.sfa_loader.libraries.infinitylib.common.StringUtils;
+
 /**
  * A config which is able to save all of its comments and has some additional utility methods
  *
@@ -30,10 +30,16 @@ public final class AddonConfig extends YamlConfiguration {
     private final File file;
 
     public AddonConfig(String path) {
+        this(path, true);
+    }
+
+    public AddonConfig(String path, boolean loadDefault) {
         AbstractAddon addon = AbstractAddon.instance();
         file = new File(addon.getDataFolder(), path);
-        super.defaults = defaults;
-        loadDefaults(addon, path);
+        if (loadDefault) {
+            super.defaults = defaults;
+            loadDefaults(addon, path);
+        }
     }
 
     public int getInt(String path, int min, int max) {
diff --git a/src/main/java/io/github/mooy1/infinitylib/core/Environment.java b/src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/core/Environment.java
similarity index 83%
rename from src/main/java/io/github/mooy1/infinitylib/core/Environment.java
rename to src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/core/Environment.java
index f23a83c..8d0f752 100644
--- a/src/main/java/io/github/mooy1/infinitylib/core/Environment.java
+++ b/src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/core/Environment.java
@@ -1,4 +1,4 @@
-package io.github.mooy1.infinitylib.core;
+package id.universenetwork.sfa_loader.libraries.infinitylib.core;
 
 /**
  * Represents the current runtime environment
diff --git a/src/main/java/io/github/mooy1/infinitylib/core/PathBuilder.java b/src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/core/PathBuilder.java
similarity index 95%
rename from src/main/java/io/github/mooy1/infinitylib/core/PathBuilder.java
rename to src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/core/PathBuilder.java
index 855cb92..ca0f3ce 100644
--- a/src/main/java/io/github/mooy1/infinitylib/core/PathBuilder.java
+++ b/src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/core/PathBuilder.java
@@ -1,4 +1,4 @@
-package io.github.mooy1.infinitylib.core;
+package id.universenetwork.sfa_loader.libraries.infinitylib.core;
 
 import java.util.ArrayList;
 import java.util.List;
diff --git a/src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/core/SlimefunAddonInstance.java b/src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/core/SlimefunAddonInstance.java
new file mode 100644
index 0000000..002a820
--- /dev/null
+++ b/src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/core/SlimefunAddonInstance.java
@@ -0,0 +1,73 @@
+package id.universenetwork.sfa_loader.libraries.infinitylib.core;
+
+import java.util.Objects;
+
+import javax.annotation.Nonnull;
+import javax.annotation.Nullable;
+
+import lombok.Getter;
+
+import org.bukkit.plugin.java.JavaPlugin;
+
+import id.universenetwork.sfa_loader.libraries.infinitylib.common.Scheduler;
+import io.github.thebusybiscuit.slimefun4.api.SlimefunAddon;
+import io.github.thebusybiscuit.slimefun4.implementation.Slimefun;
+
+public class SlimefunAddonInstance implements SlimefunAddon {
+
+    private static SlimefunAddonInstance instance;
+
+    /**
+     * Returns the total number of Slimefun ticks that have occurred
+     */
+    @Getter
+    private static int slimefunTickCount = 0;
+    private final String bugTrackerURL;
+
+    private boolean autoUpdatesEnabled;
+
+    public SlimefunAddonInstance(String githubUserName, String githubRepo) {
+        if (instance != null) {
+            throw new IllegalStateException("SlimefunAddonInstance is already initialized!");
+        }
+
+        if (AbstractAddon.environment() == Environment.LIVE) {
+            if (!githubUserName.matches("[\\w-]+")) {
+                throw new IllegalArgumentException("Invalid githubUserName");
+            }
+            if (!githubRepo.matches("[\\w-]+")) {
+                throw new IllegalArgumentException("Invalid githubRepo");
+            }
+        }
+
+        this.bugTrackerURL = "https://github.com/" + githubUserName + "/" + githubRepo + "/issues";
+
+        // Create total tick count
+        Scheduler.repeat(Slimefun.getTickerTask().getTickRate(), () -> slimefunTickCount++);
+
+        instance = this;
+    }
+
+    @Nonnull
+    @Override
+    public JavaPlugin getJavaPlugin() {
+        return AbstractAddon.instance();
+    }
+
+    @Nullable
+    @Override
+    public String getBugTrackerURL() {
+        return bugTrackerURL;
+    }
+
+    public void setSlimefunTickCount(int tick) {
+        slimefunTickCount = tick;
+    }
+
+    @Nonnull
+    @SuppressWarnings("unchecked")
+    public static <T extends SlimefunAddonInstance> T getSFAInstance() {
+        return (T) Objects.requireNonNull(instance, "SlimefunAddonInstance is not initialized!");
+    }
+
+}
\ No newline at end of file
diff --git a/src/main/java/io/github/mooy1/infinitylib/groups/MultiGroup.java b/src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/groups/MultiGroup.java
similarity index 96%
rename from src/main/java/io/github/mooy1/infinitylib/groups/MultiGroup.java
rename to src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/groups/MultiGroup.java
index 9ad0c21..2775c1d 100644
--- a/src/main/java/io/github/mooy1/infinitylib/groups/MultiGroup.java
+++ b/src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/groups/MultiGroup.java
@@ -1,4 +1,4 @@
-package io.github.mooy1.infinitylib.groups;
+package id.universenetwork.sfa_loader.libraries.infinitylib.groups;
 
 import java.util.Arrays;
 import java.util.Comparator;
@@ -10,7 +10,7 @@ import org.bukkit.Sound;
 import org.bukkit.entity.Player;
 import org.bukkit.inventory.ItemStack;
 
-import io.github.mooy1.infinitylib.core.AbstractAddon;
+import id.universenetwork.sfa_loader.libraries.infinitylib.core.AbstractAddon;
 import io.github.thebusybiscuit.slimefun4.api.SlimefunAddon;
 import io.github.thebusybiscuit.slimefun4.api.items.ItemGroup;
 import io.github.thebusybiscuit.slimefun4.api.items.groups.FlexItemGroup;
diff --git a/src/main/java/io/github/mooy1/infinitylib/groups/SubGroup.java b/src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/groups/SubGroup.java
similarity index 81%
rename from src/main/java/io/github/mooy1/infinitylib/groups/SubGroup.java
rename to src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/groups/SubGroup.java
index 6823622..a6efa50 100644
--- a/src/main/java/io/github/mooy1/infinitylib/groups/SubGroup.java
+++ b/src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/groups/SubGroup.java
@@ -1,11 +1,11 @@
-package io.github.mooy1.infinitylib.groups;
+package id.universenetwork.sfa_loader.libraries.infinitylib.groups;
 
 import javax.annotation.ParametersAreNonnullByDefault;
 
 import org.bukkit.entity.Player;
 import org.bukkit.inventory.ItemStack;
 
-import io.github.mooy1.infinitylib.core.AbstractAddon;
+import id.universenetwork.sfa_loader.libraries.infinitylib.core.AbstractAddon;
 import io.github.thebusybiscuit.slimefun4.api.items.ItemGroup;
 
 /**
diff --git a/src/main/java/io/github/mooy1/infinitylib/machines/AbstractMachineBlock.java b/src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/machines/AbstractMachineBlock.java
similarity index 96%
rename from src/main/java/io/github/mooy1/infinitylib/machines/AbstractMachineBlock.java
rename to src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/machines/AbstractMachineBlock.java
index 275677b..8d83610 100644
--- a/src/main/java/io/github/mooy1/infinitylib/machines/AbstractMachineBlock.java
+++ b/src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/machines/AbstractMachineBlock.java
@@ -1,4 +1,4 @@
-package io.github.mooy1.infinitylib.machines;
+package id.universenetwork.sfa_loader.libraries.infinitylib.machines;
 
 import javax.annotation.Nonnull;
 import javax.annotation.ParametersAreNonnullByDefault;
diff --git a/src/main/java/io/github/mooy1/infinitylib/machines/CraftingBlock.java b/src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/machines/CraftingBlock.java
similarity index 97%
rename from src/main/java/io/github/mooy1/infinitylib/machines/CraftingBlock.java
rename to src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/machines/CraftingBlock.java
index 7db633b..0961c8c 100644
--- a/src/main/java/io/github/mooy1/infinitylib/machines/CraftingBlock.java
+++ b/src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/machines/CraftingBlock.java
@@ -1,4 +1,4 @@
-package io.github.mooy1.infinitylib.machines;
+package id.universenetwork.sfa_loader.libraries.infinitylib.machines;
 
 import java.util.ArrayList;
 import java.util.List;
@@ -56,11 +56,13 @@ public class CraftingBlock extends MenuBlock {
                     menu.pushItem(output, layout.outputSlots());
                     recipe.consume(input);
                     p.sendMessage(ChatColor.GREEN + "Successfully Crafted: " + ItemUtils.getItemName(output));
-                } else {
+                }
+                else {
                     p.sendMessage(ChatColor.GOLD + "Not Enough Room!");
                 }
             }
-        } else {
+        }
+        else {
             p.sendMessage(ChatColor.RED + "Invalid Recipe!");
         }
     }
diff --git a/src/main/java/io/github/mooy1/infinitylib/machines/CraftingBlockRecipe.java b/src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/machines/CraftingBlockRecipe.java
similarity index 90%
rename from src/main/java/io/github/mooy1/infinitylib/machines/CraftingBlockRecipe.java
rename to src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/machines/CraftingBlockRecipe.java
index d6c67bd..89fd6dd 100644
--- a/src/main/java/io/github/mooy1/infinitylib/machines/CraftingBlockRecipe.java
+++ b/src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/machines/CraftingBlockRecipe.java
@@ -1,11 +1,11 @@
-package io.github.mooy1.infinitylib.machines;
+package id.universenetwork.sfa_loader.libraries.infinitylib.machines;
 
 import lombok.Getter;
 
 import org.bukkit.entity.Player;
 import org.bukkit.inventory.ItemStack;
 
-import io.github.mooy1.infinitylib.common.StackUtils;
+import id.universenetwork.sfa_loader.libraries.infinitylib.common.StackUtils;
 import io.github.thebusybiscuit.slimefun4.api.items.SlimefunItem;
 import io.github.thebusybiscuit.slimefun4.libraries.dough.items.ItemStackSnapshot;
 import io.github.thebusybiscuit.slimefun4.libraries.dough.items.ItemUtils;
@@ -44,5 +44,5 @@ public final class CraftingBlockRecipe {
             }
         }
     }
-    
+
 }
diff --git a/src/main/java/io/github/mooy1/infinitylib/machines/MachineBlock.java b/src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/machines/MachineBlock.java
similarity index 95%
rename from src/main/java/io/github/mooy1/infinitylib/machines/MachineBlock.java
rename to src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/machines/MachineBlock.java
index 5c82938..c8e2b1a 100644
--- a/src/main/java/io/github/mooy1/infinitylib/machines/MachineBlock.java
+++ b/src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/machines/MachineBlock.java
@@ -1,4 +1,4 @@
-package io.github.mooy1.infinitylib.machines;
+package id.universenetwork.sfa_loader.libraries.infinitylib.machines;
 
 import java.util.ArrayList;
 import java.util.HashMap;
@@ -9,13 +9,14 @@ import javax.annotation.Nonnull;
 import javax.annotation.Nullable;
 import javax.annotation.ParametersAreNonnullByDefault;
 
+import id.universenetwork.sfa_loader.libraries.infinitylib.common.StackUtils;
+import id.universenetwork.sfa_loader.libraries.infinitylib.core.SlimefunAddonInstance;
+
 import lombok.Setter;
 
 import org.bukkit.block.Block;
 import org.bukkit.inventory.ItemStack;
 
-import id.arvin3108.standalone.SlimefunAddonInstance;
-import io.github.mooy1.infinitylib.common.StackUtils;
 import io.github.thebusybiscuit.slimefun4.api.items.ItemGroup;
 import io.github.thebusybiscuit.slimefun4.api.items.SlimefunItemStack;
 import io.github.thebusybiscuit.slimefun4.api.recipes.RecipeType;
diff --git a/src/main/java/io/github/mooy1/infinitylib/machines/MachineBlockRecipe.java b/src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/machines/MachineBlockRecipe.java
similarity index 92%
rename from src/main/java/io/github/mooy1/infinitylib/machines/MachineBlockRecipe.java
rename to src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/machines/MachineBlockRecipe.java
index 42d1215..43fe966 100644
--- a/src/main/java/io/github/mooy1/infinitylib/machines/MachineBlockRecipe.java
+++ b/src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/machines/MachineBlockRecipe.java
@@ -1,11 +1,11 @@
-package io.github.mooy1.infinitylib.machines;
+package id.universenetwork.sfa_loader.libraries.infinitylib.machines;
 
 import java.util.HashMap;
 import java.util.Map;
 
 import org.bukkit.inventory.ItemStack;
 
-import io.github.mooy1.infinitylib.common.StackUtils;
+import id.universenetwork.sfa_loader.libraries.infinitylib.common.StackUtils;
 import io.github.thebusybiscuit.slimefun4.libraries.dough.items.ItemUtils;
 
 final class MachineBlockRecipe {
diff --git a/src/main/java/io/github/mooy1/infinitylib/machines/MachineInput.java b/src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/machines/MachineInput.java
similarity index 84%
rename from src/main/java/io/github/mooy1/infinitylib/machines/MachineInput.java
rename to src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/machines/MachineInput.java
index a64bae4..91c125c 100644
--- a/src/main/java/io/github/mooy1/infinitylib/machines/MachineInput.java
+++ b/src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/machines/MachineInput.java
@@ -1,4 +1,4 @@
-package io.github.mooy1.infinitylib.machines;
+package id.universenetwork.sfa_loader.libraries.infinitylib.machines;
 
 import java.util.ArrayList;
 import java.util.List;
diff --git a/src/main/java/io/github/mooy1/infinitylib/machines/MachineLayout.java b/src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/machines/MachineLayout.java
similarity index 96%
rename from src/main/java/io/github/mooy1/infinitylib/machines/MachineLayout.java
rename to src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/machines/MachineLayout.java
index 9506665..ae0f32c 100644
--- a/src/main/java/io/github/mooy1/infinitylib/machines/MachineLayout.java
+++ b/src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/machines/MachineLayout.java
@@ -1,4 +1,4 @@
-package io.github.mooy1.infinitylib.machines;
+package id.universenetwork.sfa_loader.libraries.infinitylib.machines;
 
 import javax.annotation.ParametersAreNonnullByDefault;
 
diff --git a/src/main/java/io/github/mooy1/infinitylib/machines/MachineLore.java b/src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/machines/MachineLore.java
similarity index 94%
rename from src/main/java/io/github/mooy1/infinitylib/machines/MachineLore.java
rename to src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/machines/MachineLore.java
index 705dc79..137f2d1 100644
--- a/src/main/java/io/github/mooy1/infinitylib/machines/MachineLore.java
+++ b/src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/machines/MachineLore.java
@@ -1,4 +1,4 @@
-package io.github.mooy1.infinitylib.machines;
+package id.universenetwork.sfa_loader.libraries.infinitylib.machines;
 
 import java.text.DecimalFormat;
 
diff --git a/src/main/java/io/github/mooy1/infinitylib/machines/MachineRecipeType.java b/src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/machines/MachineRecipeType.java
similarity index 86%
rename from src/main/java/io/github/mooy1/infinitylib/machines/MachineRecipeType.java
rename to src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/machines/MachineRecipeType.java
index 0895dce..03795fa 100644
--- a/src/main/java/io/github/mooy1/infinitylib/machines/MachineRecipeType.java
+++ b/src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/machines/MachineRecipeType.java
@@ -1,4 +1,4 @@
-package io.github.mooy1.infinitylib.machines;
+package id.universenetwork.sfa_loader.libraries.infinitylib.machines;
 
 import java.util.ArrayList;
 import java.util.LinkedHashMap;
@@ -10,7 +10,7 @@ import lombok.Getter;
 
 import org.bukkit.inventory.ItemStack;
 
-import io.github.mooy1.infinitylib.core.AbstractAddon;
+import id.universenetwork.sfa_loader.libraries.infinitylib.core.AbstractAddon;
 import io.github.thebusybiscuit.slimefun4.api.recipes.RecipeType;
 
 public final class MachineRecipeType extends RecipeType {
diff --git a/src/main/java/io/github/mooy1/infinitylib/machines/MenuBlock.java b/src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/machines/MenuBlock.java
similarity index 98%
rename from src/main/java/io/github/mooy1/infinitylib/machines/MenuBlock.java
rename to src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/machines/MenuBlock.java
index 3ca5ecf..363a5b3 100644
--- a/src/main/java/io/github/mooy1/infinitylib/machines/MenuBlock.java
+++ b/src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/machines/MenuBlock.java
@@ -1,4 +1,4 @@
-package io.github.mooy1.infinitylib.machines;
+package id.universenetwork.sfa_loader.libraries.infinitylib.machines;
 
 import java.util.List;
 
diff --git a/src/main/java/io/github/mooy1/infinitylib/machines/MenuBlockPreset.java b/src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/machines/MenuBlockPreset.java
similarity index 95%
rename from src/main/java/io/github/mooy1/infinitylib/machines/MenuBlockPreset.java
rename to src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/machines/MenuBlockPreset.java
index 4f51b7d..c36399a 100644
--- a/src/main/java/io/github/mooy1/infinitylib/machines/MenuBlockPreset.java
+++ b/src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/machines/MenuBlockPreset.java
@@ -1,4 +1,4 @@
-package io.github.mooy1.infinitylib.machines;
+package id.universenetwork.sfa_loader.libraries.infinitylib.machines;
 
 import javax.annotation.ParametersAreNonnullByDefault;
 
diff --git a/src/main/java/io/github/mooy1/infinitylib/machines/TickingMenuBlock.java b/src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/machines/TickingMenuBlock.java
similarity index 95%
rename from src/main/java/io/github/mooy1/infinitylib/machines/TickingMenuBlock.java
rename to src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/machines/TickingMenuBlock.java
index 07c5066..798a4bb 100644
--- a/src/main/java/io/github/mooy1/infinitylib/machines/TickingMenuBlock.java
+++ b/src/main/java/id/universenetwork/sfa_loader/libraries/infinitylib/machines/TickingMenuBlock.java
@@ -1,4 +1,4 @@
-package io.github.mooy1.infinitylib.machines;
+package id.universenetwork.sfa_loader.libraries.infinitylib.machines;
 
 import javax.annotation.ParametersAreNonnullByDefault;
 
diff --git a/src/main/java/io/github/mooy1/infinitylib/commands/AddonCommand.java b/src/main/java/io/github/mooy1/infinitylib/commands/AddonCommand.java
deleted file mode 100644
index 1221c46..0000000
--- a/src/main/java/io/github/mooy1/infinitylib/commands/AddonCommand.java
+++ /dev/null
@@ -1,100 +0,0 @@
-package io.github.mooy1.infinitylib.commands;
-
-import java.util.ArrayList;
-import java.util.Collections;
-import java.util.List;
-import java.util.Locale;
-import java.util.Objects;
-
-import javax.annotation.ParametersAreNonnullByDefault;
-
-import org.bukkit.command.Command;
-import org.bukkit.command.CommandSender;
-import org.bukkit.command.PluginCommand;
-import org.bukkit.command.TabExecutor;
-import org.bukkit.event.EventHandler;
-import org.bukkit.event.EventPriority;
-import org.bukkit.event.Listener;
-import org.bukkit.event.player.PlayerCommandPreprocessEvent;
-import org.bukkit.event.server.ServerCommandEvent;
-
-import io.github.mooy1.infinitylib.common.Events;
-import io.github.mooy1.infinitylib.core.AbstractAddon;
-
-/**
- * The main command of an addon, which can hold multiple sub commands
- *
- * @author Mooy1
- */
-@ParametersAreNonnullByDefault
-public final class AddonCommand extends ParentCommand implements TabExecutor, Listener {
-
-    private final String help;
-    private final String slashHelp;
-
-    public AddonCommand(String command) {
-        this(Objects.requireNonNull(AbstractAddon.instance().getCommand(command),
-                "No such command '" + command + "'! Add it it to your plugin.yml!"));
-    }
-
-    public AddonCommand(PluginCommand command) {
-        super(command.getName(), command.getDescription());
-
-        command.setExecutor(this);
-        command.setTabCompleter(this);
-
-        Events.registerListener(this);
-
-        help = "help " + command.getName();
-        slashHelp = "/" + help;
-
-        addSub(new InfoCommand(AbstractAddon.instance()));
-        addSub(new AliasesCommand(command));
-    }
-
-    @EventHandler(priority = EventPriority.MONITOR, ignoreCancelled = true)
-    private void onServerCommand(ServerCommandEvent e) {
-        if (e.getCommand().toLowerCase(Locale.ROOT).startsWith(help)) {
-            e.setCommand(name());
-        }
-    }
-
-    @EventHandler(priority = EventPriority.MONITOR, ignoreCancelled = true)
-    private void onPlayerCommand(PlayerCommandPreprocessEvent e) {
-        if (e.getMessage().toLowerCase(Locale.ROOT).startsWith(slashHelp)) {
-            e.setMessage("/" + name());
-        }
-    }
-
-    @Override
-    public boolean onCommand(CommandSender sender, Command command, String label, String[] args) {
-        execute(sender, args);
-        return true;
-    }
-
-    @Override
-    public List<String> onTabComplete(CommandSender sender, Command command, String alias, String[] args) {
-        List<String> strings = new ArrayList<>();
-        complete(sender, args, strings);
-        List<String> returnList = new ArrayList<>();
-        String arg = args[args.length - 1].toLowerCase(Locale.ROOT);
-        for (String item : strings) {
-            if (item.toLowerCase(Locale.ROOT).contains(arg)) {
-                returnList.add(item);
-                if (returnList.size() >= 64) {
-                    break;
-                }
-            }
-            else if (item.equalsIgnoreCase(arg)) {
-                return Collections.emptyList();
-            }
-        }
-        return returnList;
-    }
-
-    @Override
-    String fullName() {
-        return name();
-    }
-
-}
diff --git a/src/main/java/io/github/mooy1/infinitylib/commands/AliasesCommand.java b/src/main/java/io/github/mooy1/infinitylib/commands/AliasesCommand.java
deleted file mode 100644
index 3e370d7..0000000
--- a/src/main/java/io/github/mooy1/infinitylib/commands/AliasesCommand.java
+++ /dev/null
@@ -1,30 +0,0 @@
-package io.github.mooy1.infinitylib.commands;
-
-import java.util.List;
-
-import javax.annotation.ParametersAreNonnullByDefault;
-
-import org.bukkit.command.CommandSender;
-import org.bukkit.command.PluginCommand;
-
-@ParametersAreNonnullByDefault
-final class AliasesCommand extends SubCommand {
-
-    private final String message;
-
-    AliasesCommand(PluginCommand command) {
-        super("aliases", "lists the available aliases for this command");
-        message = "Aliases for /" + command.getName() + ": " + command.getAliases();
-    }
-
-    @Override
-    protected void execute(CommandSender sender, String[] args) {
-        sender.sendMessage(message);
-    }
-
-    @Override
-    protected void complete(CommandSender sender, String[] args, List<String> completions) {
-
-    }
-
-}
diff --git a/src/main/java/io/github/mooy1/infinitylib/commands/HelpCommand.java b/src/main/java/io/github/mooy1/infinitylib/commands/HelpCommand.java
deleted file mode 100644
index 9f17b48..0000000
--- a/src/main/java/io/github/mooy1/infinitylib/commands/HelpCommand.java
+++ /dev/null
@@ -1,38 +0,0 @@
-package io.github.mooy1.infinitylib.commands;
-
-import java.util.List;
-
-import javax.annotation.ParametersAreNonnullByDefault;
-
-import org.bukkit.ChatColor;
-import org.bukkit.command.CommandSender;
-
-import io.github.thebusybiscuit.slimefun4.libraries.dough.common.ChatColors;
-
-@ParametersAreNonnullByDefault
-final class HelpCommand extends SubCommand {
-
-    private final ParentCommand command;
-
-    HelpCommand(ParentCommand command) {
-        super("help", "Displays this");
-        this.command = command;
-    }
-
-    @Override
-    public void execute(CommandSender sender, String[] args) {
-        sender.sendMessage("");
-        sender.sendMessage(ChatColors.color("&7----------&b /" + command.fullName() + " Help &7----------"));
-        sender.sendMessage("");
-        for (SubCommand sub : command.available(sender)) {
-            sender.sendMessage("/" + sub.fullName() + ChatColor.YELLOW + " - " + sub.description());
-        }
-        sender.sendMessage("");
-    }
-
-    @Override
-    public void complete(CommandSender sender, String[] args, List<String> tabs) {
-
-    }
-
-}
diff --git a/src/main/java/io/github/mooy1/infinitylib/commands/InfoCommand.java b/src/main/java/io/github/mooy1/infinitylib/commands/InfoCommand.java
deleted file mode 100644
index 9d07a5e..0000000
--- a/src/main/java/io/github/mooy1/infinitylib/commands/InfoCommand.java
+++ /dev/null
@@ -1,43 +0,0 @@
-package io.github.mooy1.infinitylib.commands;
-
-import java.util.List;
-
-import javax.annotation.ParametersAreNonnullByDefault;
-
-import org.bukkit.command.CommandSender;
-
-import io.github.thebusybiscuit.slimefun4.api.SlimefunAddon;
-import io.github.thebusybiscuit.slimefun4.implementation.Slimefun;
-import io.github.thebusybiscuit.slimefun4.libraries.dough.common.ChatColors;
-
-@ParametersAreNonnullByDefault
-final class InfoCommand extends SubCommand {
-
-    private final String[] message;
-
-    InfoCommand(SlimefunAddon addon) {
-        super("info", "Gives addon and slimefun version and discord links");
-        Slimefun slimefun = Slimefun.instance();
-        message = new String[] {
-                "",
-                ChatColors.color("&b" + addon.getName() + " Info"),
-                ChatColors.color("&bSlimefun Version: &7" + (slimefun == null ? "null" : slimefun.getPluginVersion())),
-                ChatColors.color("&bSlimefun Discord: &7Discord.gg/slimefun"),
-                ChatColors.color("&bAddon Version: &7" + addon.getPluginVersion()),
-                ChatColors.color("&bAddon Community: &7Discord.gg/SqD3gg5SAU"),
-                ChatColors.color("&bGithub: &7" + addon.getBugTrackerURL()),
-                ""
-        };
-    }
-
-    @Override
-    protected void execute(CommandSender sender, String[] args) {
-        sender.sendMessage(message);
-    }
-
-    @Override
-    protected void complete(CommandSender sender, String[] args, List<String> tabs) {
-
-    }
-
-}
diff --git a/src/main/java/io/github/mooy1/infinitylib/commands/ParentCommand.java b/src/main/java/io/github/mooy1/infinitylib/commands/ParentCommand.java
deleted file mode 100644
index 2daeddf..0000000
--- a/src/main/java/io/github/mooy1/infinitylib/commands/ParentCommand.java
+++ /dev/null
@@ -1,100 +0,0 @@
-package io.github.mooy1.infinitylib.commands;
-
-import java.util.Arrays;
-import java.util.HashMap;
-import java.util.HashSet;
-import java.util.List;
-import java.util.Map;
-import java.util.Set;
-
-import javax.annotation.Nonnull;
-import javax.annotation.ParametersAreNonnullByDefault;
-
-import org.bukkit.command.CommandSender;
-
-@ParametersAreNonnullByDefault
-public class ParentCommand extends SubCommand {
-
-    private final Map<String, SubCommand> commands = new HashMap<>();
-    private final SubCommand helpCommand = new HelpCommand(this);
-
-    public ParentCommand(String name, String description, String perm) {
-        super(name, description, perm);
-        addSub(helpCommand);
-    }
-
-    public ParentCommand(String name, String description, boolean op) {
-        super(name, description, op);
-        addSub(helpCommand);
-    }
-
-    public ParentCommand(String name, String description) {
-        super(name, description);
-        addSub(helpCommand);
-    }
-
-    @Nonnull
-    public final ParentCommand addSub(SubCommand command) {
-        if (command == this) {
-            throw new IllegalArgumentException("'" + command.name() + "' cannot be added to itself!");
-        }
-        if (command == parent) {
-            throw new IllegalArgumentException("Parent command '" + command.name() + "' cannot be added to child " + name());
-        }
-        commands.compute(command.name(), (name, cmd) -> {
-            if (cmd != null) {
-                throw new IllegalArgumentException("Duplicate command '" + command.name() + "' cannot be added to " + name());
-            }
-            command.parent = this;
-            return command;
-        });
-        return this;
-    }
-
-    @Override
-    protected final void execute(CommandSender sender, String[] args) {
-        if (args.length == 0) {
-            execute(sender);
-        }
-        else {
-            SubCommand command = commands.get(args[0]);
-            if (command != null && command.canUse(sender)) {
-                command.execute(sender, Arrays.copyOfRange(args, 1, args.length));
-            }
-        }
-    }
-
-    /**
-     * This is called when no sub command is used
-     */
-    protected void execute(CommandSender sender) {
-        helpCommand.execute(sender, new String[0]);
-    }
-
-    @Override
-    protected final void complete(CommandSender sender, String[] args, List<String> completions) {
-        SubCommand command = commands.get(args[0]);
-        if (command != null && command.canUse(sender)) {
-            command.complete(sender, Arrays.copyOfRange(args, 1, args.length), completions);
-        }
-        else {
-            for (SubCommand sub : commands.values()) {
-                if (sub.canUse(sender)) {
-                    completions.add(sub.name());
-                }
-            }
-        }
-    }
-
-    @Nonnull
-    final Set<SubCommand> available(CommandSender sender) {
-        Set<SubCommand> set = new HashSet<>();
-        for (SubCommand command : commands.values()) {
-            if (command.canUse(sender)) {
-                set.add(command);
-            }
-        }
-        return set;
-    }
-
-}
\ No newline at end of file
diff --git a/src/main/java/io/github/mooy1/infinitylib/commands/SubCommand.java b/src/main/java/io/github/mooy1/infinitylib/commands/SubCommand.java
deleted file mode 100644
index a9fc80d..0000000
--- a/src/main/java/io/github/mooy1/infinitylib/commands/SubCommand.java
+++ /dev/null
@@ -1,74 +0,0 @@
-package io.github.mooy1.infinitylib.commands;
-
-import java.util.List;
-import java.util.Locale;
-import java.util.function.Predicate;
-
-import javax.annotation.ParametersAreNonnullByDefault;
-
-import org.bukkit.command.CommandSender;
-
-/**
- * A command
- *
- * @author Mooy1
- */
-@ParametersAreNonnullByDefault
-public abstract class SubCommand {
-
-    private final Predicate<CommandSender> permission;
-    private final String description;
-    private final String name;
-    private String fullName;
-    ParentCommand parent;
-
-    protected SubCommand(String name, String description, String perm) {
-        this.name = name.toLowerCase(Locale.ROOT);
-        this.description = description;
-        this.permission = sender -> sender.hasPermission(perm);
-    }
-
-    protected SubCommand(String name, String description, boolean op) {
-        this.name = name.toLowerCase(Locale.ROOT);
-        this.description = description;
-        this.permission = op ? CommandSender::isOp : sender -> true;
-    }
-
-    protected SubCommand(String name, String description) {
-        this(name, description, false);
-    }
-
-    protected abstract void execute(CommandSender sender, String[] args);
-
-    protected abstract void complete(CommandSender sender, String[] args, List<String> completions);
-
-    public final boolean canUse(CommandSender sender) {
-        return permission.test(sender);
-    }
-
-    public final String name() {
-        return name;
-    }
-
-    public final String description() {
-        return description;
-    }
-
-    String fullName() {
-        if (fullName == null) {
-            fullName = parent.fullName() + " " + name();
-        }
-        return fullName;
-    }
-
-    @Override
-    public int hashCode() {
-        return name.hashCode();
-    }
-
-    @Override
-    public boolean equals(Object obj) {
-        return obj instanceof SubCommand && ((SubCommand) obj).name.equals(name);
-    }
-
-}
diff --git a/src/test/java/io/github/mooy1/infinitylib/TestInfinityLib.java b/src/test/java/io/github/mooy1/infinitylib/TestInfinityLib.java
deleted file mode 100644
index beaebb2..0000000
--- a/src/test/java/io/github/mooy1/infinitylib/TestInfinityLib.java
+++ /dev/null
@@ -1,25 +0,0 @@
-package io.github.mooy1.infinitylib;
-
-import org.junit.jupiter.api.Test;
-
-import static org.junit.jupiter.api.Assertions.assertEquals;
-import static org.junit.jupiter.api.Assertions.assertNotEquals;
-
-class TestInfinityLib {
-
-    @Test
-    void testVersion() {
-        assertNotEquals("${project.version}", InfinityLib.VERSION);
-    }
-
-    @Test
-    void testPackage() {
-        assertEquals("io.github.mooy1.infinitylib", InfinityLib.PACKAGE);
-    }
-
-    @Test
-    void testAddonPackage() {
-        assertEquals("io.github.mooy1", InfinityLib.ADDON_PACKAGE);
-    }
-
-}
diff --git a/src/test/java/io/github/mooy1/infinitylib/commands/MockParentCommand.java b/src/test/java/io/github/mooy1/infinitylib/commands/MockParentCommand.java
deleted file mode 100644
index 4e7f6ce..0000000
--- a/src/test/java/io/github/mooy1/infinitylib/commands/MockParentCommand.java
+++ /dev/null
@@ -1,19 +0,0 @@
-package io.github.mooy1.infinitylib.commands;
-
-import javax.annotation.ParametersAreNonnullByDefault;
-
-import org.bukkit.command.CommandSender;
-
-@ParametersAreNonnullByDefault
-public class MockParentCommand extends ParentCommand {
-
-    public MockParentCommand(String name) {
-        super(name, name);
-    }
-
-    @Override
-    protected void execute(CommandSender sender) {
-        sender.sendMessage(name());
-    }
-
-}
diff --git a/src/test/java/io/github/mooy1/infinitylib/commands/MockSubCommand.java b/src/test/java/io/github/mooy1/infinitylib/commands/MockSubCommand.java
deleted file mode 100644
index f8e7675..0000000
--- a/src/test/java/io/github/mooy1/infinitylib/commands/MockSubCommand.java
+++ /dev/null
@@ -1,34 +0,0 @@
-package io.github.mooy1.infinitylib.commands;
-
-import java.util.List;
-
-import javax.annotation.ParametersAreNonnullByDefault;
-
-import org.bukkit.command.CommandSender;
-
-@ParametersAreNonnullByDefault
-public class MockSubCommand extends SubCommand {
-
-    public MockSubCommand(String name, String perm) {
-        super(name, name, perm);
-    }
-
-    public MockSubCommand(String name, boolean op) {
-        super(name, name, op);
-    }
-
-    public MockSubCommand(String name) {
-        super(name, name);
-    }
-
-    @Override
-    protected void execute(CommandSender sender, String[] args) {
-        sender.sendMessage(name());
-    }
-
-    @Override
-    protected void complete(CommandSender sender, String[] args, List<String> tabs) {
-        tabs.add(name());
-    }
-
-}
diff --git a/src/test/java/io/github/mooy1/infinitylib/commands/TestAddonCommand.java b/src/test/java/io/github/mooy1/infinitylib/commands/TestAddonCommand.java
deleted file mode 100644
index 04f08b8..0000000
--- a/src/test/java/io/github/mooy1/infinitylib/commands/TestAddonCommand.java
+++ /dev/null
@@ -1,179 +0,0 @@
-package io.github.mooy1.infinitylib.commands;
-
-import java.util.List;
-import java.util.Objects;
-
-import org.bukkit.command.CommandMap;
-import org.bukkit.command.CommandSender;
-import org.junit.jupiter.api.AfterAll;
-import org.junit.jupiter.api.BeforeAll;
-import org.junit.jupiter.api.Test;
-
-import be.seeseemelk.mockbukkit.MockBukkit;
-import be.seeseemelk.mockbukkit.ServerMock;
-import be.seeseemelk.mockbukkit.entity.PlayerMock;
-import io.github.mooy1.infinitylib.core.AbstractAddon;
-import io.github.mooy1.infinitylib.core.MockAddon;
-
-import static org.junit.jupiter.api.Assertions.assertEquals;
-import static org.junit.jupiter.api.Assertions.assertFalse;
-import static org.junit.jupiter.api.Assertions.assertThrows;
-import static org.junit.jupiter.api.Assertions.assertTrue;
-
-class TestAddonCommand {
-
-    private static AddonCommand addonCommand;
-    private static CommandSender console;
-    private static ServerMock server;
-    private static String command;
-    private static CommandMap map;
-
-    @BeforeAll
-    public static void load() {
-        server = MockBukkit.mock();
-        map = server.getCommandMap();
-        MockBukkit.load(MockAddon.class);
-        command = "test";
-        addonCommand = new AddonCommand(command);
-        console = server.getConsoleSender();
-    }
-
-    @AfterAll
-    public static void unload() {
-        MockBukkit.unmock();
-    }
-
-    @Test
-    void testNoSuchCommand() {
-        assertThrows(NullPointerException.class, () -> new AddonCommand("fail"));
-    }
-
-    @Test
-    void testAddParentToChildCommand() {
-        ParentCommand child = new ParentCommand("child", "");
-        ParentCommand parent = new ParentCommand("parent", "").addSub(child);
-        assertThrows(IllegalArgumentException.class, () -> child.addSub(parent));
-    }
-
-    @Test
-    void testAddSubCommandToSelf() {
-        ParentCommand parent = new ParentCommand("parent", "");
-        assertThrows(IllegalArgumentException.class, () -> parent.addSub(parent));
-    }
-
-    @Test
-    void testDuplicateSubCommand() {
-        ParentCommand child = new ParentCommand("child", "");
-        ParentCommand parent = new ParentCommand("parent", "").addSub(child);
-        assertThrows(IllegalArgumentException.class, () -> parent.addSub(child));
-    }
-
-    @Test
-    void testSubCommand() {
-        String sub = "sub";
-        addonCommand.addSub(new MockSubCommand(sub));
-        assertResponse(console, sub);
-        assertCompletion(console, sub);
-        assertCompletion(console, sub, sub);
-    }
-
-    @Test
-    void testParentCommand() {
-        String parent = "parent";
-        String child = "child";
-        addonCommand.addSub(new MockParentCommand(parent).addSub(new MockSubCommand(child)));
-        assertResponse(console, parent);
-        assertResponse(console, parent, child);
-        assertCompletion(console, child, parent);
-    }
-
-    @Test
-    void testDefaultCommands() {
-        PlayerMock p = server.addPlayer();
-        assertTrue(getResponse(p, command, "info").contains("Info"));
-        assertTrue(getResponse(p, command, "aliases").contains("Aliases"));
-    }
-
-    @Test
-    void testOpSubCommand() {
-        String op = "op";
-        addonCommand.addSub(new MockSubCommand("op", true));
-
-        PlayerMock p = server.addPlayer();
-        assertFalse(getResponse(p, command).contains(op));
-        assertNoResponse(p, op);
-        assertNoCompletion(p, op);
-        assertNoCompletion(p, op, op);
-
-        p.setOp(true);
-        assertTrue(getResponse(p, command).contains(op));
-        assertResponse(p, op);
-        assertCompletion(p, op);
-        assertCompletion(p, op, op);
-    }
-
-    @Test
-    void testPermissionSubCommand() {
-        String perm = "perm";
-        addonCommand.addSub(new MockSubCommand(perm, perm));
-
-        PlayerMock p = server.addPlayer();
-        assertFalse(getResponse(p, command).contains(perm));
-        assertNoResponse(p, perm);
-        assertNoCompletion(p, perm);
-        assertNoCompletion(p, perm, perm);
-
-        p.addAttachment(AbstractAddon.instance()).setPermission(perm, true);
-        assertTrue(getResponse(p, command).contains(perm));
-        assertResponse(p, perm);
-        assertCompletion(p, perm);
-        assertCompletion(p, perm, perm);
-    }
-
-    @Test
-    void testHelp() {
-        String help = "help";
-        PlayerMock p = server.addPlayer();
-
-        String help1 = getResponse(p, command);
-        String help2 = getResponse(p, command, help);
-
-        assertTrue(help1.contains("Help"));
-        assertEquals(help1, help2);
-    }
-
-    private static String getResponse(PlayerMock p, String... args) {
-        p.performCommand(String.join(" ", args));
-        String temp;
-        StringBuilder response = new StringBuilder();
-        while ((temp = p.nextMessage()) != null) {
-            response.append(temp);
-        }
-        return response.toString();
-    }
-
-    private static void assertResponse(CommandSender sender, String... args) {
-        server.execute(command, sender, args).assertResponse(args[args.length - 1]);
-    }
-
-    private static void assertNoResponse(CommandSender sender, String... args) {
-        server.execute(command, sender, args).assertNoResponse();
-    }
-
-    private static void assertCompletion(CommandSender sender, String completion, String... args) {
-        assertTrue(completions(sender, args).contains(completion));
-    }
-
-    private static void assertNoCompletion(CommandSender sender, String completion, String... args) {
-        assertFalse(completions(sender, args).contains(completion));
-    }
-
-    private static List<String> completions(CommandSender sender, String... args) {
-        StringBuilder line = new StringBuilder(command).append(' ');
-        for (String arg : args) {
-            line.append(arg).append(' ');
-        }
-        return Objects.requireNonNull(map.tabComplete(sender, line.toString()));
-    }
-
-}
diff --git a/src/test/java/io/github/mooy1/infinitylib/common/MockEvent.java b/src/test/java/io/github/mooy1/infinitylib/common/MockEvent.java
deleted file mode 100644
index 4a88492..0000000
--- a/src/test/java/io/github/mooy1/infinitylib/common/MockEvent.java
+++ /dev/null
@@ -1,23 +0,0 @@
-package io.github.mooy1.infinitylib.common;
-
-import javax.annotation.Nonnull;
-
-import org.bukkit.event.Event;
-import org.bukkit.event.HandlerList;
-
-public final class MockEvent extends Event {
-
-    private static final HandlerList handlers = new HandlerList();
-
-    @Nonnull
-    @Override
-    public HandlerList getHandlers() {
-        return handlers;
-    }
-
-    @Nonnull
-    public static HandlerList getHandlerList() {
-        return handlers;
-    }
-
-}
diff --git a/src/test/java/io/github/mooy1/infinitylib/common/TestCoolDowns.java b/src/test/java/io/github/mooy1/infinitylib/common/TestCoolDowns.java
deleted file mode 100644
index 6a38842..0000000
--- a/src/test/java/io/github/mooy1/infinitylib/common/TestCoolDowns.java
+++ /dev/null
@@ -1,41 +0,0 @@
-package io.github.mooy1.infinitylib.common;
-
-import java.util.UUID;
-
-import org.junit.jupiter.api.AfterAll;
-import org.junit.jupiter.api.BeforeAll;
-import org.junit.jupiter.api.Test;
-
-import be.seeseemelk.mockbukkit.MockBukkit;
-import be.seeseemelk.mockbukkit.ServerMock;
-
-import static org.junit.jupiter.api.Assertions.assertFalse;
-import static org.junit.jupiter.api.Assertions.assertTrue;
-
-class TestCoolDowns {
-
-    private static ServerMock server;
-
-    @BeforeAll
-    public static void load() {
-        server = MockBukkit.mock();
-    }
-
-    @AfterAll
-    public static void unload() {
-        MockBukkit.unmock();
-    }
-
-    @Test
-    void testCheckAndReset() {
-        CoolDowns min = new CoolDowns(0);
-        CoolDowns max = new CoolDowns(System.currentTimeMillis());
-        UUID uuid = server.addPlayer().getUniqueId();
-
-        assertTrue(min.checkAndReset(uuid));
-        assertTrue(max.checkAndReset(uuid));
-        assertTrue(min.check(uuid));
-        assertFalse(max.check(uuid));
-    }
-
-}
diff --git a/src/test/java/io/github/mooy1/infinitylib/common/TestEvents.java b/src/test/java/io/github/mooy1/infinitylib/common/TestEvents.java
deleted file mode 100644
index 633343f..0000000
--- a/src/test/java/io/github/mooy1/infinitylib/common/TestEvents.java
+++ /dev/null
@@ -1,61 +0,0 @@
-package io.github.mooy1.infinitylib.common;
-
-import java.util.concurrent.atomic.AtomicBoolean;
-
-import org.bukkit.event.EventHandler;
-import org.bukkit.event.EventPriority;
-import org.bukkit.event.Listener;
-import org.junit.jupiter.api.AfterAll;
-import org.junit.jupiter.api.BeforeAll;
-import org.junit.jupiter.api.Test;
-
-import be.seeseemelk.mockbukkit.MockBukkit;
-import io.github.mooy1.infinitylib.core.MockAddon;
-
-import static io.github.mooy1.infinitylib.common.Events.addHandler;
-import static io.github.mooy1.infinitylib.common.Events.call;
-import static io.github.mooy1.infinitylib.common.Events.registerListener;
-import static org.junit.jupiter.api.Assertions.assertTrue;
-
-class TestEvents implements Listener {
-
-    private static boolean listenerCalled;
-
-    @BeforeAll
-    public static void load() {
-        MockBukkit.mock();
-        MockBukkit.load(MockAddon.class);
-    }
-
-    @AfterAll
-    public static void unload() {
-        MockBukkit.unmock();
-    }
-
-    @Test
-    void testCallEvent() {
-        call(new MockEvent());
-        MockBukkit.getMock().getPluginManager().assertEventFired(MockEvent.class);
-    }
-
-    @Test
-    void testRegisterListener() {
-        registerListener(this);
-        call(new MockEvent());
-        assertTrue(listenerCalled);
-    }
-
-    @Test
-    void testAddHandler() {
-        AtomicBoolean called = new AtomicBoolean();
-        addHandler(MockEvent.class, EventPriority.MONITOR, true, e -> called.set(true));
-        call(new MockEvent());
-        assertTrue(called.get());
-    }
-
-    @EventHandler
-    void onEvent(MockEvent e) {
-        listenerCalled = true;
-    }
-
-}
diff --git a/src/test/java/io/github/mooy1/infinitylib/common/TestPersistentType.java b/src/test/java/io/github/mooy1/infinitylib/common/TestPersistentType.java
deleted file mode 100644
index b5d28c9..0000000
--- a/src/test/java/io/github/mooy1/infinitylib/common/TestPersistentType.java
+++ /dev/null
@@ -1,104 +0,0 @@
-package io.github.mooy1.infinitylib.common;
-
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.List;
-
-import org.bukkit.Location;
-import org.bukkit.Material;
-import org.bukkit.NamespacedKey;
-import org.bukkit.inventory.ItemStack;
-import org.bukkit.persistence.PersistentDataContainer;
-import org.junit.jupiter.api.AfterAll;
-import org.junit.jupiter.api.BeforeAll;
-import org.junit.jupiter.api.Disabled;
-import org.junit.jupiter.api.Test;
-
-import be.seeseemelk.mockbukkit.MockBukkit;
-import be.seeseemelk.mockbukkit.ServerMock;
-import be.seeseemelk.mockbukkit.WorldMock;
-import be.seeseemelk.mockbukkit.persistence.PersistentDataContainerMock;
-import io.github.thebusybiscuit.slimefun4.implementation.SlimefunItems;
-
-import static org.junit.jupiter.api.Assertions.assertEquals;
-
-class TestPersistentType {
-
-    private static ServerMock server;
-    private static PersistentDataContainer container;
-    private static NamespacedKey key;
-
-    @BeforeAll
-    public static void load() {
-        server = MockBukkit.mock();
-        container = new PersistentDataContainerMock();
-        key = new NamespacedKey(MockBukkit.createMockPlugin(), "key");
-    }
-
-    @AfterAll
-    public static void unload() {
-        MockBukkit.unmock();
-    }
-
-    @Test
-    @Disabled(value = "MockBukkit issue")
-    void testItemStack() {
-        ItemStack item = new ItemStack(Material.OBSIDIAN);
-        container.set(key, PersistentType.ITEM_STACK, item);
-        assertEquals(item, container.get(key, PersistentType.ITEM_STACK));
-
-        item = SlimefunItems.ANCIENT_ALTAR;
-        container.set(key, PersistentType.ITEM_STACK, item);
-        assertEquals(item, container.get(key, PersistentType.ITEM_STACK));
-    }
-
-    @Test
-    @Disabled(value = "MockBukkit issue")
-    void testItemStackOld() {
-        ItemStack item = new ItemStack(Material.OBSIDIAN);
-        container.set(key, PersistentType.ITEM_STACK_OLD, item);
-        assertEquals(item, container.get(key, PersistentType.ITEM_STACK_OLD));
-
-        item = SlimefunItems.ANCIENT_ALTAR;
-        container.set(key, PersistentType.ITEM_STACK_OLD, item);
-        assertEquals(item, container.get(key, PersistentType.ITEM_STACK_OLD));
-    }
-
-    @Test
-    @Disabled(value = "MockBukkit issue")
-    void testItemStackList() {
-        List<ItemStack> list = new ArrayList<>();
-        container.set(key, PersistentType.ITEM_STACK_LIST, list);
-        assertEquals(list, container.get(key, PersistentType.ITEM_STACK_LIST));
-
-        list = Arrays.asList(new ItemStack(Material.PUMPKIN), SlimefunItems.ADVANCED_CIRCUIT_BOARD);
-        container.set(key, PersistentType.ITEM_STACK_LIST, list);
-        assertEquals(list, container.get(key, PersistentType.ITEM_STACK_LIST));
-    }
-
-    @Test
-    void testLocation() {
-        WorldMock world = new WorldMock();
-        server.addWorld(world);
-
-        Location location = new Location(null, 1, 2, 3);
-        container.set(key, PersistentType.LOCATION, location);
-        assertEquals(location, container.get(key, PersistentType.LOCATION));
-
-        location = new Location(world, 1, 2, 3);
-        container.set(key, PersistentType.LOCATION, location);
-        assertEquals(location, container.get(key, PersistentType.LOCATION));
-    }
-
-    @Test
-    void testStringList() {
-        List<String> list = new ArrayList<>();
-        container.set(key, PersistentType.STRING_LIST, list);
-        assertEquals(list, container.get(key, PersistentType.STRING_LIST));
-
-        list = Arrays.asList("a", "b", "c");
-        container.set(key, PersistentType.STRING_LIST, list);
-        assertEquals(list, container.get(key, PersistentType.STRING_LIST));
-    }
-
-}
diff --git a/src/test/java/io/github/mooy1/infinitylib/common/TestScheduler.java b/src/test/java/io/github/mooy1/infinitylib/common/TestScheduler.java
deleted file mode 100644
index 76e61d9..0000000
--- a/src/test/java/io/github/mooy1/infinitylib/common/TestScheduler.java
+++ /dev/null
@@ -1,116 +0,0 @@
-package io.github.mooy1.infinitylib.common;
-
-import java.util.concurrent.CompletableFuture;
-import java.util.concurrent.ExecutionException;
-import java.util.concurrent.atomic.AtomicBoolean;
-import java.util.concurrent.atomic.AtomicInteger;
-
-import org.junit.jupiter.api.AfterAll;
-import org.junit.jupiter.api.BeforeAll;
-import org.junit.jupiter.api.Test;
-
-import be.seeseemelk.mockbukkit.MockBukkit;
-import be.seeseemelk.mockbukkit.scheduler.BukkitSchedulerMock;
-import io.github.mooy1.infinitylib.core.MockAddon;
-
-import static io.github.mooy1.infinitylib.common.Scheduler.repeat;
-import static io.github.mooy1.infinitylib.common.Scheduler.repeatAsync;
-import static io.github.mooy1.infinitylib.common.Scheduler.run;
-import static io.github.mooy1.infinitylib.common.Scheduler.runAsync;
-import static org.junit.jupiter.api.Assertions.assertEquals;
-import static org.junit.jupiter.api.Assertions.assertFalse;
-import static org.junit.jupiter.api.Assertions.assertTrue;
-
-class TestScheduler {
-
-    private static BukkitSchedulerMock scheduler;
-
-    @BeforeAll
-    public static void load() {
-        scheduler = MockBukkit.mock().getScheduler();
-        MockBukkit.load(MockAddon.class);
-    }
-
-    @AfterAll
-    public static void unload() {
-        MockBukkit.unmock();
-    }
-
-    @Test
-    void testRun() throws ExecutionException, InterruptedException {
-        AtomicBoolean a = new AtomicBoolean();
-        CompletableFuture<Boolean> b = new CompletableFuture<>();
-
-        run(() -> a.set(true));
-        runAsync(() -> b.complete(true));
-
-        scheduler.performOneTick();
-
-        assertTrue(a.get());
-        assertTrue(b.get());
-    }
-
-    @Test
-    void testRunDelayed() throws ExecutionException, InterruptedException {
-        AtomicBoolean a = new AtomicBoolean();
-        CompletableFuture<Boolean> b = new CompletableFuture<>();
-
-        run(2, () -> a.set(true));
-        runAsync(2, () -> b.complete(true));
-
-        scheduler.performOneTick();
-
-        assertFalse(a.get());
-        assertFalse(b.isDone());
-
-        scheduler.performOneTick();
-
-        assertTrue(a.get());
-        assertTrue(b.get());
-    }
-
-    @Test
-    void testRepeat() throws ExecutionException, InterruptedException {
-        int times = 5;
-        AtomicInteger a = new AtomicInteger();
-        AtomicInteger b = new AtomicInteger();
-        CompletableFuture<Boolean> c = new CompletableFuture<>();
-
-        repeat(1, a::incrementAndGet);
-        repeatAsync(1, () -> {
-            if (b.incrementAndGet() == times) {
-                c.complete(true);
-            }
-        });
-
-        for (int i = 0; i < times; i++) {
-            scheduler.performOneTick();
-        }
-
-        assertEquals(times, a.get());
-        assertTrue(c.get());
-    }
-
-    @Test
-    void testRepeatDelayed() throws ExecutionException, InterruptedException {
-        int times = 4;
-        AtomicInteger a = new AtomicInteger();
-        AtomicInteger b = new AtomicInteger();
-        CompletableFuture<Boolean> c = new CompletableFuture<>();
-
-        repeat(1, 2, a::incrementAndGet);
-        repeatAsync(1, 2, () -> {
-            if (b.incrementAndGet() == times) {
-                c.complete(true);
-            }
-        });
-
-        for (int i = 0; i < times + 1; i++) {
-            scheduler.performOneTick();
-        }
-
-        assertEquals(times, a.get());
-        assertTrue(c.get());
-    }
-
-}
diff --git a/src/test/java/io/github/mooy1/infinitylib/common/TestStackUtils.java b/src/test/java/io/github/mooy1/infinitylib/common/TestStackUtils.java
deleted file mode 100644
index a0ce61d..0000000
--- a/src/test/java/io/github/mooy1/infinitylib/common/TestStackUtils.java
+++ /dev/null
@@ -1,115 +0,0 @@
-package io.github.mooy1.infinitylib.common;
-
-import org.bukkit.Material;
-import org.bukkit.inventory.ItemStack;
-import org.junit.jupiter.api.AfterAll;
-import org.junit.jupiter.api.BeforeAll;
-import org.junit.jupiter.api.Test;
-
-import be.seeseemelk.mockbukkit.MockBukkit;
-import io.github.thebusybiscuit.slimefun4.core.services.CustomItemDataService;
-import io.github.thebusybiscuit.slimefun4.implementation.Slimefun;
-import io.github.thebusybiscuit.slimefun4.implementation.SlimefunItems;
-import io.github.thebusybiscuit.slimefun4.implementation.setup.SlimefunItemSetup;
-import io.github.thebusybiscuit.slimefun4.libraries.dough.items.CustomItemStack;
-
-import static io.github.mooy1.infinitylib.common.StackUtils.getId;
-import static io.github.mooy1.infinitylib.common.StackUtils.getIdOrType;
-import static io.github.mooy1.infinitylib.common.StackUtils.isSimilar;
-import static io.github.mooy1.infinitylib.common.StackUtils.itemById;
-import static io.github.mooy1.infinitylib.common.StackUtils.itemByIdOrType;
-import static org.junit.jupiter.api.Assertions.assertEquals;
-import static org.junit.jupiter.api.Assertions.assertFalse;
-import static org.junit.jupiter.api.Assertions.assertNull;
-import static org.junit.jupiter.api.Assertions.assertTrue;
-
-class TestStackUtils {
-
-    @BeforeAll
-    public static void load() {
-        MockBukkit.mock();
-        SlimefunItemSetup.setup(MockBukkit.load(Slimefun.class));
-    }
-
-    @AfterAll
-    public static void unload() {
-        MockBukkit.unmock();
-    }
-
-    @Test
-    void testGetId() {
-        CustomItemDataService dataService = Slimefun.getItemDataService();
-        ItemStack item1 = SlimefunItems.ADVANCED_CIRCUIT_BOARD;
-        ItemStack item2 = new ItemStack(Material.IRON_BLOCK);
-
-        assertEquals(getId(item1), dataService.getItemData(item1).orElse(null));
-        assertEquals(getId(item2), dataService.getItemData(item2).orElse(null));
-        assertEquals(getId(item1.getItemMeta()), dataService.getItemData(item1.getItemMeta()).orElse(null));
-        assertEquals(getId(item2.getItemMeta()), dataService.getItemData(item2.getItemMeta()).orElse(null));
-    }
-
-    @Test
-    void testGetIdOrType() {
-        CustomItemDataService dataService = Slimefun.getItemDataService();
-        ItemStack item1 = SlimefunItems.ADVANCED_CIRCUIT_BOARD;
-        ItemStack item2 = new ItemStack(Material.IRON_BLOCK);
-
-        assertEquals(getIdOrType(item1), dataService.getItemData(item1).orElse(item1.getType().name()));
-        assertEquals(getIdOrType(item2), dataService.getItemData(item2).orElse(item2.getType().name()));
-    }
-
-    @Test
-    void testItemById() {
-        ItemStack item1 = SlimefunItems.ADVANCED_CIRCUIT_BOARD;
-        String id1 = SlimefunItems.ADVANCED_CIRCUIT_BOARD.getItemId();
-        String id2 = Material.IRON_BLOCK.name();
-
-        assertEquals(itemById(id1), item1);
-        assertNull(itemById(id2));
-    }
-
-    @Test
-    void testItemByIdOrType() {
-        ItemStack item1 = SlimefunItems.ADVANCED_CIRCUIT_BOARD;
-        ItemStack item2 = new ItemStack(Material.IRON_BLOCK);
-        String id1 = SlimefunItems.ADVANCED_CIRCUIT_BOARD.getItemId();
-        String id2 = item2.getType().name();
-
-        assertEquals(itemByIdOrType(id1), item1);
-        assertEquals(itemByIdOrType(id2), item2);
-    }
-
-    @Test
-    void testIsSimilar() {
-        ItemStack nul = null;
-        ItemStack air = new ItemStack(Material.AIR);
-
-        ItemStack stone = new ItemStack(Material.STONE);
-        ItemStack salt = SlimefunItems.SALT;
-        ItemStack sugar = new ItemStack(Material.SUGAR);
-        ItemStack dust = new CustomItemStack(Material.SUGAR, "Dust");
-
-        assertTrue(isSimilar(nul, nul));
-        assertTrue(isSimilar(nul, air));
-        assertTrue(isSimilar(air, air));
-
-        assertFalse(isSimilar(nul, salt));
-        assertFalse(isSimilar(air, salt));
-        assertFalse(isSimilar(nul, sugar));
-        assertFalse(isSimilar(air, sugar));
-        assertFalse(isSimilar(nul, dust));
-        assertFalse(isSimilar(air, dust));
-
-        assertTrue(isSimilar(sugar, sugar));
-        assertFalse(isSimilar(sugar, stone));
-        assertFalse(isSimilar(sugar, salt));
-        assertFalse(isSimilar(sugar, dust));
-
-        assertTrue(isSimilar(salt, salt));
-        assertFalse(isSimilar(salt, sugar));
-        assertFalse(isSimilar(salt, dust));
-
-        assertTrue(isSimilar(dust, dust));
-    }
-
-}
diff --git a/src/test/java/io/github/mooy1/infinitylib/core/MockAddon.java b/src/test/java/io/github/mooy1/infinitylib/core/MockAddon.java
deleted file mode 100644
index eebdc55..0000000
--- a/src/test/java/io/github/mooy1/infinitylib/core/MockAddon.java
+++ /dev/null
@@ -1,67 +0,0 @@
-package io.github.mooy1.infinitylib.core;
-
-import java.io.File;
-
-import javax.annotation.Nullable;
-
-import org.bukkit.plugin.PluginDescriptionFile;
-import org.bukkit.plugin.java.JavaPluginLoader;
-
-import be.seeseemelk.mockbukkit.MockBukkit;
-import id.arvin3108.standalone.SlimefunAddonInstance;
-import io.github.thebusybiscuit.slimefun4.implementation.Slimefun;
-
-public class MockAddon extends AbstractAddon {
-
-    private final MockAddonTest test;
-    private final SlimefunAddonInstance SFAInstance;
-
-    public MockAddon(JavaPluginLoader loader, PluginDescriptionFile description, File dataFolder, File file) {
-        this(loader, description, dataFolder, file, Environment.LIBRARY_TESTING, null);
-    }
-
-    public MockAddon(JavaPluginLoader loader, PluginDescriptionFile description, File dataFolder, File file,
-                     Environment environment, @Nullable MockAddonTest test) {
-        super(loader, description, dataFolder, file, environment);
-        this.test = test;
-        MockBukkit.load(Slimefun.class);
-        this.SFAInstance = new SlimefunAddonInstance("Mooy1", "InfinityLib");
-        SFAInstance.createAndStartUpdater(test == MockAddonTest.BAD_GITHUB_PATH ? "[!#$" : "master",
-                test == MockAddonTest.MISSING_KEY ? "missing" : "auto-update");
-    }
-
-    @Override
-    protected void load() {
-        if (test == MockAddonTest.THROW_EXCEPTION) {
-            throw new RuntimeException();
-        }
-        else if (test == MockAddonTest.CALL_SUPER) {
-            super.onLoad();
-        }
-    }
-
-    @Override
-    protected void enable() {
-        if (test == MockAddonTest.THROW_EXCEPTION) {
-            throw new RuntimeException();
-        }
-        else if (test == MockAddonTest.CALL_SUPER) {
-            super.onEnable();
-        }
-    }
-
-    @Override
-    protected void disable() {
-        if (test == MockAddonTest.THROW_EXCEPTION) {
-            throw new RuntimeException();
-        }
-        else if (test == MockAddonTest.CALL_SUPER) {
-            super.onDisable();
-        }
-    }
-
-    public SlimefunAddonInstance getSFAInstance() {
-        return SFAInstance;
-    }
-
-}
diff --git a/src/test/java/io/github/mooy1/infinitylib/core/MockAddonTest.java b/src/test/java/io/github/mooy1/infinitylib/core/MockAddonTest.java
deleted file mode 100644
index fbe6191..0000000
--- a/src/test/java/io/github/mooy1/infinitylib/core/MockAddonTest.java
+++ /dev/null
@@ -1,10 +0,0 @@
-package io.github.mooy1.infinitylib.core;
-
-enum MockAddonTest {
-
-    BAD_GITHUB_PATH,
-    CALL_SUPER,
-    THROW_EXCEPTION,
-    MISSING_KEY
-
-}
diff --git a/src/test/java/io/github/mooy1/infinitylib/core/TestAbstractAddon.java b/src/test/java/io/github/mooy1/infinitylib/core/TestAbstractAddon.java
deleted file mode 100644
index e4bb9dc..0000000
--- a/src/test/java/io/github/mooy1/infinitylib/core/TestAbstractAddon.java
+++ /dev/null
@@ -1,85 +0,0 @@
-package io.github.mooy1.infinitylib.core;
-
-import org.junit.jupiter.api.AfterAll;
-import org.junit.jupiter.api.BeforeAll;
-import org.junit.jupiter.api.Test;
-import org.junit.jupiter.api.function.ThrowingSupplier;
-
-import be.seeseemelk.mockbukkit.MockBukkit;
-import be.seeseemelk.mockbukkit.ServerMock;
-
-import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;
-import static org.junit.jupiter.api.Assertions.assertEquals;
-import static org.junit.jupiter.api.Assertions.assertFalse;
-import static org.junit.jupiter.api.Assertions.assertNotNull;
-import static org.junit.jupiter.api.Assertions.assertThrows;
-
-class TestAbstractAddon {
-
-    private static ServerMock server;
-    private static MockAddon addon;
-
-    @BeforeAll
-    public static void load() {
-        server = MockBukkit.mock();
-        addon = MockBukkit.load(MockAddon.class);
-    }
-
-    @AfterAll
-    public static void unload() {
-        MockBukkit.unmock();
-    }
-
-    @Test
-    void testNotNullEnvironment() {
-        assertNotNull(MockAddon.environment());
-    }
-
-    @Test
-    void testNotNullConfig() {
-        assertNotNull(MockAddon.config());
-    }
-
-    @Test
-    void testCreateKey() {
-        assertNotNull(MockAddon.createKey("test"));
-    }
-
-    @Test
-    void testAutoUpdatedDisabled() {
-        assertFalse(addon.getSFAInstance().autoUpdatesEnabled());
-    }
-
-    @Test
-    void testBugTrackerURL() {
-        assertEquals("https://github.com/Mooy1/InfinityLib/issues", addon.getSFAInstance().getBugTrackerURL());
-    }
-
-    @Test
-    void testGlobalTick() {
-        server.getScheduler().performOneTick();
-        assertEquals(1, addon.getSFAInstance().slimefunTickCount());
-    }
-
-    @Test
-    void testCommand() {
-        assertNotNull(MockAddon.instance().getAddonCommand());
-        server.executeConsole("mockaddon").assertSucceeded();
-    }
-
-    @Test
-    void testInstance() {
-        assertDoesNotThrow((ThrowingSupplier<Object>) MockAddon::instance);
-    }
-
-    @Test
-    void testDuplicateInstance() {
-        assertThrows(RuntimeException.class, () -> MockBukkit.load(MockAddon.class));
-    }
-
-    @Test
-    void testNotRelocatedLive() {
-        assertThrows(RuntimeException.class, () -> MockBukkit.load(MockAddon.class, Environment.LIVE, null));
-    }
-
-}
diff --git a/src/test/java/io/github/mooy1/infinitylib/core/TestAddonConfig.java b/src/test/java/io/github/mooy1/infinitylib/core/TestAddonConfig.java
deleted file mode 100644
index 2fe6b86..0000000
--- a/src/test/java/io/github/mooy1/infinitylib/core/TestAddonConfig.java
+++ /dev/null
@@ -1,61 +0,0 @@
-package io.github.mooy1.infinitylib.core;
-
-import org.junit.jupiter.api.AfterAll;
-import org.junit.jupiter.api.BeforeAll;
-import org.junit.jupiter.api.Test;
-
-import be.seeseemelk.mockbukkit.MockBukkit;
-
-import static org.junit.jupiter.api.Assertions.assertEquals;
-import static org.junit.jupiter.api.Assertions.assertThrows;
-
-class TestAddonConfig {
-
-    private static AddonConfig config;
-
-    @BeforeAll
-    public static void load() {
-        MockBukkit.mock();
-        MockBukkit.load(MockAddon.class);
-        config = new AddonConfig("test.yml");
-    }
-
-    @AfterAll
-    public static void unload() {
-        MockBukkit.unmock();
-    }
-
-    @Test
-    void testNoDefaults() {
-        assertThrows(IllegalStateException.class, () -> new AddonConfig("fail.yml"));
-    }
-
-    @Test
-    void testComments() {
-        assertEquals("\n# test\n", config.getComment("test"));
-        assertEquals("\n# line a\n# line b\n", config.getComment("section"));
-        assertEquals("\n  # test\n", config.getComment("section.test"));
-    }
-
-    @Test
-    void testSaveToString() {
-        String correct =
-                "\n" +
-                        "# test\n" +
-                        "test: test\n" +
-                        "\n" +
-                        "# line a\n" +
-                        "# line b\n" +
-                        "section:\n" +
-                        "\n" +
-                        "  # test\n" +
-                        "  list:\n" +
-                        "  - a\n" +
-                        "  - b\n" +
-                        "\n" +
-                        "  # test\n" +
-                        "  test: test\n";
-        assertEquals(correct, config.saveToString());
-    }
-
-}
diff --git a/src/test/java/io/github/mooy1/infinitylib/core/TestAddonLive.java b/src/test/java/io/github/mooy1/infinitylib/core/TestAddonLive.java
deleted file mode 100644
index 12d49a4..0000000
--- a/src/test/java/io/github/mooy1/infinitylib/core/TestAddonLive.java
+++ /dev/null
@@ -1,81 +0,0 @@
-package io.github.mooy1.infinitylib.core;
-
-import org.bukkit.plugin.PluginDescriptionFile;
-import org.junit.jupiter.api.AfterAll;
-import org.junit.jupiter.api.BeforeAll;
-import org.junit.jupiter.api.BeforeEach;
-import org.junit.jupiter.api.Test;
-
-import be.seeseemelk.mockbukkit.MockBukkit;
-import be.seeseemelk.mockbukkit.plugin.PluginManagerMock;
-import io.github.mooy1.otheraddon.MockOtherAddon;
-
-import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;
-import static org.junit.jupiter.api.Assertions.assertThrows;
-
-class TestAddonLive {
-
-    private static PluginManagerMock manager;
-
-    @BeforeAll
-    public static void load() {
-        manager = MockBukkit.mock().getPluginManager();
-    }
-
-    @AfterAll
-    public static void unload() {
-        MockBukkit.unmock();
-    }
-
-    @BeforeEach
-    void clear() {
-        manager.clearPlugins();
-    }
-
-    @Test
-    void testNullInstance() {
-        assertThrows(NullPointerException.class, AbstractAddon::instance);
-    }
-
-    @Test
-    void testNoCommand() {
-        assertDoesNotThrow(() -> MockBukkit.loadWith(MockAddon.class,
-                new PluginDescriptionFile("MockAddon", "", MockAddon.class.getName())));
-        assertThrows(NullPointerException.class, () -> MockAddon.instance().getAddonCommand());
-    }
-
-    @Test
-    void testSharedInfinityLib() {
-        PluginDescriptionFile desc = new PluginDescriptionFile("MockAddon", "", MockOtherAddon.class.getName());
-        assertThrows(RuntimeException.class, () -> MockBukkit.load(MockOtherAddon.class, desc, Environment.LIBRARY_TESTING));
-    }
-
-    @Test
-    void testBadGithubStrings() {
-        assertThrows(RuntimeException.class,
-                () -> MockBukkit.load(MockAddon.class, Environment.LIBRARY_TESTING, MockAddonTest.BAD_GITHUB_PATH));
-    }
-
-    @Test
-    void testMissingAutoUpdateKey() {
-        assertDoesNotThrow(
-                () -> MockBukkit.load(MockAddon.class, Environment.LIBRARY_TESTING, MockAddonTest.MISSING_KEY));
-    }
-
-    @Test
-    void testSuperEnable() {
-        assertDoesNotThrow(
-                () -> MockBukkit.load(MockAddon.class, Environment.LIBRARY_TESTING, MockAddonTest.CALL_SUPER));
-        assertDoesNotThrow(
-                () -> manager.disablePlugin(MockAddon.instance()));
-    }
-
-    @Test
-    void testErrorThrown() {
-        assertDoesNotThrow(
-                () -> MockBukkit.load(MockAddon.class, Environment.LIBRARY_TESTING, MockAddonTest.THROW_EXCEPTION));
-        assertDoesNotThrow(
-                () -> manager.disablePlugin(MockAddon.instance()));
-    }
-
-}
diff --git a/src/test/java/io/github/mooy1/infinitylib/core/TestAddonTesting.java b/src/test/java/io/github/mooy1/infinitylib/core/TestAddonTesting.java
deleted file mode 100644
index 1192618..0000000
--- a/src/test/java/io/github/mooy1/infinitylib/core/TestAddonTesting.java
+++ /dev/null
@@ -1,84 +0,0 @@
-package io.github.mooy1.infinitylib.core;
-
-import org.bukkit.plugin.Plugin;
-import org.bukkit.plugin.PluginDescriptionFile;
-import org.junit.jupiter.api.AfterAll;
-import org.junit.jupiter.api.BeforeAll;
-import org.junit.jupiter.api.BeforeEach;
-import org.junit.jupiter.api.Test;
-import org.junit.jupiter.api.function.ThrowingSupplier;
-
-import be.seeseemelk.mockbukkit.MockBukkit;
-import be.seeseemelk.mockbukkit.plugin.PluginManagerMock;
-import io.github.mooy1.otheraddon.MockOtherAddon;
-
-import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;
-import static org.junit.jupiter.api.Assertions.assertNotNull;
-import static org.junit.jupiter.api.Assertions.assertThrows;
-
-class TestAddonTesting {
-
-    private static PluginManagerMock manager;
-
-    @BeforeAll
-    public static void load() {
-        manager = MockBukkit.mock().getPluginManager();
-    }
-
-    @AfterAll
-    public static void unload() {
-        MockBukkit.unmock();
-    }
-
-    @BeforeEach
-    void clear() {
-        manager.clearPlugins();
-    }
-
-    @Test
-    void testSharedInfinityLib() {
-        PluginDescriptionFile desc = new PluginDescriptionFile("MockAddon", "", MockOtherAddon.class.getName());
-        assertThrows(RuntimeException.class, () -> MockBukkit.load(MockOtherAddon.class, desc, Environment.TESTING));
-    }
-
-    @Test
-    void testBadGithubStrings() {
-        assertThrows(RuntimeException.class,
-                () -> MockBukkit.load(MockAddon.class, Environment.TESTING, MockAddonTest.BAD_GITHUB_PATH));
-    }
-
-    @Test
-    void testMissingAutoUpdateKey() {
-        assertThrows(RuntimeException.class,
-                () -> MockBukkit.load(MockAddon.class, Environment.TESTING, MockAddonTest.MISSING_KEY));
-    }
-
-    @Test
-    void testSuperEnable() {
-        assertThrows(IllegalStateException.class,
-                () -> MockBukkit.load(MockAddon.class, Environment.TESTING, MockAddonTest.CALL_SUPER));
-        assertThrows(NullPointerException.class, MockAddon::instance);
-        Plugin plugin = manager.getPlugin("MockAddon");
-        assertNotNull(plugin);
-        assertThrows(IllegalStateException.class,
-                () -> manager.enablePlugin(plugin));
-        assertDoesNotThrow((ThrowingSupplier<Object>) MockAddon::instance);
-        assertThrows(IllegalStateException.class,
-                () -> manager.disablePlugin(plugin));
-    }
-
-    @Test
-    void testErrorThrown() {
-        assertThrows(RuntimeException.class,
-                () -> MockBukkit.load(MockAddon.class, Environment.TESTING, MockAddonTest.THROW_EXCEPTION));
-        assertThrows(NullPointerException.class, MockAddon::instance);
-        Plugin plugin = manager.getPlugin("MockAddon");
-        assertNotNull(plugin);
-        assertThrows(RuntimeException.class,
-                () -> manager.enablePlugin(plugin));
-        assertDoesNotThrow((ThrowingSupplier<Object>) MockAddon::instance);
-        assertThrows(RuntimeException.class,
-                () -> manager.disablePlugin(plugin));
-    }
-
-}
diff --git a/src/test/java/io/github/mooy1/infinitylib/groups/TestGroups.java b/src/test/java/io/github/mooy1/infinitylib/groups/TestGroups.java
deleted file mode 100644
index 4a1c70f..0000000
--- a/src/test/java/io/github/mooy1/infinitylib/groups/TestGroups.java
+++ /dev/null
@@ -1,76 +0,0 @@
-package io.github.mooy1.infinitylib.groups;
-
-import java.util.Objects;
-import java.util.concurrent.CompletableFuture;
-import java.util.concurrent.ExecutionException;
-
-import org.bukkit.Material;
-import org.bukkit.event.inventory.ClickType;
-import org.bukkit.event.inventory.InventoryAction;
-import org.bukkit.event.inventory.InventoryClickEvent;
-import org.bukkit.event.inventory.InventoryType;
-import org.bukkit.inventory.ItemStack;
-import org.junit.jupiter.api.AfterAll;
-import org.junit.jupiter.api.BeforeAll;
-import org.junit.jupiter.api.Test;
-
-import be.seeseemelk.mockbukkit.MockBukkit;
-import be.seeseemelk.mockbukkit.ServerMock;
-import be.seeseemelk.mockbukkit.entity.PlayerMock;
-import io.github.mooy1.infinitylib.common.Events;
-import io.github.mooy1.infinitylib.core.MockAddon;
-import io.github.thebusybiscuit.slimefun4.api.player.PlayerProfile;
-import io.github.thebusybiscuit.slimefun4.core.guide.SlimefunGuideMode;
-import io.github.thebusybiscuit.slimefun4.implementation.Slimefun;
-import me.mrCookieSlime.CSCoreLibPlugin.general.Inventory.MenuListener;
-
-import static org.junit.jupiter.api.Assertions.assertEquals;
-import static org.junit.jupiter.api.Assertions.assertFalse;
-import static org.junit.jupiter.api.Assertions.assertNull;
-import static org.junit.jupiter.api.Assertions.assertTrue;
-
-class TestGroups {
-
-    private static ServerMock server;
-    private static MockAddon addon;
-
-    @BeforeAll
-    public static void load() {
-        server = MockBukkit.mock();
-        addon = MockBukkit.load(MockAddon.class);
-    }
-
-    @AfterAll
-    public static void unload() {
-        MockBukkit.unmock();
-    }
-
-    @Test
-    void testGroups() throws ExecutionException, InterruptedException {
-        SubGroup sub = new SubGroup("sub", new ItemStack(Material.STONE));
-        MultiGroup multi = new MultiGroup("multi", new ItemStack(Material.DIAMOND), sub);
-        PlayerMock p = server.addPlayer();
-        CompletableFuture<PlayerProfile> profile = new CompletableFuture<>();
-        PlayerProfile.get(p, profile::complete);
-
-        new MenuListener(Objects.requireNonNull(Slimefun.instance()));
-        multi.register(addon.getSFAInstance());
-        multi.open(p, profile.get(), SlimefunGuideMode.SURVIVAL_MODE);
-
-        assertTrue(sub.isRegistered());
-        assertTrue(sub.isHidden(p));
-        assertFalse(multi.isHidden(p));
-        assertEquals(sub.getItem(p), p.getOpenInventory().getItem(9));
-
-        Events.call(new InventoryClickEvent(p.getOpenInventory(), InventoryType.SlotType.CONTAINER,
-                9, ClickType.LEFT, InventoryAction.PICKUP_ALL));
-
-        assertNull(p.getOpenInventory().getItem(9));
-
-        Events.call(new InventoryClickEvent(p.getOpenInventory(), InventoryType.SlotType.CONTAINER,
-                1, ClickType.LEFT, InventoryAction.PICKUP_ALL));
-
-        assertEquals(sub.getItem(p), p.getOpenInventory().getItem(9));
-    }
-
-}
diff --git a/src/test/java/io/github/mooy1/infinitylib/machines/TestCraftingBlock.java b/src/test/java/io/github/mooy1/infinitylib/machines/TestCraftingBlock.java
deleted file mode 100644
index c623a79..0000000
--- a/src/test/java/io/github/mooy1/infinitylib/machines/TestCraftingBlock.java
+++ /dev/null
@@ -1,81 +0,0 @@
-package io.github.mooy1.infinitylib.machines;
-
-import org.bukkit.Material;
-import org.bukkit.inventory.ItemStack;
-import org.junit.jupiter.api.AfterAll;
-import org.junit.jupiter.api.BeforeAll;
-import org.junit.jupiter.api.MethodOrderer;
-import org.junit.jupiter.api.Order;
-import org.junit.jupiter.api.Test;
-import org.junit.jupiter.api.TestMethodOrder;
-
-import be.seeseemelk.mockbukkit.MockBukkit;
-import io.github.mooy1.infinitylib.core.MockAddon;
-import io.github.mooy1.infinitylib.groups.SubGroup;
-import io.github.thebusybiscuit.slimefun4.api.items.SlimefunItemStack;
-import io.github.thebusybiscuit.slimefun4.api.recipes.RecipeType;
-import io.github.thebusybiscuit.slimefun4.implementation.SlimefunItems;
-import io.github.thebusybiscuit.slimefun4.libraries.dough.items.CustomItemStack;
-
-import static org.junit.jupiter.api.Assertions.assertEquals;
-import static org.junit.jupiter.api.Assertions.assertNotNull;
-import static org.junit.jupiter.api.Assertions.assertNull;
-import static org.junit.jupiter.api.Assertions.assertSame;
-import static org.junit.jupiter.api.Assertions.assertThrows;
-
-@TestMethodOrder(MethodOrderer.OrderAnnotation.class)
-class TestCraftingBlock {
-
-    private static MockAddon addon;
-    private static CraftingBlock machine;
-    private static ItemStack input1;
-    private static ItemStack input2;
-    private static ItemStack output;
-
-    @BeforeAll
-    public static void load() {
-        MockBukkit.mock();
-        addon = MockBukkit.load(MockAddon.class);
-        machine = new CraftingBlock(new SubGroup("key", new ItemStack(Material.DIAMOND)),
-                new SlimefunItemStack("ID", Material.STONE, "name"),
-                RecipeType.ANCIENT_ALTAR, new ItemStack[0]);
-        output = new CustomItemStack(SlimefunItems.SALT, 2);
-        input1 = SlimefunItems.COPPER_DUST.clone();
-        input2 = new ItemStack(Material.NETHERITE_BLOCK, 2).clone();
-    }
-
-    @AfterAll
-    public static void unload() {
-        MockBukkit.unmock();
-    }
-
-    @Test
-    @Order(0)
-    void testRegister() {
-        machine.register(addon.getSFAInstance());
-        assertSame(MachineLayout.CRAFTING_DEFAULT, machine.layout);
-    }
-
-    @Test
-    @Order(1)
-    void testAddRecipes() {
-        machine.addRecipe(output, input1, input2, null, null, null, null, null, null, null);
-        assertThrows(IllegalArgumentException.class, () -> machine.addRecipe(output));
-    }
-
-    @Test
-    void testProcess() {
-        ItemStack[] input = new ItemStack[9];
-        input[0] = input1;
-        assertNull(machine.getOutput(input));
-
-        input[1] = input2;
-        CraftingBlockRecipe recipe = machine.getOutput(input);
-        assertNotNull(recipe);
-
-        recipe.consume(input);
-        assertEquals(0, input[0].getAmount());
-        assertEquals(0, input[1].getAmount());
-    }
-
-}
diff --git a/src/test/java/io/github/mooy1/infinitylib/machines/TestMachineBlock.java b/src/test/java/io/github/mooy1/infinitylib/machines/TestMachineBlock.java
deleted file mode 100644
index 949919c..0000000
--- a/src/test/java/io/github/mooy1/infinitylib/machines/TestMachineBlock.java
+++ /dev/null
@@ -1,109 +0,0 @@
-package io.github.mooy1.infinitylib.machines;
-
-import org.bukkit.Material;
-import org.bukkit.inventory.ItemStack;
-import org.junit.jupiter.api.AfterAll;
-import org.junit.jupiter.api.BeforeAll;
-import org.junit.jupiter.api.MethodOrderer;
-import org.junit.jupiter.api.Order;
-import org.junit.jupiter.api.Test;
-import org.junit.jupiter.api.TestMethodOrder;
-
-import be.seeseemelk.mockbukkit.MockBukkit;
-import io.github.mooy1.infinitylib.core.MockAddon;
-import io.github.mooy1.infinitylib.groups.SubGroup;
-import io.github.thebusybiscuit.slimefun4.api.items.SlimefunItemStack;
-import io.github.thebusybiscuit.slimefun4.api.recipes.RecipeType;
-import io.github.thebusybiscuit.slimefun4.implementation.Slimefun;
-import io.github.thebusybiscuit.slimefun4.implementation.SlimefunItems;
-import io.github.thebusybiscuit.slimefun4.libraries.dough.items.CustomItemStack;
-
-import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;
-import static org.junit.jupiter.api.Assertions.assertEquals;
-import static org.junit.jupiter.api.Assertions.assertNotNull;
-import static org.junit.jupiter.api.Assertions.assertNull;
-import static org.junit.jupiter.api.Assertions.assertSame;
-import static org.junit.jupiter.api.Assertions.assertThrows;
-
-@TestMethodOrder(MethodOrderer.OrderAnnotation.class)
-class TestMachineBlock {
-
-    private static MockAddon addon;
-    private static MachineBlock machine;
-    private static ItemStack input1;
-    private static ItemStack input2;
-    private static ItemStack output;
-
-    @BeforeAll
-    public static void load() {
-        MockBukkit.mock();
-        addon = MockBukkit.load(MockAddon.class);
-        Slimefun.getCfg().setValue("URID.enable-tickers", true);
-        machine = new MachineBlock(new SubGroup("key", new ItemStack(Material.DIAMOND)),
-                new SlimefunItemStack("ID", Material.STONE, "name"),
-                RecipeType.ANCIENT_ALTAR, new ItemStack[0]);
-        output = new CustomItemStack(SlimefunItems.SALT, 2);
-        input1 = SlimefunItems.COPPER_DUST;
-        input2 = new ItemStack(Material.NETHERITE_BLOCK, 2);
-    }
-
-    @AfterAll
-    public static void unload() {
-        MockBukkit.unmock();
-    }
-
-    @Test
-    @Order(0)
-    void testRegister() {
-        assertThrows(IllegalStateException.class, () -> machine.register(addon.getSFAInstance()));
-
-        machine.ticksPerOutput(2);
-
-        assertThrows(IllegalStateException.class, () -> machine.register(addon.getSFAInstance()));
-
-        machine.energyPerTick(10);
-
-        assertDoesNotThrow(() -> machine.register(addon.getSFAInstance()));
-        assertEquals(20, machine.energyCapacity);
-        assertSame(MachineLayout.MACHINE_DEFAULT, machine.layout);
-    }
-
-    @Test
-    @Order(1)
-    void testAddRecipes() {
-        machine.addRecipe(output, input1, input2);
-        assertThrows(IllegalArgumentException.class, () -> machine.addRecipe(output));
-    }
-
-    @Test
-    void testProcess() {
-        ItemStack[] input = new ItemStack[2];
-        assertNull(machine.getOutput(input));
-
-        input[0] = input1.clone();
-        input[1] = input2.clone();
-        MachineBlockRecipe out = machine.getOutput(input);
-
-        assertNotNull(out);
-        assertSame(output, out.output);
-
-        out.consume();
-
-        assertEquals(0, input[0].getAmount());
-        assertEquals(0, input[1].getAmount());
-        assertNull(machine.getOutput(input));
-
-        input[0] = new CustomItemStack(input2, 4);
-        input[1] = new CustomItemStack(input1, 2);
-
-        out = machine.getOutput(input);
-
-        assertNotNull(out);
-
-        out.consume();
-
-        assertEquals(2, input[0].getAmount());
-        assertEquals(1, input[1].getAmount());
-    }
-
-}
diff --git a/src/test/java/io/github/mooy1/infinitylib/machines/TestMachineRecipeType.java b/src/test/java/io/github/mooy1/infinitylib/machines/TestMachineRecipeType.java
deleted file mode 100644
index 12eec3c..0000000
--- a/src/test/java/io/github/mooy1/infinitylib/machines/TestMachineRecipeType.java
+++ /dev/null
@@ -1,52 +0,0 @@
-package io.github.mooy1.infinitylib.machines;
-
-import java.util.concurrent.atomic.AtomicInteger;
-
-import org.bukkit.NamespacedKey;
-import org.bukkit.inventory.ItemStack;
-import org.junit.jupiter.api.AfterAll;
-import org.junit.jupiter.api.BeforeAll;
-import org.junit.jupiter.api.Test;
-
-import be.seeseemelk.mockbukkit.MockBukkit;
-import io.github.mooy1.infinitylib.core.MockAddon;
-import io.github.thebusybiscuit.slimefun4.api.recipes.RecipeType;
-
-import static org.junit.jupiter.api.Assertions.assertEquals;
-
-class TestMachineRecipeType {
-
-    private static MockAddon addon;
-    private static MachineRecipeType type;
-
-    @BeforeAll
-    public static void load() {
-        MockBukkit.mock();
-        addon = MockBukkit.load(MockAddon.class);
-        type = new MachineRecipeType("key", null);
-    }
-
-    @AfterAll
-    public static void unload() {
-        MockBukkit.unmock();
-    }
-
-    @Test
-    void testKey() {
-        assertEquals(new RecipeType(new NamespacedKey(addon, "key"), null), type);
-    }
-
-    @Test
-    void testSubscribe() {
-        AtomicInteger recipesAccepted = new AtomicInteger();
-        type.register(new ItemStack[0], null);
-        type.sendRecipesTo((i, o) -> recipesAccepted.getAndIncrement());
-
-        assertEquals(1, recipesAccepted.get());
-
-        type.register(new ItemStack[0], null);
-
-        assertEquals(2, recipesAccepted.get());
-    }
-
-}
diff --git a/src/test/java/io/github/mooy1/otheraddon/MockOtherAddon.java b/src/test/java/io/github/mooy1/otheraddon/MockOtherAddon.java
deleted file mode 100644
index 1036462..0000000
--- a/src/test/java/io/github/mooy1/otheraddon/MockOtherAddon.java
+++ /dev/null
@@ -1,27 +0,0 @@
-package io.github.mooy1.otheraddon;
-
-import java.io.File;
-
-import org.bukkit.plugin.PluginDescriptionFile;
-import org.bukkit.plugin.java.JavaPluginLoader;
-
-import io.github.mooy1.infinitylib.core.Environment;
-import io.github.mooy1.infinitylib.core.MockAddon;
-
-public final class MockOtherAddon extends MockAddon {
-
-    public MockOtherAddon(JavaPluginLoader loader, PluginDescriptionFile description, File dataFolder, File file, Environment environment) {
-        super(loader, description, dataFolder, file, environment, null);
-    }
-
-    @Override
-    protected void enable() {
-
-    }
-
-    @Override
-    protected void disable() {
-
-    }
-
-}
diff --git a/src/test/resources/config.yml b/src/test/resources/config.yml
deleted file mode 100644
index 8265842..0000000
--- a/src/test/resources/config.yml
+++ /dev/null
@@ -1 +0,0 @@
-auto-update: true
\ No newline at end of file
diff --git a/src/test/resources/plugin.yml b/src/test/resources/plugin.yml
deleted file mode 100644
index 9a1a4b5..0000000
--- a/src/test/resources/plugin.yml
+++ /dev/null
@@ -1,10 +0,0 @@
-name: MockAddon
-version: Testing
-main: io.github.mooy1.infinitylib.core.MockAddon
-depend: [Slimefun]
-
-commands:
-  mockaddon:
-    description: MockAddon command
-  test:
-    description: Testing command
diff --git a/src/test/resources/test.yml b/src/test/resources/test.yml
deleted file mode 100644
index ef30e3c..0000000
--- a/src/test/resources/test.yml
+++ /dev/null
@@ -1,16 +0,0 @@
-
-# test
-test: test
-
-# line a
-
-# line b
-section:
-
-  # test
-  list:
-  - a
-  - b
-
-  # test
-  test: test
-- 
2.41.0.windows.3

