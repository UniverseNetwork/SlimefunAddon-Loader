From 1134e50b6921be4cefb5de242265f385d332905f Mon Sep 17 00:00:00 2001
From: ARVIN3108 <70049331+ARVIN3108@users.noreply.github.com>
Date: Sun, 3 Mar 2024 10:25:32 +0700
Subject: [PATCH] ExtraGear

---
 pom.xml                                       | 110 ++----------------
 .../addons}/extragear/ArmorSet.java           |   6 +-
 .../addons}/extragear/ExtraGear.java          | 108 +++++++----------
 src/main/resources/config.yml                 |   2 -
 src/main/resources/plugin.yml                 |   7 --
 5 files changed, 52 insertions(+), 181 deletions(-)
 rename src/main/java/{io/github/thebusybiscuit => id/universenetwork/sfa_loader/addons}/extragear/ArmorSet.java (95%)
 rename src/main/java/{io/github/thebusybiscuit => id/universenetwork/sfa_loader/addons}/extragear/ExtraGear.java (71%)
 delete mode 100644 src/main/resources/config.yml
 delete mode 100644 src/main/resources/plugin.yml

diff --git a/pom.xml b/pom.xml
index 4547c44..a2e38ce 100644
--- a/pom.xml
+++ b/pom.xml
@@ -1,96 +1,28 @@
 <project xmlns="http://maven.apache.org/POM/4.0.0"
-    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
-
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
     <modelVersion>4.0.0</modelVersion>
+
+    <parent>
+        <groupId>id.universenetwork.sfa_loader</groupId>
+        <artifactId>Addons</artifactId>
+        <version>UNOFFICIAL</version>
+    </parent>
+
     <groupId>io.github.thebusybiscuit</groupId>
     <artifactId>ExtraGear</artifactId>
     <version>1.0.0</version>
 
-    <properties>
-        <maven.compiler.source>1.8</maven.compiler.source>
-        <maven.compiler.target>1.8</maven.compiler.target>
-        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
-    </properties>
-
     <repositories>
-        <repository>
-            <id>paper-repo</id>
-            <url>https://repo.destroystokyo.com/repository/maven-public/</url>
-        </repository>
         <repository>
             <id>spigot-repo</id>
             <url>https://hub.spigotmc.org/nexus/content/repositories/snapshots/</url>
         </repository>
-        <repository>
-            <id>jitpack.io</id>
-            <url>https://jitpack.io</url>
-        </repository>
-        <repository>
-            <id>bstats-repo</id>
-            <url>https://repo.codemc.org/repository/maven-public</url>
-        </repository>
     </repositories>
 
     <build>
         <finalName>${project.name} v${project.version}</finalName>
-        <defaultGoal>clean package</defaultGoal>
         <sourceDirectory>${basedir}/src/main/java</sourceDirectory>
-
-        <resources>
-            <resource>
-                <directory>${basedir}/src/main/resources</directory>
-                <filtering>true</filtering>
-                <includes>
-                    <include>*</include>
-                </includes>
-            </resource>
-            <resource>
-                <directory>${basedir}</directory>
-
-                <includes>
-                    <include>LICENSE</include>
-                </includes>
-            </resource>
-        </resources>
-
-        <plugins>
-            <plugin>
-                <groupId>org.apache.maven.plugins</groupId>
-                <artifactId>maven-shade-plugin</artifactId>
-                <version>3.2.4</version>
-
-                <configuration>
-
-                    <!-- Shade dependencies into the output jar -->
-                    <relocations>
-                        <relocation>
-                            <pattern>org.bstats.bukkit</pattern>
-                            <shadedPattern>io.github.thebusybiscuit.extragear.bstats</shadedPattern>
-                        </relocation>
-                    </relocations>
-
-                    <!-- Exclude unneeded metadata files from shaded dependencies -->
-                    <filters>
-                        <filter>
-                            <artifact>*:*</artifact>
-                            <excludes>
-                                <exclude>META-INF/*</exclude>
-                            </excludes>
-                        </filter>
-                    </filters>
-                </configuration>
-
-                <executions>
-                    <execution>
-                        <phase>package</phase>
-                        <goals>
-                            <goal>shade</goal>
-                        </goals>
-                    </execution>
-                </executions>
-            </plugin>
-        </plugins>
     </build>
 
     <dependencies>
@@ -100,29 +32,5 @@
             <version>1.16.5-R0.1-SNAPSHOT</version>
             <scope>provided</scope>
         </dependency>
-
-        <dependency>
-            <groupId>com.github.thebusybiscuit</groupId>
-            <artifactId>Slimefun4</artifactId>
-            <version>RC-27</version>
-            <scope>provided</scope>
-            <exclusions>
-                <exclusion>
-                    <groupId>io.github.baked-libs</groupId>
-                    <artifactId>dough-api</artifactId>
-                </exclusion>
-                <exclusion>
-                    <groupId>org.bstats</groupId>
-                    <artifactId>bstats-bukkit</artifactId>
-                </exclusion>
-            </exclusions>
-        </dependency>
-
-        <dependency>
-            <groupId>org.bstats</groupId>
-            <artifactId>bstats-bukkit</artifactId>
-            <version>1.7</version>
-            <scope>compile</scope>
-        </dependency>
     </dependencies>
 </project>
\ No newline at end of file
diff --git a/src/main/java/io/github/thebusybiscuit/extragear/ArmorSet.java b/src/main/java/id/universenetwork/sfa_loader/addons/extragear/ArmorSet.java
similarity index 95%
rename from src/main/java/io/github/thebusybiscuit/extragear/ArmorSet.java
rename to src/main/java/id/universenetwork/sfa_loader/addons/extragear/ArmorSet.java
index c5645c1..6517939 100644
--- a/src/main/java/io/github/thebusybiscuit/extragear/ArmorSet.java
+++ b/src/main/java/id/universenetwork/sfa_loader/addons/extragear/ArmorSet.java
@@ -1,9 +1,8 @@
-package io.github.thebusybiscuit.extragear;
+package id.universenetwork.sfa_loader.addons.extragear;
 
 import org.bukkit.Material;
 
 enum ArmorSet {
-
     LEATHER(Material.LEATHER_HELMET, Material.LEATHER_CHESTPLATE, Material.LEATHER_LEGGINGS, Material.LEATHER_BOOTS),
     IRON(Material.IRON_HELMET, Material.IRON_CHESTPLATE, Material.IRON_LEGGINGS, Material.IRON_BOOTS),
     GOLD(Material.GOLDEN_HELMET, Material.GOLDEN_CHESTPLATE, Material.GOLDEN_LEGGINGS, Material.GOLDEN_BOOTS),
@@ -36,5 +35,4 @@ enum ArmorSet {
     public Material getBoots() {
         return boots;
     }
-
-}
+}
\ No newline at end of file
diff --git a/src/main/java/io/github/thebusybiscuit/extragear/ExtraGear.java b/src/main/java/id/universenetwork/sfa_loader/addons/extragear/ExtraGear.java
similarity index 71%
rename from src/main/java/io/github/thebusybiscuit/extragear/ExtraGear.java
rename to src/main/java/id/universenetwork/sfa_loader/addons/extragear/ExtraGear.java
index b5085ff..63677c3 100644
--- a/src/main/java/io/github/thebusybiscuit/extragear/ExtraGear.java
+++ b/src/main/java/id/universenetwork/sfa_loader/addons/extragear/ExtraGear.java
@@ -1,62 +1,50 @@
-package io.github.thebusybiscuit.extragear;
-
-import java.util.Arrays;
-import java.util.List;
-
-import org.bstats.bukkit.Metrics;
-import org.bukkit.Material;
-import org.bukkit.NamespacedKey;
-import org.bukkit.enchantments.Enchantment;
-import org.bukkit.inventory.ItemStack;
-import org.bukkit.plugin.java.JavaPlugin;
+package id.universenetwork.sfa_loader.addons.extragear;
 
+import id.universenetwork.sfa_loader.libraries.guizhanlib.slimefun.addon.AbstractAddon;
+import id.universenetwork.sfa_loader.libraries.guizhanlib.slimefun.addon.SlimefunAddonInstance;
+import id.universenetwork.sfa_loader.template.AddonTemplate;
 import io.github.thebusybiscuit.slimefun4.api.items.ItemGroup;
 import io.github.thebusybiscuit.slimefun4.api.items.SlimefunItem;
 import io.github.thebusybiscuit.slimefun4.api.items.SlimefunItemStack;
 import io.github.thebusybiscuit.slimefun4.api.recipes.RecipeType;
 import io.github.thebusybiscuit.slimefun4.api.researches.Research;
-import io.github.thebusybiscuit.slimefun4.api.SlimefunAddon;
+import io.github.thebusybiscuit.slimefun4.implementation.SlimefunItems;
 import io.github.thebusybiscuit.slimefun4.libraries.dough.collections.Pair;
-import io.github.thebusybiscuit.slimefun4.libraries.dough.config.Config;
 import io.github.thebusybiscuit.slimefun4.libraries.dough.items.CustomItemStack;
-import io.github.thebusybiscuit.slimefun4.libraries.dough.updater.GitHubBuildsUpdater;
-import io.github.thebusybiscuit.slimefun4.implementation.SlimefunItems;
 import io.github.thebusybiscuit.slimefun4.utils.ChatUtils;
+import org.bukkit.Material;
+import org.bukkit.enchantments.Enchantment;
+import org.bukkit.inventory.ItemStack;
 
-public class ExtraGear extends JavaPlugin implements SlimefunAddon {
+import java.util.Arrays;
+import java.util.Collections;
+import java.util.List;
 
+public class ExtraGear extends AddonTemplate {
     private int researchId = 3300;
     private ItemGroup itemGroup;
 
     @Override
-    public void onEnable() {
-        Config cfg = new Config(this);
-
-        if (cfg.getBoolean("options.auto-update") && getDescription().getVersion().startsWith("DEV - ")) {
-            new GitHubBuildsUpdater(this, getFile(), "TheBusyBiscuit/ExtraGear/master").start();
-        }
+    public void onLoad() {
+        itemGroup = new ItemGroup(AbstractAddon.createKey("items"), new CustomItemStack(Material.DIAMOND_SWORD, "&6ExtraGear"), 1);
 
-        new Metrics(this, 6469);
+        registerSword(Material.IRON_SWORD, "COPPER", SlimefunItems.COPPER_INGOT, Collections.singletonList(new Pair<>(Enchantment.DAMAGE_UNDEAD, 2)));
+        registerArmor(ArmorSet.LEATHER, "COPPER", SlimefunItems.COPPER_INGOT, Collections.singletonList(new Pair<>(Enchantment.PROTECTION_EXPLOSIONS, 2)));
 
-        itemGroup = new ItemGroup(new NamespacedKey(this, "items"), new CustomItemStack(Material.DIAMOND_SWORD, "&6ExtraGear"), 1);
+        registerSword(Material.IRON_SWORD, "TIN", SlimefunItems.TIN_INGOT, Collections.singletonList(new Pair<>(Enchantment.DAMAGE_ALL, 1)));
+        registerArmor(ArmorSet.IRON, "TIN", SlimefunItems.TIN_INGOT, Collections.singletonList(new Pair<>(Enchantment.PROTECTION_EXPLOSIONS, 3)));
 
-        registerSword(Material.IRON_SWORD, "COPPER", SlimefunItems.COPPER_INGOT, Arrays.asList(new Pair<>(Enchantment.DAMAGE_UNDEAD, 2)));
-        registerArmor(ArmorSet.LEATHER, "COPPER", SlimefunItems.COPPER_INGOT, Arrays.asList(new Pair<>(Enchantment.PROTECTION_EXPLOSIONS, 2)));
+        registerSword(Material.IRON_SWORD, "SILVER", SlimefunItems.SILVER_INGOT, Collections.singletonList(new Pair<>(Enchantment.DAMAGE_ALL, 2)));
+        registerArmor(ArmorSet.IRON, "SILVER", SlimefunItems.SILVER_INGOT, Collections.singletonList(new Pair<>(Enchantment.PROTECTION_ENVIRONMENTAL, 2)));
 
-        registerSword(Material.IRON_SWORD, "TIN", SlimefunItems.TIN_INGOT, Arrays.asList(new Pair<>(Enchantment.DAMAGE_ALL, 1)));
-        registerArmor(ArmorSet.IRON, "TIN", SlimefunItems.TIN_INGOT, Arrays.asList(new Pair<>(Enchantment.PROTECTION_EXPLOSIONS, 3)));
-
-        registerSword(Material.IRON_SWORD, "SILVER", SlimefunItems.SILVER_INGOT, Arrays.asList(new Pair<>(Enchantment.DAMAGE_ALL, 2)));
-        registerArmor(ArmorSet.IRON, "SILVER", SlimefunItems.SILVER_INGOT, Arrays.asList(new Pair<>(Enchantment.PROTECTION_ENVIRONMENTAL, 2)));
-
-        registerSword(Material.IRON_SWORD, "ALUMINUM", SlimefunItems.ALUMINUM_INGOT, Arrays.asList(new Pair<>(Enchantment.DAMAGE_ARTHROPODS, 3)));
+        registerSword(Material.IRON_SWORD, "ALUMINUM", SlimefunItems.ALUMINUM_INGOT, Collections.singletonList(new Pair<>(Enchantment.DAMAGE_ARTHROPODS, 3)));
         registerArmor(ArmorSet.IRON, "ALUMINUM", SlimefunItems.ALUMINUM_INGOT, Arrays.asList(new Pair<>(Enchantment.PROTECTION_EXPLOSIONS, 2), new Pair<>(Enchantment.DURABILITY, 2)));
 
         registerSword(Material.IRON_SWORD, "LEAD", SlimefunItems.LEAD_INGOT, Arrays.asList(new Pair<>(Enchantment.DAMAGE_ALL, 3), new Pair<>(Enchantment.DURABILITY, 8)));
         registerArmor(ArmorSet.IRON, "LEAD", SlimefunItems.LEAD_INGOT, Arrays.asList(new Pair<>(Enchantment.PROTECTION_ENVIRONMENTAL, 3), new Pair<>(Enchantment.DURABILITY, 8)));
 
-        registerSword(Material.IRON_SWORD, "ZINC", SlimefunItems.ZINC_INGOT, Arrays.asList(new Pair<>(Enchantment.DAMAGE_ALL, 2)));
-        registerArmor(ArmorSet.IRON, "ZINC", SlimefunItems.ZINC_INGOT, Arrays.asList(new Pair<>(Enchantment.PROTECTION_ENVIRONMENTAL, 3)));
+        registerSword(Material.IRON_SWORD, "ZINC", SlimefunItems.ZINC_INGOT, Collections.singletonList(new Pair<>(Enchantment.DAMAGE_ALL, 2)));
+        registerArmor(ArmorSet.IRON, "ZINC", SlimefunItems.ZINC_INGOT, Collections.singletonList(new Pair<>(Enchantment.PROTECTION_ENVIRONMENTAL, 3)));
 
         registerSword(Material.IRON_SWORD, "MAGNESIUM", SlimefunItems.MAGNESIUM_INGOT, Arrays.asList(new Pair<>(Enchantment.DAMAGE_ALL, 2), new Pair<>(Enchantment.DURABILITY, 5)));
         registerArmor(ArmorSet.IRON, "MAGNESIUM", SlimefunItems.MAGNESIUM_INGOT, Arrays.asList(new Pair<>(Enchantment.PROTECTION_ENVIRONMENTAL, 2), new Pair<>(Enchantment.DURABILITY, 5)));
@@ -86,60 +74,46 @@ public class ExtraGear extends JavaPlugin implements SlimefunAddon {
     private void registerSword(Material type, String component, ItemStack item, List<Pair<Enchantment, Integer>> enchantments) {
         SlimefunItemStack is = new SlimefunItemStack(component + "_SWORD", type, "&r" + ChatUtils.humanize(component) + " Sword");
 
-        for (Pair<Enchantment, Integer> enchantment : enchantments) {
+        for (Pair<Enchantment, Integer> enchantment : enchantments)
             is.addUnsafeEnchantment(enchantment.getFirstValue(), enchantment.getSecondValue());
-        }
 
-        SlimefunItem slimefunItem = new SlimefunItem(itemGroup, is, RecipeType.ENHANCED_CRAFTING_TABLE, new ItemStack[] { null, item, null, null, item, null, null, new ItemStack(Material.STICK), null });
-        slimefunItem.register(this);
+        SlimefunItem slimefunItem = new SlimefunItem(itemGroup, is, RecipeType.ENHANCED_CRAFTING_TABLE, new ItemStack[]{null, item, null, null, item, null, null, new ItemStack(Material.STICK), null});
+        slimefunItem.register(SlimefunAddonInstance.getSFAInstance());
 
         researchId++;
 
-        Research research = new Research(new NamespacedKey(this, component.toLowerCase() + "_sword"), researchId, ChatUtils.humanize(component) + " Sword", 3);
+        Research research = new Research(AbstractAddon.createKey(component.toLowerCase() + "_sword"), researchId, ChatUtils.humanize(component) + " Sword", 3);
         research.addItems(slimefunItem);
         research.register();
     }
 
     private void registerArmor(ArmorSet armorset, String component, ItemStack item, List<Pair<Enchantment, Integer>> enchantments) {
         String humanizedComponent = ChatUtils.humanize(component);
-        SlimefunItemStack[] armor = { new SlimefunItemStack(component + "_HELMET", armorset.getHelmet(), "&f" + humanizedComponent + " Helmet"),
+        SlimefunItemStack[] armor = {new SlimefunItemStack(component + "_HELMET", armorset.getHelmet(), "&f" + humanizedComponent + " Helmet"),
                 new SlimefunItemStack(component + "_CHESTPLATE", armorset.getChestplate(), "&f" + humanizedComponent + " Chestplate"),
                 new SlimefunItemStack(component + "_LEGGINGS", armorset.getLeggings(), "&f" + humanizedComponent + " Leggings"),
-                new SlimefunItemStack(component + "_BOOTS", armorset.getBoots(), "&f" + humanizedComponent + " Boots") };
+                new SlimefunItemStack(component + "_BOOTS", armorset.getBoots(), "&f" + humanizedComponent + " Boots")};
 
-        for (Pair<Enchantment, Integer> enchantment : enchantments) {
-            for (ItemStack is : armor) {
+        for (Pair<Enchantment, Integer> enchantment : enchantments)
+            for (ItemStack is : armor)
                 is.addUnsafeEnchantment(enchantment.getFirstValue(), enchantment.getSecondValue());
-            }
-        }
 
-        SlimefunItem helmet = new SlimefunItem(itemGroup, armor[0], RecipeType.ARMOR_FORGE, new ItemStack[] { item, item, item, item, null, item, null, null, null });
-        helmet.register(this);
+        SlimefunItem helmet = new SlimefunItem(itemGroup, armor[0], RecipeType.ARMOR_FORGE, new ItemStack[]{item, item, item, item, null, item, null, null, null});
+        helmet.register(SlimefunAddonInstance.getSFAInstance());
 
-        SlimefunItem chestplate = new SlimefunItem(itemGroup, armor[1], RecipeType.ARMOR_FORGE, new ItemStack[] { item, null, item, item, item, item, item, item, item });
-        chestplate.register(this);
+        SlimefunItem chestplate = new SlimefunItem(itemGroup, armor[1], RecipeType.ARMOR_FORGE, new ItemStack[]{item, null, item, item, item, item, item, item, item});
+        chestplate.register(SlimefunAddonInstance.getSFAInstance());
 
-        SlimefunItem leggings = new SlimefunItem(itemGroup, armor[2], RecipeType.ARMOR_FORGE, new ItemStack[] { item, item, item, item, null, item, item, null, item });
-        leggings.register(this);
+        SlimefunItem leggings = new SlimefunItem(itemGroup, armor[2], RecipeType.ARMOR_FORGE, new ItemStack[]{item, item, item, item, null, item, item, null, item});
+        leggings.register(SlimefunAddonInstance.getSFAInstance());
 
-        SlimefunItem boots = new SlimefunItem(itemGroup, armor[3], RecipeType.ARMOR_FORGE, new ItemStack[] { null, null, null, item, null, item, item, null, item });
-        boots.register(this);
+        SlimefunItem boots = new SlimefunItem(itemGroup, armor[3], RecipeType.ARMOR_FORGE, new ItemStack[]{null, null, null, item, null, item, item, null, item});
+        boots.register(SlimefunAddonInstance.getSFAInstance());
 
         researchId++;
 
-        Research research = new Research(new NamespacedKey(this, component.toLowerCase() + "_armor"), researchId, humanizedComponent + " Armor", 5);
+        Research research = new Research(AbstractAddon.createKey(component.toLowerCase() + "_armor"), researchId, humanizedComponent + " Armor", 5);
         research.addItems(helmet, chestplate, leggings, boots);
         research.register();
     }
-
-    @Override
-    public JavaPlugin getJavaPlugin() {
-        return this;
-    }
-
-    @Override
-    public String getBugTrackerURL() {
-        return "https://github.com/TheBusyBiscuit/ExtraGear/issues";
-    }
-
-}
+}
\ No newline at end of file
diff --git a/src/main/resources/config.yml b/src/main/resources/config.yml
deleted file mode 100644
index e9bcdf9..0000000
--- a/src/main/resources/config.yml
+++ /dev/null
@@ -1,2 +0,0 @@
-options:
-  auto-update: true
\ No newline at end of file
diff --git a/src/main/resources/plugin.yml b/src/main/resources/plugin.yml
deleted file mode 100644
index 9d25072..0000000
--- a/src/main/resources/plugin.yml
+++ /dev/null
@@ -1,7 +0,0 @@
-name: ExtraGear
-version: ${project.version}
-author: TheBusyBiscuit
-depend: [Slimefun]
-
-api-version: 1.14
-main: io.github.thebusybiscuit.extragear.ExtraGear
\ No newline at end of file
-- 
2.44.0.windows.1

